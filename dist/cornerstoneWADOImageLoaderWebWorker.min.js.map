{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///cornerstoneWADOImageLoaderWebWorker.min.js","webpack:///webpack/bootstrap ec82da010b37f517d9b5","webpack:///./webWorker/decodeTask/decodeImageFrame.js","webpack:///./webWorker/decodeTask/decoders/decodeLittleEndian.js","webpack:///./webWorker/decodeTask/decoders/decodeBigEndian.js","webpack:///./webWorker/decodeTask/decoders/decodeRLE.js","webpack:///./webWorker/decodeTask/decoders/decodeJPEGBaseline.js","webpack:///./webWorker/decodeTask/decoders/decodeJPEGLossless.js","webpack:///./version.js","webpack:///./shared/getMinMax.js","webpack:///./webWorker/decodeTask/decoders/decodeJPEGLS.js","webpack:///./webWorker/decodeTask/decoders/decodeJPEG2000.js","webpack:///./webWorker/index.js","webpack:///./webWorker/webWorker.js","webpack:///./webWorker/decodeTask/decodeTask.js"],"names":["root","factory","exports","module","define","amd","self","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","10","_interopRequireDefault","obj","default","decodeImageFrame","imageFrame","transferSyntax","pixelData","decodeConfig","options","start","Date","getTime","_decodeLittleEndian2","_decodeBigEndian2","_decodeRLE2","_decodeJPEGBaseline2","_decodeJPEGLossless2","_decodeJPEGLS2","_decodeJPEG2","Error","end","decodeTimeInMS","value","_decodeLittleEndian","_decodeBigEndian","_decodeRLE","_decodeJPEGBaseline","_decodeJPEGLossless","_decodeJPEGLS","_decodeJPEG","11","decodeLittleEndian","arrayBuffer","buffer","offset","byteOffset","length","bitsAllocated","slice","pixelRepresentation","Uint16Array","Int16Array","Float32Array","12","swap16","val","decodeBigEndian","13","decodeRLE","planarConfiguration","decode8Planar","decode8","decode16","frameData","frameSize","rows","columns","outFrame","ArrayBuffer","samplesPerPixel","header","DataView","data","Int8Array","out","outIndex","numSegments","getInt32","inIndex","maxIndex","endOfSegment","j","Uint8Array","highByte","14","decodeJPEGBaseline","JpegImage","jpeg","parse","colorTransform","getData","getData16","15","decodeJPEGLossless","lossless","Decoder","byteOutput","decoder","decompressedData","decode","17","2","getMinMax","storedPixelData","min","max","storedPixel","numPixels","index","Math","5","jpegLSDecode","isSigned","dataPtr","charLS","_malloc","writeArrayToMemory","imagePtrPtr","imageSizePtr","widthPtr","heightPtr","bitsPerSamplePtr","stridePtr","allowedLossyErrorPtr","componentsPtr","interleaveModePtr","result","ccall","image","width","getValue","height","bitsPerSample","stride","components","allowedLossyError","interleaveMode","undefined","imagePtr","set","HEAP8","HEAP16","_free","initializeJPEGLS","CharLS","_jpegls_decode","decodeJPEGLS","6","decodeJpx","jpxImage","JpxImage","tileCount","tiles","items","decodeOpenJPEG","bytesPerPixel","signed","openJPEG","imageSizeXPtr","imageSizeYPtr","imageSizeCompPtr","t0","console","log","sx","sy","nbChannels","perf_timetodecode","src32","Int32Array","HEAP32","from","t1","decodeOpenJpeg2000","photometricInterpretation","initializeJPEG2000","usePDFJS","OpenJPEG","_jp2_decode","decodeJPEG2000","arguments","61","version","registerTaskHandler","_version","_webWorker","_decodeTask","_decodeTask2","62","initialize","initialized","config","webWorkerTaskPaths","importScripts","keys","taskHandlers","forEach","key","taskConfiguration","postMessage","taskType","status","workerIndex","taskHandler","loadWebWorkerTask","sourcePath","onmessage","msg","handler","transferList","63","loadCodecs","codecsLoaded","decodeTask","codecsPath","initializeCodecsOnStartup","loadCodecsOnStartup","calculateMinMax","minMax","_getMinMax2","strict","smallestPixelValue","warn","largestPixelValue","doneCallback","_decodeImageFrame2","_getMinMax","_decodeImageFrame"],"mappings":"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","file":"cornerstoneWADOImageLoaderWebWorker.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"cornerstoneWADOImageLoaderWebWorker\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cornerstoneWADOImageLoaderWebWorker\"] = factory();\n\telse\n\t\troot[\"cornerstoneWADOImageLoaderWebWorker\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","/*! cornerstone-wado-image-loader - 2.0.0 - 2018-04-06 | (c) 2016 Chris Hafey | https://github.com/cornerstonejs/cornerstoneWADOImageLoader */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"cornerstoneWADOImageLoaderWebWorker\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cornerstoneWADOImageLoaderWebWorker\"] = factory();\n\telse\n\t\troot[\"cornerstoneWADOImageLoaderWebWorker\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 61);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 10:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _decodeLittleEndian = __webpack_require__(11);\n\nvar _decodeLittleEndian2 = _interopRequireDefault(_decodeLittleEndian);\n\nvar _decodeBigEndian = __webpack_require__(12);\n\nvar _decodeBigEndian2 = _interopRequireDefault(_decodeBigEndian);\n\nvar _decodeRLE = __webpack_require__(13);\n\nvar _decodeRLE2 = _interopRequireDefault(_decodeRLE);\n\nvar _decodeJPEGBaseline = __webpack_require__(14);\n\nvar _decodeJPEGBaseline2 = _interopRequireDefault(_decodeJPEGBaseline);\n\nvar _decodeJPEGLossless = __webpack_require__(15);\n\nvar _decodeJPEGLossless2 = _interopRequireDefault(_decodeJPEGLossless);\n\nvar _decodeJPEGLS = __webpack_require__(5);\n\nvar _decodeJPEGLS2 = _interopRequireDefault(_decodeJPEGLS);\n\nvar _decodeJPEG = __webpack_require__(6);\n\nvar _decodeJPEG2 = _interopRequireDefault(_decodeJPEG);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction decodeImageFrame(imageFrame, transferSyntax, pixelData, decodeConfig, options) {\n  var start = new Date().getTime();\n\n  if (transferSyntax === '1.2.840.10008.1.2') {\n    // Implicit VR Little Endian\n    imageFrame = (0, _decodeLittleEndian2.default)(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.1') {\n    // Explicit VR Little Endian\n    imageFrame = (0, _decodeLittleEndian2.default)(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.2') {\n    // Explicit VR Big Endian (retired)\n    imageFrame = (0, _decodeBigEndian2.default)(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.1.99') {\n    // Deflate transfer syntax (deflated by dicomParser)\n    imageFrame = (0, _decodeLittleEndian2.default)(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.5') {\n    // RLE Lossless\n    imageFrame = (0, _decodeRLE2.default)(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.50') {\n    // JPEG Baseline lossy process 1 (8 bit)\n    imageFrame = (0, _decodeJPEGBaseline2.default)(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.51') {\n    // JPEG Baseline lossy process 2 & 4 (12 bit)\n    imageFrame = (0, _decodeJPEGBaseline2.default)(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.57') {\n    // JPEG Lossless, Nonhierarchical (Processes 14)\n    imageFrame = (0, _decodeJPEGLossless2.default)(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.70') {\n    // JPEG Lossless, Nonhierarchical (Processes 14 [Selection 1])\n    imageFrame = (0, _decodeJPEGLossless2.default)(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.80') {\n    // JPEG-LS Lossless Image Compression\n    imageFrame = (0, _decodeJPEGLS2.default)(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.81') {\n    // JPEG-LS Lossy (Near-Lossless) Image Compression\n    imageFrame = (0, _decodeJPEGLS2.default)(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.90') {\n    // JPEG 2000 Lossless\n    imageFrame = (0, _decodeJPEG2.default)(imageFrame, pixelData, decodeConfig, options);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.91') {\n    // JPEG 2000 Lossy\n    imageFrame = (0, _decodeJPEG2.default)(imageFrame, pixelData, decodeConfig, options);\n  } else {\n    throw new Error('no decoder for transfer syntax ' + transferSyntax);\n  }\n\n  /* Don't know if these work...\n   // JPEG 2000 Part 2 Multicomponent Image Compression (Lossless Only)\n   else if(transferSyntax === \"1.2.840.10008.1.2.4.92\")\n   {\n   return decodeJPEG2000(dataSet, frame);\n   }\n   // JPEG 2000 Part 2 Multicomponent Image Compression\n   else if(transferSyntax === \"1.2.840.10008.1.2.4.93\")\n   {\n   return decodeJPEG2000(dataSet, frame);\n   }\n   */\n\n  var end = new Date().getTime();\n\n  imageFrame.decodeTimeInMS = end - start;\n\n  return imageFrame;\n}\n\nexports.default = decodeImageFrame;\n\n/***/ }),\n\n/***/ 11:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction decodeLittleEndian(imageFrame, pixelData) {\n  var arrayBuffer = pixelData.buffer;\n  var offset = pixelData.byteOffset;\n  var length = pixelData.length;\n\n  if (imageFrame.bitsAllocated === 16) {\n    // if pixel data is not aligned on even boundary, shift it so we can create the 16 bit array\n    // buffers on it\n    if (offset % 2) {\n      arrayBuffer = arrayBuffer.slice(offset);\n      offset = 0;\n    }\n\n    if (imageFrame.pixelRepresentation === 0) {\n      imageFrame.pixelData = new Uint16Array(arrayBuffer, offset, length / 2);\n    } else {\n      imageFrame.pixelData = new Int16Array(arrayBuffer, offset, length / 2);\n    }\n  } else if (imageFrame.bitsAllocated === 8 || imageFrame.bitsAllocated === 1) {\n    imageFrame.pixelData = pixelData;\n  } else if (imageFrame.bitsAllocated === 32) {\n    // if pixel data is not aligned on even boundary, shift it\n    if (offset % 2) {\n      arrayBuffer = arrayBuffer.slice(offset);\n      offset = 0;\n    }\n\n    imageFrame.pixelData = new Float32Array(arrayBuffer, offset, length / 4);\n  }\n\n  return imageFrame;\n}\n\nexports.default = decodeLittleEndian;\n\n/***/ }),\n\n/***/ 12:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/* eslint no-bitwise: 0 */\nfunction swap16(val) {\n  return (val & 0xFF) << 8 | val >> 8 & 0xFF;\n}\n\nfunction decodeBigEndian(imageFrame, pixelData) {\n  if (imageFrame.bitsAllocated === 16) {\n    var arrayBuffer = pixelData.buffer;\n    var offset = pixelData.byteOffset;\n    var length = pixelData.length;\n    // if pixel data is not aligned on even boundary, shift it so we can create the 16 bit array\n    // buffers on it\n\n    if (offset % 2) {\n      arrayBuffer = arrayBuffer.slice(offset);\n      offset = 0;\n    }\n\n    if (imageFrame.pixelRepresentation === 0) {\n      imageFrame.pixelData = new Uint16Array(arrayBuffer, offset, length / 2);\n    } else {\n      imageFrame.pixelData = new Int16Array(arrayBuffer, offset, length / 2);\n    }\n    // Do the byte swap\n    for (var i = 0; i < imageFrame.pixelData.length; i++) {\n      imageFrame.pixelData[i] = swap16(imageFrame.pixelData[i]);\n    }\n  } else if (imageFrame.bitsAllocated === 8) {\n    imageFrame.pixelData = pixelData;\n  }\n\n  return imageFrame;\n}\n\nexports.default = decodeBigEndian;\n\n/***/ }),\n\n/***/ 13:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction decodeRLE(imageFrame, pixelData) {\n  if (imageFrame.bitsAllocated === 8) {\n    if (imageFrame.planarConfiguration) {\n      return decode8Planar(imageFrame, pixelData);\n    }\n\n    return decode8(imageFrame, pixelData);\n  } else if (imageFrame.bitsAllocated === 16) {\n    return decode16(imageFrame, pixelData);\n  }\n\n  throw new Error('unsupported pixel format for RLE');\n}\n\nfunction decode8(imageFrame, pixelData) {\n  var frameData = pixelData;\n  var frameSize = imageFrame.rows * imageFrame.columns;\n  var outFrame = new ArrayBuffer(frameSize * imageFrame.samplesPerPixel);\n  var header = new DataView(frameData.buffer, frameData.byteOffset);\n  var data = new Int8Array(frameData.buffer, frameData.byteOffset);\n  var out = new Int8Array(outFrame);\n\n  var outIndex = 0;\n  var numSegments = header.getInt32(0, true);\n\n  for (var s = 0; s < numSegments; ++s) {\n    outIndex = s;\n\n    var inIndex = header.getInt32((s + 1) * 4, true);\n    var maxIndex = header.getInt32((s + 2) * 4, true);\n\n    if (maxIndex === 0) {\n      maxIndex = frameData.length;\n    }\n\n    var endOfSegment = frameSize * numSegments;\n\n    while (inIndex < maxIndex) {\n      var n = data[inIndex++];\n\n      if (n >= 0 && n <= 127) {\n        // copy n bytes\n        for (var i = 0; i < n + 1 && outIndex < endOfSegment; ++i) {\n          out[outIndex] = data[inIndex++];\n          outIndex += imageFrame.samplesPerPixel;\n        }\n      } else if (n <= -1 && n >= -127) {\n        var value = data[inIndex++];\n        // run of n bytes\n\n        for (var j = 0; j < -n + 1 && outIndex < endOfSegment; ++j) {\n          out[outIndex] = value;\n          outIndex += imageFrame.samplesPerPixel;\n        }\n      } /* else if (n === -128) {\n        } // do nothing */\n    }\n  }\n  imageFrame.pixelData = new Uint8Array(outFrame);\n\n  return imageFrame;\n}\n\nfunction decode8Planar(imageFrame, pixelData) {\n  var frameData = pixelData;\n  var frameSize = imageFrame.rows * imageFrame.columns;\n  var outFrame = new ArrayBuffer(frameSize * imageFrame.samplesPerPixel);\n  var header = new DataView(frameData.buffer, frameData.byteOffset);\n  var data = new Int8Array(frameData.buffer, frameData.byteOffset);\n  var out = new Int8Array(outFrame);\n\n  var outIndex = 0;\n  var numSegments = header.getInt32(0, true);\n\n  for (var s = 0; s < numSegments; ++s) {\n    outIndex = s * frameSize;\n\n    var inIndex = header.getInt32((s + 1) * 4, true);\n    var maxIndex = header.getInt32((s + 2) * 4, true);\n\n    if (maxIndex === 0) {\n      maxIndex = frameData.length;\n    }\n\n    var endOfSegment = frameSize * numSegments;\n\n    while (inIndex < maxIndex) {\n      var n = data[inIndex++];\n\n      if (n >= 0 && n <= 127) {\n        // copy n bytes\n        for (var i = 0; i < n + 1 && outIndex < endOfSegment; ++i) {\n          out[outIndex] = data[inIndex++];\n          outIndex++;\n        }\n      } else if (n <= -1 && n >= -127) {\n        var value = data[inIndex++];\n        // run of n bytes\n\n        for (var j = 0; j < -n + 1 && outIndex < endOfSegment; ++j) {\n          out[outIndex] = value;\n          outIndex++;\n        }\n      } /* else if (n === -128) {\n        } // do nothing */\n    }\n  }\n  imageFrame.pixelData = new Uint8Array(outFrame);\n\n  return imageFrame;\n}\n\nfunction decode16(imageFrame, pixelData) {\n  var frameData = pixelData;\n  var frameSize = imageFrame.rows * imageFrame.columns;\n  var outFrame = new ArrayBuffer(frameSize * imageFrame.samplesPerPixel * 2);\n\n  var header = new DataView(frameData.buffer, frameData.byteOffset);\n  var data = new Int8Array(frameData.buffer, frameData.byteOffset);\n  var out = new Int8Array(outFrame);\n\n  var numSegments = header.getInt32(0, true);\n\n  for (var s = 0; s < numSegments; ++s) {\n    var outIndex = 0;\n    var highByte = s === 0 ? 1 : 0;\n\n    var inIndex = header.getInt32((s + 1) * 4, true);\n    var maxIndex = header.getInt32((s + 2) * 4, true);\n\n    if (maxIndex === 0) {\n      maxIndex = frameData.length;\n    }\n\n    while (inIndex < maxIndex) {\n      var n = data[inIndex++];\n\n      if (n >= 0 && n <= 127) {\n        for (var i = 0; i < n + 1 && outIndex < frameSize; ++i) {\n          out[outIndex * 2 + highByte] = data[inIndex++];\n          outIndex++;\n        }\n      } else if (n <= -1 && n >= -127) {\n        var value = data[inIndex++];\n\n        for (var j = 0; j < -n + 1 && outIndex < frameSize; ++j) {\n          out[outIndex * 2 + highByte] = value;\n          outIndex++;\n        }\n      } /* else if (n === -128) {\n        } // do nothing */\n    }\n  }\n  if (imageFrame.pixelRepresentation === 0) {\n    imageFrame.pixelData = new Uint16Array(outFrame);\n  } else {\n    imageFrame.pixelData = new Int16Array(outFrame);\n  }\n\n  return imageFrame;\n}\n\nexports.default = decodeRLE;\n\n/***/ }),\n\n/***/ 14:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n\nfunction decodeJPEGBaseline(imageFrame, pixelData) {\n  // check to make sure codec is loaded\n  if (typeof JpegImage === 'undefined') {\n    throw new Error('No JPEG Baseline decoder loaded');\n  }\n  var jpeg = new JpegImage();\n\n  jpeg.parse(pixelData);\n\n  // Do not use the internal jpeg.js color transformation,\n  // since we will handle this afterwards\n  jpeg.colorTransform = false;\n\n  if (imageFrame.bitsAllocated === 8) {\n    imageFrame.pixelData = jpeg.getData(imageFrame.columns, imageFrame.rows);\n\n    return imageFrame;\n  } else if (imageFrame.bitsAllocated === 16) {\n    imageFrame.pixelData = jpeg.getData16(imageFrame.columns, imageFrame.rows);\n\n    return imageFrame;\n  }\n}\n\nexports.default = decodeJPEGBaseline;\n\n/***/ }),\n\n/***/ 15:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n\nfunction decodeJPEGLossless(imageFrame, pixelData) {\n  // check to make sure codec is loaded\n  if (typeof jpeg === 'undefined' || typeof jpeg.lossless === 'undefined' || typeof jpeg.lossless.Decoder === 'undefined') {\n    throw new Error('No JPEG Lossless decoder loaded');\n  }\n\n  var byteOutput = imageFrame.bitsAllocated <= 8 ? 1 : 2;\n  // console.time('jpeglossless');\n  var buffer = pixelData.buffer;\n  var decoder = new jpeg.lossless.Decoder();\n  var decompressedData = decoder.decode(buffer, pixelData.byteOffset, pixelData.length, byteOutput);\n  // console.timeEnd('jpeglossless');\n\n  if (imageFrame.pixelRepresentation === 0) {\n    if (imageFrame.bitsAllocated === 16) {\n      imageFrame.pixelData = new Uint16Array(decompressedData.buffer);\n\n      return imageFrame;\n    }\n    // untested!\n    imageFrame.pixelData = new Uint8Array(decompressedData.buffer);\n\n    return imageFrame;\n  }\n  imageFrame.pixelData = new Int16Array(decompressedData.buffer);\n\n  return imageFrame;\n}\n\nexports.default = decodeJPEGLossless;\n\n/***/ }),\n\n/***/ 17:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = '2.0.0';\n\n/***/ }),\n\n/***/ 2:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction getMinMax(storedPixelData) {\n  // we always calculate the min max values since they are not always\n  // present in DICOM and we don't want to trust them anyway as cornerstone\n  // depends on us providing reliable values for these\n  var min = storedPixelData[0];\n  var max = storedPixelData[0];\n  var storedPixel = void 0;\n  var numPixels = storedPixelData.length;\n\n  for (var index = 1; index < numPixels; index++) {\n    storedPixel = storedPixelData[index];\n    min = Math.min(min, storedPixel);\n    max = Math.max(max, storedPixel);\n  }\n\n  return {\n    min: min,\n    max: max\n  };\n}\n\nexports.default = getMinMax;\n\n/***/ }),\n\n/***/ 5:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar charLS = void 0;\n\nfunction jpegLSDecode(data, isSigned) {\n  // prepare input parameters\n  var dataPtr = charLS._malloc(data.length);\n\n  charLS.writeArrayToMemory(data, dataPtr);\n\n  // prepare output parameters\n  var imagePtrPtr = charLS._malloc(4);\n  var imageSizePtr = charLS._malloc(4);\n  var widthPtr = charLS._malloc(4);\n  var heightPtr = charLS._malloc(4);\n  var bitsPerSamplePtr = charLS._malloc(4);\n  var stridePtr = charLS._malloc(4);\n  var allowedLossyErrorPtr = charLS._malloc(4);\n  var componentsPtr = charLS._malloc(4);\n  var interleaveModePtr = charLS._malloc(4);\n\n  // Decode the image\n  var result = charLS.ccall('jpegls_decode', 'number', ['number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number'], [dataPtr, data.length, imagePtrPtr, imageSizePtr, widthPtr, heightPtr, bitsPerSamplePtr, stridePtr, componentsPtr, allowedLossyErrorPtr, interleaveModePtr]);\n\n  // Extract result values into object\n  var image = {\n    result: result,\n    width: charLS.getValue(widthPtr, 'i32'),\n    height: charLS.getValue(heightPtr, 'i32'),\n    bitsPerSample: charLS.getValue(bitsPerSamplePtr, 'i32'),\n    stride: charLS.getValue(stridePtr, 'i32'),\n    components: charLS.getValue(componentsPtr, 'i32'),\n    allowedLossyError: charLS.getValue(allowedLossyErrorPtr, 'i32'),\n    interleaveMode: charLS.getValue(interleaveModePtr, 'i32'),\n    pixelData: undefined\n  };\n\n  // Copy image from emscripten heap into appropriate array buffer type\n  var imagePtr = charLS.getValue(imagePtrPtr, '*');\n\n  if (image.bitsPerSample <= 8) {\n    image.pixelData = new Uint8Array(image.width * image.height * image.components);\n    image.pixelData.set(new Uint8Array(charLS.HEAP8.buffer, imagePtr, image.pixelData.length));\n  } else if (isSigned) {\n    image.pixelData = new Int16Array(image.width * image.height * image.components);\n    image.pixelData.set(new Int16Array(charLS.HEAP16.buffer, imagePtr, image.pixelData.length));\n  } else {\n    image.pixelData = new Uint16Array(image.width * image.height * image.components);\n    image.pixelData.set(new Uint16Array(charLS.HEAP16.buffer, imagePtr, image.pixelData.length));\n  }\n\n  // free memory and return image object\n  charLS._free(dataPtr);\n  charLS._free(imagePtr);\n  charLS._free(imagePtrPtr);\n  charLS._free(imageSizePtr);\n  charLS._free(widthPtr);\n  charLS._free(heightPtr);\n  charLS._free(bitsPerSamplePtr);\n  charLS._free(stridePtr);\n  charLS._free(componentsPtr);\n  charLS._free(interleaveModePtr);\n\n  return image;\n}\n\nfunction initializeJPEGLS() {\n  // check to make sure codec is loaded\n  if (typeof CharLS === 'undefined') {\n    throw new Error('No JPEG-LS decoder loaded');\n  }\n\n  // Try to initialize CharLS\n  // CharLS https://github.com/cornerstonejs/charls\n  if (!charLS) {\n    charLS = CharLS();\n    if (!charLS || !charLS._jpegls_decode) {\n      throw new Error('JPEG-LS failed to initialize');\n    }\n  }\n}\n\nfunction decodeJPEGLS(imageFrame, pixelData) {\n  initializeJPEGLS();\n\n  var image = jpegLSDecode(pixelData, imageFrame.pixelRepresentation === 1);\n\n  // throw error if not success or too much data\n  if (image.result !== 0 && image.result !== 6) {\n    throw new Error('JPEG-LS decoder failed to decode frame (error code ' + image.result + ')');\n  }\n\n  imageFrame.columns = image.width;\n  imageFrame.rows = image.height;\n  imageFrame.pixelData = image.pixelData;\n\n  return imageFrame;\n}\n\nexports.default = decodeJPEGLS;\nexports.initializeJPEGLS = initializeJPEGLS;\n\n/***/ }),\n\n/***/ 6:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction decodeJpx(imageFrame, pixelData) {\n  var jpxImage = new JpxImage();\n\n  jpxImage.parse(pixelData);\n\n  var tileCount = jpxImage.tiles.length;\n\n  if (tileCount !== 1) {\n    throw new Error('JPEG2000 decoder returned a tileCount of ' + tileCount + ', when 1 is expected');\n  }\n\n  imageFrame.columns = jpxImage.width;\n  imageFrame.rows = jpxImage.height;\n  imageFrame.pixelData = jpxImage.tiles[0].items;\n\n  return imageFrame;\n}\n\nvar openJPEG = void 0;\n\nfunction decodeOpenJPEG(data, bytesPerPixel, signed) {\n  var dataPtr = openJPEG._malloc(data.length);\n\n  openJPEG.writeArrayToMemory(data, dataPtr);\n\n  // create param outpout\n  var imagePtrPtr = openJPEG._malloc(4);\n  var imageSizePtr = openJPEG._malloc(4);\n  var imageSizeXPtr = openJPEG._malloc(4);\n  var imageSizeYPtr = openJPEG._malloc(4);\n  var imageSizeCompPtr = openJPEG._malloc(4);\n\n  var t0 = new Date().getTime();\n  var ret = openJPEG.ccall('jp2_decode', 'number', ['number', 'number', 'number', 'number', 'number', 'number', 'number'], [dataPtr, data.length, imagePtrPtr, imageSizePtr, imageSizeXPtr, imageSizeYPtr, imageSizeCompPtr]);\n  // add num vomp..etc\n\n  if (ret !== 0) {\n    console.log('[opj_decode] decoding failed!');\n    openJPEG._free(dataPtr);\n    openJPEG._free(openJPEG.getValue(imagePtrPtr, '*'));\n    openJPEG._free(imageSizeXPtr);\n    openJPEG._free(imageSizeYPtr);\n    openJPEG._free(imageSizePtr);\n    openJPEG._free(imageSizeCompPtr);\n\n    return;\n  }\n\n  var imagePtr = openJPEG.getValue(imagePtrPtr, '*');\n\n  var image = {\n    length: openJPEG.getValue(imageSizePtr, 'i32'),\n    sx: openJPEG.getValue(imageSizeXPtr, 'i32'),\n    sy: openJPEG.getValue(imageSizeYPtr, 'i32'),\n    nbChannels: openJPEG.getValue(imageSizeCompPtr, 'i32'), // hard coded for now\n    perf_timetodecode: undefined,\n    pixelData: undefined\n  };\n\n  // Copy the data from the EMSCRIPTEN heap into the correct type array\n  var length = image.sx * image.sy * image.nbChannels;\n  var src32 = new Int32Array(openJPEG.HEAP32.buffer, imagePtr, length);\n\n  if (bytesPerPixel === 1) {\n    if (Uint8Array.from) {\n      image.pixelData = Uint8Array.from(src32);\n    } else {\n      image.pixelData = new Uint8Array(length);\n      for (var i = 0; i < length; i++) {\n        image.pixelData[i] = src32[i];\n      }\n    }\n  } else if (signed) {\n    if (Int16Array.from) {\n      image.pixelData = Int16Array.from(src32);\n    } else {\n      image.pixelData = new Int16Array(length);\n      for (var _i = 0; _i < length; _i++) {\n        image.pixelData[_i] = src32[_i];\n      }\n    }\n  } else if (Uint16Array.from) {\n    image.pixelData = Uint16Array.from(src32);\n  } else {\n    image.pixelData = new Uint16Array(length);\n    for (var _i2 = 0; _i2 < length; _i2++) {\n      image.pixelData[_i2] = src32[_i2];\n    }\n  }\n\n  var t1 = new Date().getTime();\n\n  image.perf_timetodecode = t1 - t0;\n\n  // free\n  openJPEG._free(dataPtr);\n  openJPEG._free(imagePtrPtr);\n  openJPEG._free(imagePtr);\n  openJPEG._free(imageSizePtr);\n  openJPEG._free(imageSizeXPtr);\n  openJPEG._free(imageSizeYPtr);\n  openJPEG._free(imageSizeCompPtr);\n\n  return image;\n}\n\nfunction decodeOpenJpeg2000(imageFrame, pixelData) {\n  var bytesPerPixel = imageFrame.bitsAllocated <= 8 ? 1 : 2;\n  var signed = imageFrame.pixelRepresentation === 1;\n\n  var image = decodeOpenJPEG(pixelData, bytesPerPixel, signed);\n\n  imageFrame.columns = image.sx;\n  imageFrame.rows = image.sy;\n  imageFrame.pixelData = image.pixelData;\n  if (image.nbChannels > 1) {\n    imageFrame.photometricInterpretation = 'RGB';\n  }\n\n  return imageFrame;\n}\n\nfunction initializeJPEG2000(decodeConfig) {\n  // check to make sure codec is loaded\n  if (!decodeConfig.usePDFJS) {\n    if (typeof OpenJPEG === 'undefined') {\n      throw new Error('OpenJPEG decoder not loaded');\n    }\n  }\n\n  if (!openJPEG) {\n    openJPEG = OpenJPEG();\n    if (!openJPEG || !openJPEG._jp2_decode) {\n      throw new Error('OpenJPEG failed to initialize');\n    }\n  }\n}\n\nfunction decodeJPEG2000(imageFrame, pixelData, decodeConfig) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  initializeJPEG2000(decodeConfig);\n\n  if (options.usePDFJS || decodeConfig.usePDFJS) {\n    // OHIF image-JPEG2000 https://github.com/OHIF/image-JPEG2000\n    // console.log('PDFJS')\n    return decodeJpx(imageFrame, pixelData);\n  }\n\n  // OpenJPEG2000 https://github.com/jpambrun/openjpeg\n  // console.log('OpenJPEG')\n  return decodeOpenJpeg2000(imageFrame, pixelData);\n}\n\nexports.default = decodeJPEG2000;\nexports.initializeJPEG2000 = initializeJPEG2000;\n\n/***/ }),\n\n/***/ 61:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.version = exports.registerTaskHandler = undefined;\n\nvar _version = __webpack_require__(17);\n\nObject.defineProperty(exports, 'version', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_version).default;\n  }\n});\n\nvar _webWorker = __webpack_require__(62);\n\nvar _decodeTask = __webpack_require__(63);\n\nvar _decodeTask2 = _interopRequireDefault(_decodeTask);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// register our task\n(0, _webWorker.registerTaskHandler)(_decodeTask2.default);\n\nexports.registerTaskHandler = _webWorker.registerTaskHandler;\n\n/***/ }),\n\n/***/ 62:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.registerTaskHandler = registerTaskHandler;\n// an object of task handlers\nvar taskHandlers = {};\n\n// Flag to ensure web worker is only initialized once\nvar initialized = false;\n\n// the configuration object passed in when the web worker manager is initialized\nvar config = void 0;\n\n/**\n * Initialization function that loads additional web workers and initializes them\n * @param data\n */\nfunction initialize(data) {\n  // console.log('web worker initialize ', data.workerIndex);\n  // prevent initialization from happening more than once\n  if (initialized) {\n    return;\n  }\n\n  // save the config data\n  config = data.config;\n\n  // load any additional web worker tasks\n  if (data.config.webWorkerTaskPaths) {\n    for (var i = 0; i < data.config.webWorkerTaskPaths.length; i++) {\n      self.importScripts(data.config.webWorkerTaskPaths[i]);\n    }\n  }\n\n  // initialize each task handler\n  Object.keys(taskHandlers).forEach(function (key) {\n    taskHandlers[key].initialize(config.taskConfiguration);\n  });\n\n  // tell main ui thread that we have completed initialization\n  self.postMessage({\n    taskType: 'initialize',\n    status: 'success',\n    result: {},\n    workerIndex: data.workerIndex\n  });\n\n  initialized = true;\n}\n\n/**\n * Function exposed to web worker tasks to register themselves\n * @param taskHandler\n */\nfunction registerTaskHandler(taskHandler) {\n  if (taskHandlers[taskHandler.taskType]) {\n    console.log('attempt to register duplicate task handler \"', taskHandler.taskType, '\"');\n\n    return false;\n  }\n  taskHandlers[taskHandler.taskType] = taskHandler;\n  if (initialized) {\n    taskHandler.initialize(config.taskConfiguration);\n  }\n}\n\n/**\n * Function to load a new web worker task with updated configuration\n * @param data\n */\nfunction loadWebWorkerTask(data) {\n  config = data.config;\n  self.importScripts(data.sourcePath);\n}\n\n/**\n * Web worker message handler - dispatches messages to the registered task handlers\n * @param msg\n */\nself.onmessage = function (msg) {\n  // console.log('web worker onmessage', msg.data);\n\n  // handle initialize message\n  if (msg.data.taskType === 'initialize') {\n    initialize(msg.data);\n\n    return;\n  }\n\n  // handle loadWebWorkerTask message\n  if (msg.data.taskType === 'loadWebWorkerTask') {\n    loadWebWorkerTask(msg.data);\n\n    return;\n  }\n\n  // dispatch the message if there is a handler registered for it\n  if (taskHandlers[msg.data.taskType]) {\n    taskHandlers[msg.data.taskType].handler(msg.data, function (result, transferList) {\n      self.postMessage({\n        taskType: msg.data.taskType,\n        status: 'success',\n        result: result,\n        workerIndex: msg.data.workerIndex\n      }, transferList);\n    });\n\n    return;\n  }\n\n  // not task handler registered - send a failure message back to ui thread\n  console.log('no task handler for ', msg.data.taskType);\n  console.log(taskHandlers);\n  self.postMessage({\n    taskType: msg.data.taskType,\n    status: 'failed - no task handler registered',\n    workerIndex: msg.data.workerIndex\n  });\n};\n\n/***/ }),\n\n/***/ 63:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _decodeJPEG = __webpack_require__(6);\n\nvar _decodeJPEGLS = __webpack_require__(5);\n\nvar _getMinMax = __webpack_require__(2);\n\nvar _getMinMax2 = _interopRequireDefault(_getMinMax);\n\nvar _decodeImageFrame = __webpack_require__(10);\n\nvar _decodeImageFrame2 = _interopRequireDefault(_decodeImageFrame);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// flag to ensure codecs are loaded only once\nvar codecsLoaded = false;\n\n// the configuration object for the decodeTask\nvar decodeConfig = void 0;\n\n/**\n * Function to control loading and initializing the codecs\n * @param config\n */\nfunction loadCodecs(config) {\n  // prevent loading codecs more than once\n  if (codecsLoaded) {\n    return;\n  }\n\n  // Load the codecs\n  // console.time('loadCodecs');\n  self.importScripts(config.decodeTask.codecsPath);\n  codecsLoaded = true;\n  // console.timeEnd('loadCodecs');\n\n  // Initialize the codecs\n  if (config.decodeTask.initializeCodecsOnStartup) {\n    // console.time('initializeCodecs');\n    (0, _decodeJPEG.initializeJPEG2000)(config.decodeTask);\n    (0, _decodeJPEGLS.initializeJPEGLS)(config.decodeTask);\n    // console.timeEnd('initializeCodecs');\n  }\n}\n\n/**\n * Task initialization function\n */\nfunction initialize(config) {\n  decodeConfig = config;\n  if (config.decodeTask.loadCodecsOnStartup) {\n    loadCodecs(config);\n  }\n}\n\nfunction calculateMinMax(imageFrame) {\n  var minMax = (0, _getMinMax2.default)(imageFrame.pixelData);\n\n  if (decodeConfig.decodeTask.strict === true) {\n    if (imageFrame.smallestPixelValue !== minMax.min) {\n      console.warn('Image smallestPixelValue tag is incorrect. Rendering performance will suffer considerably.');\n    }\n\n    if (imageFrame.largestPixelValue !== minMax.max) {\n      console.warn('Image largestPixelValue tag is incorrect. Rendering performance will suffer considerably.');\n    }\n  } else {\n    imageFrame.smallestPixelValue = minMax.min;\n    imageFrame.largestPixelValue = minMax.max;\n  }\n}\n\n/**\n * Task handler function\n */\nfunction handler(data, doneCallback) {\n  // Load the codecs if they aren't already loaded\n  loadCodecs(decodeConfig);\n\n  var imageFrame = data.data.imageFrame;\n\n  // convert pixel data from ArrayBuffer to Uint8Array since web workers support passing ArrayBuffers but\n  // not typed arrays\n  var pixelData = new Uint8Array(data.data.pixelData);\n\n  (0, _decodeImageFrame2.default)(imageFrame, data.data.transferSyntax, pixelData, decodeConfig.decodeTask, data.data.options);\n\n  if (!imageFrame.pixelData) {\n    throw new Error('decodeTask: imageFrame.pixelData is undefined after decoding');\n  }\n\n  calculateMinMax(imageFrame);\n\n  // convert from TypedArray to ArrayBuffer since web workers support passing ArrayBuffers but not\n  // typed arrays\n  imageFrame.pixelData = imageFrame.pixelData.buffer;\n\n  // invoke the callback with our result and pass the pixelData in the transferList to move it to\n  // UI thread without making a copy\n  doneCallback(imageFrame, [imageFrame.pixelData]);\n}\n\nexports.default = {\n  taskType: 'decodeTask',\n  handler: handler,\n  initialize: initialize\n};\n\n/***/ })\n\n/******/ });\n});\n\n\n// WEBPACK FOOTER //\n// cornerstoneWADOImageLoaderWebWorker.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 61);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ec82da010b37f517d9b5","import decodeLittleEndian from './decoders/decodeLittleEndian.js';\nimport decodeBigEndian from './decoders/decodeBigEndian.js';\nimport decodeRLE from './decoders/decodeRLE.js';\nimport decodeJPEGBaseline from './decoders/decodeJPEGBaseline.js';\nimport decodeJPEGLossless from './decoders/decodeJPEGLossless.js';\nimport decodeJPEGLS from './decoders/decodeJPEGLS.js';\nimport decodeJPEG2000 from './decoders/decodeJPEG2000.js';\n\nfunction decodeImageFrame (imageFrame, transferSyntax, pixelData, decodeConfig, options) {\n  const start = new Date().getTime();\n\n  if (transferSyntax === '1.2.840.10008.1.2') {\n    // Implicit VR Little Endian\n    imageFrame = decodeLittleEndian(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.1') {\n    // Explicit VR Little Endian\n    imageFrame = decodeLittleEndian(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.2') {\n    // Explicit VR Big Endian (retired)\n    imageFrame = decodeBigEndian(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.1.99') {\n    // Deflate transfer syntax (deflated by dicomParser)\n    imageFrame = decodeLittleEndian(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.5') {\n    // RLE Lossless\n    imageFrame = decodeRLE(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.50') {\n    // JPEG Baseline lossy process 1 (8 bit)\n    imageFrame = decodeJPEGBaseline(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.51') {\n    // JPEG Baseline lossy process 2 & 4 (12 bit)\n    imageFrame = decodeJPEGBaseline(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.57') {\n    // JPEG Lossless, Nonhierarchical (Processes 14)\n    imageFrame = decodeJPEGLossless(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.70') {\n    // JPEG Lossless, Nonhierarchical (Processes 14 [Selection 1])\n    imageFrame = decodeJPEGLossless(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.80') {\n    // JPEG-LS Lossless Image Compression\n    imageFrame = decodeJPEGLS(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.81') {\n    // JPEG-LS Lossy (Near-Lossless) Image Compression\n    imageFrame = decodeJPEGLS(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.90') {\n    // JPEG 2000 Lossless\n    imageFrame = decodeJPEG2000(imageFrame, pixelData, decodeConfig, options);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.91') {\n    // JPEG 2000 Lossy\n    imageFrame = decodeJPEG2000(imageFrame, pixelData, decodeConfig, options);\n  } else {\n    throw new Error(`no decoder for transfer syntax ${transferSyntax}`);\n  }\n\n  /* Don't know if these work...\n   // JPEG 2000 Part 2 Multicomponent Image Compression (Lossless Only)\n   else if(transferSyntax === \"1.2.840.10008.1.2.4.92\")\n   {\n   return decodeJPEG2000(dataSet, frame);\n   }\n   // JPEG 2000 Part 2 Multicomponent Image Compression\n   else if(transferSyntax === \"1.2.840.10008.1.2.4.93\")\n   {\n   return decodeJPEG2000(dataSet, frame);\n   }\n   */\n\n  const end = new Date().getTime();\n\n  imageFrame.decodeTimeInMS = end - start;\n\n  return imageFrame;\n}\n\nexport default decodeImageFrame;\n\n\n\n// WEBPACK FOOTER //\n// ./webWorker/decodeTask/decodeImageFrame.js","function decodeLittleEndian (imageFrame, pixelData) {\n  let arrayBuffer = pixelData.buffer;\n  let offset = pixelData.byteOffset;\n  const length = pixelData.length;\n\n  if (imageFrame.bitsAllocated === 16) {\n    // if pixel data is not aligned on even boundary, shift it so we can create the 16 bit array\n    // buffers on it\n    if (offset % 2) {\n      arrayBuffer = arrayBuffer.slice(offset);\n      offset = 0;\n    }\n\n    if (imageFrame.pixelRepresentation === 0) {\n      imageFrame.pixelData = new Uint16Array(arrayBuffer, offset, length / 2);\n    } else {\n      imageFrame.pixelData = new Int16Array(arrayBuffer, offset, length / 2);\n    }\n  } else if (imageFrame.bitsAllocated === 8 || imageFrame.bitsAllocated === 1) {\n    imageFrame.pixelData = pixelData;\n  } else if (imageFrame.bitsAllocated === 32) {\n    // if pixel data is not aligned on even boundary, shift it\n    if (offset % 2) {\n      arrayBuffer = arrayBuffer.slice(offset);\n      offset = 0;\n    }\n\n    imageFrame.pixelData = new Float32Array(arrayBuffer, offset, length / 4);\n  }\n\n  return imageFrame;\n}\n\nexport default decodeLittleEndian;\n\n\n\n// WEBPACK FOOTER //\n// ./webWorker/decodeTask/decoders/decodeLittleEndian.js","/* eslint no-bitwise: 0 */\nfunction swap16 (val) {\n  return ((val & 0xFF) << 8) |\n    ((val >> 8) & 0xFF);\n}\n\n\nfunction decodeBigEndian (imageFrame, pixelData) {\n  if (imageFrame.bitsAllocated === 16) {\n    let arrayBuffer = pixelData.buffer;\n    let offset = pixelData.byteOffset;\n    const length = pixelData.length;\n    // if pixel data is not aligned on even boundary, shift it so we can create the 16 bit array\n    // buffers on it\n\n    if (offset % 2) {\n      arrayBuffer = arrayBuffer.slice(offset);\n      offset = 0;\n    }\n\n    if (imageFrame.pixelRepresentation === 0) {\n      imageFrame.pixelData = new Uint16Array(arrayBuffer, offset, length / 2);\n    } else {\n      imageFrame.pixelData = new Int16Array(arrayBuffer, offset, length / 2);\n    }\n    // Do the byte swap\n    for (let i = 0; i < imageFrame.pixelData.length; i++) {\n      imageFrame.pixelData[i] = swap16(imageFrame.pixelData[i]);\n    }\n\n  } else if (imageFrame.bitsAllocated === 8) {\n    imageFrame.pixelData = pixelData;\n  }\n\n  return imageFrame;\n}\n\nexport default decodeBigEndian;\n\n\n\n// WEBPACK FOOTER //\n// ./webWorker/decodeTask/decoders/decodeBigEndian.js","function decodeRLE (imageFrame, pixelData) {\n  if (imageFrame.bitsAllocated === 8) {\n    if (imageFrame.planarConfiguration) {\n      return decode8Planar(imageFrame, pixelData);\n    }\n\n    return decode8(imageFrame, pixelData);\n  } else if (imageFrame.bitsAllocated === 16) {\n    return decode16(imageFrame, pixelData);\n  }\n\n  throw new Error('unsupported pixel format for RLE');\n}\n\nfunction decode8 (imageFrame, pixelData) {\n  const frameData = pixelData;\n  const frameSize = imageFrame.rows * imageFrame.columns;\n  const outFrame = new ArrayBuffer(frameSize * imageFrame.samplesPerPixel);\n  const header = new DataView(frameData.buffer, frameData.byteOffset);\n  const data = new Int8Array(frameData.buffer, frameData.byteOffset);\n  const out = new Int8Array(outFrame);\n\n  let outIndex = 0;\n  const numSegments = header.getInt32(0, true);\n\n  for (let s = 0; s < numSegments; ++s) {\n    outIndex = s;\n\n    let inIndex = header.getInt32((s + 1) * 4, true);\n    let maxIndex = header.getInt32((s + 2) * 4, true);\n\n    if (maxIndex === 0) {\n      maxIndex = frameData.length;\n    }\n\n    const endOfSegment = frameSize * numSegments;\n\n    while (inIndex < maxIndex) {\n      const n = data[inIndex++];\n\n      if (n >= 0 && n <= 127) {\n        // copy n bytes\n        for (let i = 0; i < n + 1 && outIndex < endOfSegment; ++i) {\n          out[outIndex] = data[inIndex++];\n          outIndex += imageFrame.samplesPerPixel;\n        }\n      } else if (n <= -1 && n >= -127) {\n        const value = data[inIndex++];\n        // run of n bytes\n\n        for (let j = 0; j < -n + 1 && outIndex < endOfSegment; ++j) {\n          out[outIndex] = value;\n          outIndex += imageFrame.samplesPerPixel;\n        }\n      }/* else if (n === -128) {\n\n      } // do nothing */\n    }\n  }\n  imageFrame.pixelData = new Uint8Array(outFrame);\n\n  return imageFrame;\n}\n\nfunction decode8Planar (imageFrame, pixelData) {\n  const frameData = pixelData;\n  const frameSize = imageFrame.rows * imageFrame.columns;\n  const outFrame = new ArrayBuffer(frameSize * imageFrame.samplesPerPixel);\n  const header = new DataView(frameData.buffer, frameData.byteOffset);\n  const data = new Int8Array(frameData.buffer, frameData.byteOffset);\n  const out = new Int8Array(outFrame);\n\n  let outIndex = 0;\n  const numSegments = header.getInt32(0, true);\n\n  for (let s = 0; s < numSegments; ++s) {\n    outIndex = s * frameSize;\n\n    let inIndex = header.getInt32((s + 1) * 4, true);\n    let maxIndex = header.getInt32((s + 2) * 4, true);\n\n    if (maxIndex === 0) {\n      maxIndex = frameData.length;\n    }\n\n    const endOfSegment = frameSize * numSegments;\n\n    while (inIndex < maxIndex) {\n      const n = data[inIndex++];\n\n      if (n >= 0 && n <= 127) {\n        // copy n bytes\n        for (let i = 0; i < n + 1 && outIndex < endOfSegment; ++i) {\n          out[outIndex] = data[inIndex++];\n          outIndex++;\n        }\n      } else if (n <= -1 && n >= -127) {\n        const value = data[inIndex++];\n        // run of n bytes\n\n        for (let j = 0; j < -n + 1 && outIndex < endOfSegment; ++j) {\n          out[outIndex] = value;\n          outIndex++;\n        }\n      }/* else if (n === -128) {\n\n      } // do nothing */\n    }\n  }\n  imageFrame.pixelData = new Uint8Array(outFrame);\n\n  return imageFrame;\n}\n\nfunction decode16 (imageFrame, pixelData) {\n  const frameData = pixelData;\n  const frameSize = imageFrame.rows * imageFrame.columns;\n  const outFrame = new ArrayBuffer(frameSize * imageFrame.samplesPerPixel * 2);\n\n  const header = new DataView(frameData.buffer, frameData.byteOffset);\n  const data = new Int8Array(frameData.buffer, frameData.byteOffset);\n  const out = new Int8Array(outFrame);\n\n  const numSegments = header.getInt32(0, true);\n\n  for (let s = 0; s < numSegments; ++s) {\n    let outIndex = 0;\n    const highByte = (s === 0 ? 1 : 0);\n\n    let inIndex = header.getInt32((s + 1) * 4, true);\n    let maxIndex = header.getInt32((s + 2) * 4, true);\n\n    if (maxIndex === 0) {\n      maxIndex = frameData.length;\n    }\n\n    while (inIndex < maxIndex) {\n      const n = data[inIndex++];\n\n      if (n >= 0 && n <= 127) {\n        for (let i = 0; i < n + 1 && outIndex < frameSize; ++i) {\n          out[(outIndex * 2) + highByte] = data[inIndex++];\n          outIndex++;\n        }\n      } else if (n <= -1 && n >= -127) {\n        const value = data[inIndex++];\n\n        for (let j = 0; j < -n + 1 && outIndex < frameSize; ++j) {\n          out[(outIndex * 2) + highByte] = value;\n          outIndex++;\n        }\n      }/* else if (n === -128) {\n\n      } // do nothing */\n    }\n  }\n  if (imageFrame.pixelRepresentation === 0) {\n    imageFrame.pixelData = new Uint16Array(outFrame);\n  } else {\n    imageFrame.pixelData = new Int16Array(outFrame);\n  }\n\n  return imageFrame;\n}\n\nexport default decodeRLE;\n\n\n\n// WEBPACK FOOTER //\n// ./webWorker/decodeTask/decoders/decodeRLE.js","\n\nfunction decodeJPEGBaseline (imageFrame, pixelData) {\n  // check to make sure codec is loaded\n  if (typeof JpegImage === 'undefined') {\n    throw new Error('No JPEG Baseline decoder loaded');\n  }\n  const jpeg = new JpegImage();\n\n  jpeg.parse(pixelData);\n\n  // Do not use the internal jpeg.js color transformation,\n  // since we will handle this afterwards\n  jpeg.colorTransform = false;\n\n  if (imageFrame.bitsAllocated === 8) {\n    imageFrame.pixelData = jpeg.getData(imageFrame.columns, imageFrame.rows);\n\n    return imageFrame;\n  } else if (imageFrame.bitsAllocated === 16) {\n    imageFrame.pixelData = jpeg.getData16(imageFrame.columns, imageFrame.rows);\n\n    return imageFrame;\n  }\n}\n\nexport default decodeJPEGBaseline;\n\n\n\n// WEBPACK FOOTER //\n// ./webWorker/decodeTask/decoders/decodeJPEGBaseline.js","\n\nfunction decodeJPEGLossless (imageFrame, pixelData) {\n  // check to make sure codec is loaded\n  if (typeof jpeg === 'undefined' ||\n    typeof jpeg.lossless === 'undefined' ||\n    typeof jpeg.lossless.Decoder === 'undefined') {\n    throw new Error('No JPEG Lossless decoder loaded');\n  }\n\n  const byteOutput = imageFrame.bitsAllocated <= 8 ? 1 : 2;\n  // console.time('jpeglossless');\n  const buffer = pixelData.buffer;\n  const decoder = new jpeg.lossless.Decoder();\n  const decompressedData = decoder.decode(buffer, pixelData.byteOffset, pixelData.length, byteOutput);\n  // console.timeEnd('jpeglossless');\n\n  if (imageFrame.pixelRepresentation === 0) {\n    if (imageFrame.bitsAllocated === 16) {\n      imageFrame.pixelData = new Uint16Array(decompressedData.buffer);\n\n      return imageFrame;\n    }\n    // untested!\n    imageFrame.pixelData = new Uint8Array(decompressedData.buffer);\n\n    return imageFrame;\n\n  }\n  imageFrame.pixelData = new Int16Array(decompressedData.buffer);\n\n  return imageFrame;\n\n}\n\nexport default decodeJPEGLossless;\n\n\n\n// WEBPACK FOOTER //\n// ./webWorker/decodeTask/decoders/decodeJPEGLossless.js","export default '2.0.0';\n\n\n\n// WEBPACK FOOTER //\n// ./version.js","function getMinMax (storedPixelData) {\n  // we always calculate the min max values since they are not always\n  // present in DICOM and we don't want to trust them anyway as cornerstone\n  // depends on us providing reliable values for these\n  let min = storedPixelData[0];\n  let max = storedPixelData[0];\n  let storedPixel;\n  const numPixels = storedPixelData.length;\n\n  for (let index = 1; index < numPixels; index++) {\n    storedPixel = storedPixelData[index];\n    min = Math.min(min, storedPixel);\n    max = Math.max(max, storedPixel);\n  }\n\n  return {\n    min,\n    max\n  };\n}\n\nexport default getMinMax;\n\n\n\n// WEBPACK FOOTER //\n// ./shared/getMinMax.js","let charLS;\n\nfunction jpegLSDecode (data, isSigned) {\n  // prepare input parameters\n  const dataPtr = charLS._malloc(data.length);\n\n  charLS.writeArrayToMemory(data, dataPtr);\n\n  // prepare output parameters\n  const imagePtrPtr = charLS._malloc(4);\n  const imageSizePtr = charLS._malloc(4);\n  const widthPtr = charLS._malloc(4);\n  const heightPtr = charLS._malloc(4);\n  const bitsPerSamplePtr = charLS._malloc(4);\n  const stridePtr = charLS._malloc(4);\n  const allowedLossyErrorPtr = charLS._malloc(4);\n  const componentsPtr = charLS._malloc(4);\n  const interleaveModePtr = charLS._malloc(4);\n\n  // Decode the image\n  const result = charLS.ccall(\n    'jpegls_decode',\n    'number',\n    ['number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number'],\n    [dataPtr, data.length, imagePtrPtr, imageSizePtr, widthPtr, heightPtr, bitsPerSamplePtr, stridePtr, componentsPtr, allowedLossyErrorPtr, interleaveModePtr]\n  );\n\n  // Extract result values into object\n  const image = {\n    result,\n    width: charLS.getValue(widthPtr, 'i32'),\n    height: charLS.getValue(heightPtr, 'i32'),\n    bitsPerSample: charLS.getValue(bitsPerSamplePtr, 'i32'),\n    stride: charLS.getValue(stridePtr, 'i32'),\n    components: charLS.getValue(componentsPtr, 'i32'),\n    allowedLossyError: charLS.getValue(allowedLossyErrorPtr, 'i32'),\n    interleaveMode: charLS.getValue(interleaveModePtr, 'i32'),\n    pixelData: undefined\n  };\n\n  // Copy image from emscripten heap into appropriate array buffer type\n  const imagePtr = charLS.getValue(imagePtrPtr, '*');\n\n  if (image.bitsPerSample <= 8) {\n    image.pixelData = new Uint8Array(image.width * image.height * image.components);\n    image.pixelData.set(new Uint8Array(charLS.HEAP8.buffer, imagePtr, image.pixelData.length));\n  } else if (isSigned) {\n    image.pixelData = new Int16Array(image.width * image.height * image.components);\n    image.pixelData.set(new Int16Array(charLS.HEAP16.buffer, imagePtr, image.pixelData.length));\n  } else {\n    image.pixelData = new Uint16Array(image.width * image.height * image.components);\n    image.pixelData.set(new Uint16Array(charLS.HEAP16.buffer, imagePtr, image.pixelData.length));\n  }\n\n  // free memory and return image object\n  charLS._free(dataPtr);\n  charLS._free(imagePtr);\n  charLS._free(imagePtrPtr);\n  charLS._free(imageSizePtr);\n  charLS._free(widthPtr);\n  charLS._free(heightPtr);\n  charLS._free(bitsPerSamplePtr);\n  charLS._free(stridePtr);\n  charLS._free(componentsPtr);\n  charLS._free(interleaveModePtr);\n\n  return image;\n}\n\nfunction initializeJPEGLS () {\n  // check to make sure codec is loaded\n  if (typeof CharLS === 'undefined') {\n    throw new Error('No JPEG-LS decoder loaded');\n  }\n\n  // Try to initialize CharLS\n  // CharLS https://github.com/cornerstonejs/charls\n  if (!charLS) {\n    charLS = CharLS();\n    if (!charLS || !charLS._jpegls_decode) {\n      throw new Error('JPEG-LS failed to initialize');\n    }\n  }\n\n}\n\nfunction decodeJPEGLS (imageFrame, pixelData) {\n  initializeJPEGLS();\n\n  const image = jpegLSDecode(pixelData, imageFrame.pixelRepresentation === 1);\n\n  // throw error if not success or too much data\n  if (image.result !== 0 && image.result !== 6) {\n    throw new Error(`JPEG-LS decoder failed to decode frame (error code ${image.result})`);\n  }\n\n  imageFrame.columns = image.width;\n  imageFrame.rows = image.height;\n  imageFrame.pixelData = image.pixelData;\n\n  return imageFrame;\n}\n\nexport default decodeJPEGLS;\nexport { initializeJPEGLS };\n\n\n\n// WEBPACK FOOTER //\n// ./webWorker/decodeTask/decoders/decodeJPEGLS.js","function decodeJpx (imageFrame, pixelData) {\n  const jpxImage = new JpxImage();\n\n  jpxImage.parse(pixelData);\n\n  const tileCount = jpxImage.tiles.length;\n\n  if (tileCount !== 1) {\n    throw new Error(`JPEG2000 decoder returned a tileCount of ${tileCount}, when 1 is expected`);\n  }\n\n  imageFrame.columns = jpxImage.width;\n  imageFrame.rows = jpxImage.height;\n  imageFrame.pixelData = jpxImage.tiles[0].items;\n\n  return imageFrame;\n}\n\nlet openJPEG;\n\nfunction decodeOpenJPEG (data, bytesPerPixel, signed) {\n  const dataPtr = openJPEG._malloc(data.length);\n\n  openJPEG.writeArrayToMemory(data, dataPtr);\n\n  // create param outpout\n  const imagePtrPtr = openJPEG._malloc(4);\n  const imageSizePtr = openJPEG._malloc(4);\n  const imageSizeXPtr = openJPEG._malloc(4);\n  const imageSizeYPtr = openJPEG._malloc(4);\n  const imageSizeCompPtr = openJPEG._malloc(4);\n\n  const t0 = new Date().getTime();\n  const ret = openJPEG.ccall('jp2_decode', 'number', ['number', 'number', 'number', 'number', 'number', 'number', 'number'],\n    [dataPtr, data.length, imagePtrPtr, imageSizePtr, imageSizeXPtr, imageSizeYPtr, imageSizeCompPtr]);\n  // add num vomp..etc\n\n  if (ret !== 0) {\n    console.log('[opj_decode] decoding failed!');\n    openJPEG._free(dataPtr);\n    openJPEG._free(openJPEG.getValue(imagePtrPtr, '*'));\n    openJPEG._free(imageSizeXPtr);\n    openJPEG._free(imageSizeYPtr);\n    openJPEG._free(imageSizePtr);\n    openJPEG._free(imageSizeCompPtr);\n\n    return;\n  }\n\n  const imagePtr = openJPEG.getValue(imagePtrPtr, '*');\n\n  const image = {\n    length: openJPEG.getValue(imageSizePtr, 'i32'),\n    sx: openJPEG.getValue(imageSizeXPtr, 'i32'),\n    sy: openJPEG.getValue(imageSizeYPtr, 'i32'),\n    nbChannels: openJPEG.getValue(imageSizeCompPtr, 'i32'), // hard coded for now\n    perf_timetodecode: undefined,\n    pixelData: undefined\n  };\n\n  // Copy the data from the EMSCRIPTEN heap into the correct type array\n  const length = image.sx * image.sy * image.nbChannels;\n  const src32 = new Int32Array(openJPEG.HEAP32.buffer, imagePtr, length);\n\n  if (bytesPerPixel === 1) {\n    if (Uint8Array.from) {\n      image.pixelData = Uint8Array.from(src32);\n    } else {\n      image.pixelData = new Uint8Array(length);\n      for (let i = 0; i < length; i++) {\n        image.pixelData[i] = src32[i];\n      }\n    }\n  } else if (signed) {\n    if (Int16Array.from) {\n      image.pixelData = Int16Array.from(src32);\n    } else {\n      image.pixelData = new Int16Array(length);\n      for (let i = 0; i < length; i++) {\n        image.pixelData[i] = src32[i];\n      }\n    }\n  } else if (Uint16Array.from) {\n    image.pixelData = Uint16Array.from(src32);\n  } else {\n    image.pixelData = new Uint16Array(length);\n    for (let i = 0; i < length; i++) {\n      image.pixelData[i] = src32[i];\n    }\n  }\n\n  const t1 = new Date().getTime();\n\n  image.perf_timetodecode = t1 - t0;\n\n  // free\n  openJPEG._free(dataPtr);\n  openJPEG._free(imagePtrPtr);\n  openJPEG._free(imagePtr);\n  openJPEG._free(imageSizePtr);\n  openJPEG._free(imageSizeXPtr);\n  openJPEG._free(imageSizeYPtr);\n  openJPEG._free(imageSizeCompPtr);\n\n  return image;\n}\n\nfunction decodeOpenJpeg2000 (imageFrame, pixelData) {\n  const bytesPerPixel = imageFrame.bitsAllocated <= 8 ? 1 : 2;\n  const signed = imageFrame.pixelRepresentation === 1;\n\n  const image = decodeOpenJPEG(pixelData, bytesPerPixel, signed);\n\n  imageFrame.columns = image.sx;\n  imageFrame.rows = image.sy;\n  imageFrame.pixelData = image.pixelData;\n  if (image.nbChannels > 1) {\n    imageFrame.photometricInterpretation = 'RGB';\n  }\n\n  return imageFrame;\n}\n\nfunction initializeJPEG2000 (decodeConfig) {\n  // check to make sure codec is loaded\n  if (!decodeConfig.usePDFJS) {\n    if (typeof OpenJPEG === 'undefined') {\n      throw new Error('OpenJPEG decoder not loaded');\n    }\n  }\n\n  if (!openJPEG) {\n    openJPEG = OpenJPEG();\n    if (!openJPEG || !openJPEG._jp2_decode) {\n      throw new Error('OpenJPEG failed to initialize');\n    }\n  }\n}\n\nfunction decodeJPEG2000 (imageFrame, pixelData, decodeConfig, options = {}) {\n  initializeJPEG2000(decodeConfig);\n\n  if (options.usePDFJS || decodeConfig.usePDFJS) {\n    // OHIF image-JPEG2000 https://github.com/OHIF/image-JPEG2000\n    // console.log('PDFJS')\n    return decodeJpx(imageFrame, pixelData);\n  }\n\n  // OpenJPEG2000 https://github.com/jpambrun/openjpeg\n  // console.log('OpenJPEG')\n  return decodeOpenJpeg2000(imageFrame, pixelData);\n}\n\nexport default decodeJPEG2000;\nexport { initializeJPEG2000 };\n\n\n\n// WEBPACK FOOTER //\n// ./webWorker/decodeTask/decoders/decodeJPEG2000.js","import { registerTaskHandler } from './webWorker.js';\nimport decodeTask from './decodeTask/decodeTask.js';\n\n// register our task\nregisterTaskHandler(decodeTask);\n\nexport { registerTaskHandler };\nexport { default as version } from '../version.js';\n\n\n\n// WEBPACK FOOTER //\n// ./webWorker/index.js","// an object of task handlers\nconst taskHandlers = {};\n\n// Flag to ensure web worker is only initialized once\nlet initialized = false;\n\n// the configuration object passed in when the web worker manager is initialized\nlet config;\n\n/**\n * Initialization function that loads additional web workers and initializes them\n * @param data\n */\nfunction initialize (data) {\n  // console.log('web worker initialize ', data.workerIndex);\n  // prevent initialization from happening more than once\n  if (initialized) {\n    return;\n  }\n\n  // save the config data\n  config = data.config;\n\n  // load any additional web worker tasks\n  if (data.config.webWorkerTaskPaths) {\n    for (let i = 0; i < data.config.webWorkerTaskPaths.length; i++) {\n      self.importScripts(data.config.webWorkerTaskPaths[i]);\n    }\n  }\n\n  // initialize each task handler\n  Object.keys(taskHandlers).forEach(function (key) {\n    taskHandlers[key].initialize(config.taskConfiguration);\n  });\n\n  // tell main ui thread that we have completed initialization\n  self.postMessage({\n    taskType: 'initialize',\n    status: 'success',\n    result: {\n    },\n    workerIndex: data.workerIndex\n  });\n\n  initialized = true;\n}\n\n/**\n * Function exposed to web worker tasks to register themselves\n * @param taskHandler\n */\nexport function registerTaskHandler (taskHandler) {\n  if (taskHandlers[taskHandler.taskType]) {\n    console.log('attempt to register duplicate task handler \"', taskHandler.taskType, '\"');\n\n    return false;\n  }\n  taskHandlers[taskHandler.taskType] = taskHandler;\n  if (initialized) {\n    taskHandler.initialize(config.taskConfiguration);\n  }\n}\n\n/**\n * Function to load a new web worker task with updated configuration\n * @param data\n */\nfunction loadWebWorkerTask (data) {\n  config = data.config;\n  self.importScripts(data.sourcePath);\n}\n\n/**\n * Web worker message handler - dispatches messages to the registered task handlers\n * @param msg\n */\nself.onmessage = function (msg) {\n  // console.log('web worker onmessage', msg.data);\n\n  // handle initialize message\n  if (msg.data.taskType === 'initialize') {\n    initialize(msg.data);\n\n    return;\n  }\n\n  // handle loadWebWorkerTask message\n  if (msg.data.taskType === 'loadWebWorkerTask') {\n    loadWebWorkerTask(msg.data);\n\n    return;\n  }\n\n  // dispatch the message if there is a handler registered for it\n  if (taskHandlers[msg.data.taskType]) {\n    taskHandlers[msg.data.taskType].handler(msg.data, function (result, transferList) {\n      self.postMessage({\n        taskType: msg.data.taskType,\n        status: 'success',\n        result,\n        workerIndex: msg.data.workerIndex\n      }, transferList);\n    });\n\n    return;\n  }\n\n  // not task handler registered - send a failure message back to ui thread\n  console.log('no task handler for ', msg.data.taskType);\n  console.log(taskHandlers);\n  self.postMessage({\n    taskType: msg.data.taskType,\n    status: 'failed - no task handler registered',\n    workerIndex: msg.data.workerIndex\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./webWorker/webWorker.js","import { initializeJPEG2000 } from './decoders/decodeJPEG2000.js';\nimport { initializeJPEGLS } from './decoders/decodeJPEGLS.js';\nimport getMinMax from '../../shared/getMinMax.js';\nimport decodeImageFrame from './decodeImageFrame.js';\n\n// flag to ensure codecs are loaded only once\nlet codecsLoaded = false;\n\n// the configuration object for the decodeTask\nlet decodeConfig;\n\n/**\n * Function to control loading and initializing the codecs\n * @param config\n */\nfunction loadCodecs (config) {\n  // prevent loading codecs more than once\n  if (codecsLoaded) {\n    return;\n  }\n\n  // Load the codecs\n  // console.time('loadCodecs');\n  self.importScripts(config.decodeTask.codecsPath);\n  codecsLoaded = true;\n  // console.timeEnd('loadCodecs');\n\n  // Initialize the codecs\n  if (config.decodeTask.initializeCodecsOnStartup) {\n    // console.time('initializeCodecs');\n    initializeJPEG2000(config.decodeTask);\n    initializeJPEGLS(config.decodeTask);\n    // console.timeEnd('initializeCodecs');\n  }\n}\n\n/**\n * Task initialization function\n */\nfunction initialize (config) {\n  decodeConfig = config;\n  if (config.decodeTask.loadCodecsOnStartup) {\n    loadCodecs(config);\n  }\n}\n\nfunction calculateMinMax (imageFrame) {\n  const minMax = getMinMax(imageFrame.pixelData);\n\n  if (decodeConfig.decodeTask.strict === true) {\n    if (imageFrame.smallestPixelValue !== minMax.min) {\n      console.warn('Image smallestPixelValue tag is incorrect. Rendering performance will suffer considerably.');\n    }\n\n    if (imageFrame.largestPixelValue !== minMax.max) {\n      console.warn('Image largestPixelValue tag is incorrect. Rendering performance will suffer considerably.');\n    }\n  } else {\n    imageFrame.smallestPixelValue = minMax.min;\n    imageFrame.largestPixelValue = minMax.max;\n  }\n}\n\n/**\n * Task handler function\n */\nfunction handler (data, doneCallback) {\n  // Load the codecs if they aren't already loaded\n  loadCodecs(decodeConfig);\n\n  const imageFrame = data.data.imageFrame;\n\n  // convert pixel data from ArrayBuffer to Uint8Array since web workers support passing ArrayBuffers but\n  // not typed arrays\n  const pixelData = new Uint8Array(data.data.pixelData);\n\n  decodeImageFrame(\n    imageFrame,\n    data.data.transferSyntax,\n    pixelData,\n    decodeConfig.decodeTask,\n    data.data.options);\n\n  if (!imageFrame.pixelData) {\n    throw new Error('decodeTask: imageFrame.pixelData is undefined after decoding');\n  }\n\n  calculateMinMax(imageFrame);\n\n  // convert from TypedArray to ArrayBuffer since web workers support passing ArrayBuffers but not\n  // typed arrays\n  imageFrame.pixelData = imageFrame.pixelData.buffer;\n\n  // invoke the callback with our result and pass the pixelData in the transferList to move it to\n  // UI thread without making a copy\n  doneCallback(imageFrame, [imageFrame.pixelData]);\n}\n\nexport default {\n  taskType: 'decodeTask',\n  handler,\n  initialize\n};\n\n\n\n// WEBPACK FOOTER //\n// ./webWorker/decodeTask/decodeTask.js"],"sourceRoot":""}