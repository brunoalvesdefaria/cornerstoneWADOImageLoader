{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///cornerstoneWADOImageLoader.min.js","webpack:///webpack/bootstrap ec82da010b37f517d9b5","webpack:///./externalModules.js","webpack:///./imageLoader/internal/index.js","webpack:///./shared/getMinMax.js","webpack:///./imageLoader/wadors/metaData/getValue.js","webpack:///./imageLoader/internal/options.js","webpack:///./webWorker/decodeTask/decoders/decodeJPEGLS.js","webpack:///./webWorker/decodeTask/decoders/decodeJPEG2000.js","webpack:///./imageLoader/wadouri/parseImageId.js","webpack:///./imageLoader/wadors/metaDataManager.js","webpack:///./imageLoader/createImage.js","webpack:///./webWorker/decodeTask/decodeImageFrame.js","webpack:///./webWorker/decodeTask/decoders/decodeLittleEndian.js","webpack:///./webWorker/decodeTask/decoders/decodeBigEndian.js","webpack:///./webWorker/decodeTask/decoders/decodeRLE.js","webpack:///./webWorker/decodeTask/decoders/decodeJPEGBaseline.js","webpack:///./webWorker/decodeTask/decoders/decodeJPEGLossless.js","webpack:///./imageLoader/wadouri/dataSetCacheManager.js","webpack:///./version.js","webpack:///./imageLoader/colorSpaceConverters/index.js","webpack:///./imageLoader/wadouri/index.js","webpack:///./imageLoader/wadouri/metaData/index.js","webpack:///./imageLoader/wadouri/metaData/getImagePixelModule.js","webpack:///./imageLoader/wadouri/metaData/getLUTs.js","webpack:///./imageLoader/wadouri/metaData/getModalityLUTOutputPixelRepresentation.js","webpack:///./imageLoader/wadouri/metaData/getNumberValues.js","webpack:///./imageLoader/wadors/index.js","webpack:///./imageLoader/wadors/metaData/index.js","webpack:///./imageLoader/wadors/metaData/getNumberValue.js","webpack:///./imageLoader/wadors/metaData/getNumberValues.js","webpack:///./imageLoader/wadors/findIndexOfString.js","webpack:///./imageLoader/wadors/getPixelData.js","webpack:///./imageLoader/wadors/loadImage.js","webpack:///./imageLoader/getImageFrame.js","webpack:///./imageLoader/decodeImageFrame.js","webpack:///./imageLoader/webWorkerManager.js","webpack:///./imageLoader/decodeJPEGBaseline8BitColor.js","webpack:///./imageLoader/isColorImage.js","webpack:///./imageLoader/convertColorSpace.js","webpack:///./imageLoader/isJPEGBaseline8BitColor.js","webpack:///./imageLoader/wadouri/fileManager.js","webpack:///./imageLoader/wadouri/getEncapsulatedImageFrame.js","webpack:///./imageLoader/wadouri/getUncompressedImageFrame.js","webpack:///./imageLoader/wadouri/unpackBinaryFrame.js","webpack:///./imageLoader/wadouri/loadFileRequest.js","webpack:///./imageLoader/wadouri/loadImage.js","webpack:///./imageLoader/index.js","webpack:///./imageLoader/colorSpaceConverters/convertRGBColorByPixel.js","webpack:///./imageLoader/colorSpaceConverters/convertRGBColorByPlane.js","webpack:///./imageLoader/colorSpaceConverters/convertYBRFullByPixel.js","webpack:///./imageLoader/colorSpaceConverters/convertYBRFullByPlane.js","webpack:///./imageLoader/colorSpaceConverters/convertPALETTECOLOR.js","webpack:///./imageLoader/wadouri/metaData/metaDataProvider.js","webpack:///external {\"commonjs\":\"dicom-parser\",\"commonjs2\":\"dicom-parser\",\"amd\":\"dicom-parser\",\"root\":\"dicomParser\"}","webpack:///./imageLoader/registerLoaders.js","webpack:///./imageLoader/wadors/metaData/getNumberString.js","webpack:///./imageLoader/wadors/metaData/metaDataProvider.js","webpack:///./imageLoader/internal/xhrRequest.js","webpack:///./imageLoader/wadors/register.js","webpack:///./imageLoader/wadouri/getPixelData.js","webpack:///./imageLoader/wadouri/register.js","webpack:///./imageLoader/configure.js"],"names":["root","factory","exports","module","require","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE_52__","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","value","external","dicomParser","undefined","_dicomParser","obj","newObj","key","default","_registerLoaders","_registerLoaders2","cornerstone","cs","internal","xhrRequest","getOptions","setOptions","_xhrRequest","_xhrRequest2","_options","getMinMax","storedPixelData","min","max","storedPixel","numPixels","length","index","Math","getValue","element","defaultValue","Value","newOptions","keys","forEach","options","beforeSend","imageCreated","strict","decodeConfig","jpegLSDecode","data","isSigned","dataPtr","charLS","_malloc","writeArrayToMemory","imagePtrPtr","imageSizePtr","widthPtr","heightPtr","bitsPerSamplePtr","stridePtr","allowedLossyErrorPtr","componentsPtr","interleaveModePtr","result","ccall","image","width","height","bitsPerSample","stride","components","allowedLossyError","interleaveMode","pixelData","imagePtr","Uint8Array","set","HEAP8","buffer","Int16Array","HEAP16","Uint16Array","_free","initializeJPEGLS","CharLS","Error","_jpegls_decode","decodeJPEGLS","imageFrame","pixelRepresentation","columns","rows","decodeJpx","jpxImage","JpxImage","parse","tileCount","tiles","items","decodeOpenJPEG","bytesPerPixel","signed","openJPEG","imageSizeXPtr","imageSizeYPtr","imageSizeCompPtr","t0","Date","getTime","console","log","sx","sy","nbChannels","perf_timetodecode","src32","Int32Array","HEAP32","from","t1","decodeOpenJpeg2000","bitsAllocated","photometricInterpretation","initializeJPEG2000","usePDFJS","OpenJPEG","_jp2_decode","decodeJPEG2000","arguments","parseImageId","imageId","firstColonIndex","indexOf","url","substring","frameIndex","frame","frameStr","substr","parseInt","scheme","add","metadata","imageIds","remove","purge","_interopRequireDefault","isModalityLUTForDisplay","sopClassUid","convertToIntPixelData","floatPixelData","floatMinMax","_getMinMax2","floatRange","abs","slope","intercept","intPixelData","rescaledPixel","floor","setPixelDataType","Float32Array","createImage","transferSyntax","_externalModules","canvas","document","createElement","_getImageFrame2","decodePromise","_decodeImageFrame2","Promise","resolve","reject","then","imagePlaneModule","metaData","voiLutModule","modalityLutModule","sopCommonModule","isColorImage","_isColorImage2","_isJPEGBaseline8BitColor2","context","getContext","imageData","createImageData","_convertColorSpace2","minMax","smallestPixelValue","largestPixelValue","color","columnPixelSpacing","pixelSpacing","rescaleIntercept","invert","minPixelValue","maxPixelValue","render","rowPixelSpacing","sizeInBytes","rescaleSlope","windowCenter","windowWidth","decodeTimeInMS","results","getPixelData","renderColorImage","getCanvas","lastImageIdDrawn","putImageData","renderGrayscaleImage","modalityLUTSequence","sopClassUID","modalityLUT","voiLUTSequence","voiLUT","maxVoi","minVoi","_getImageFrame","_decodeImageFrame","_isColorImage","_convertColorSpace","_getMinMax","_isJPEGBaseline8BitColor","decodeImageFrame","start","_decodeLittleEndian2","_decodeBigEndian2","_decodeRLE2","_decodeJPEGBaseline2","_decodeJPEGLossless2","_decodeJPEGLS2","_decodeJPEG2","end","_decodeLittleEndian","_decodeBigEndian","_decodeRLE","_decodeJPEGBaseline","_decodeJPEGLossless","_decodeJPEGLS","_decodeJPEG","decodeLittleEndian","arrayBuffer","offset","byteOffset","slice","swap16","val","decodeBigEndian","decodeRLE","planarConfiguration","decode8Planar","decode8","decode16","frameData","frameSize","outFrame","ArrayBuffer","samplesPerPixel","header","DataView","Int8Array","out","outIndex","numSegments","getInt32","inIndex","maxIndex","endOfSegment","j","highByte","decodeJPEGBaseline","JpegImage","jpeg","colorTransform","getData","getData16","decodeJPEGLossless","lossless","Decoder","byteOutput","decoder","decompressedData","decode","isLoaded","uri","loadedDataSets","dataSet","load","loadRequest","_index","cacheCount","promises","loadDICOMPromise","promise","dicomPart10AsArrayBuffer","byteArray","parseDicom","error","unload","_convertRGBColorByPixel","_convertRGBColorByPlane","_convertYBRFullByPixel","_convertYBRFullByPlane","_convertPALETTECOLOR","_dataSetCacheManager","_dataSetCacheManager2","_fileManager","_fileManager2","_getEncapsulatedImageFrame","_getEncapsulatedImageFrame2","_getUncompressedImageFrame","_getUncompressedImageFrame2","_loadFileRequest","_loadFileRequest2","_loadImage","_parseImageId","_parseImageId2","_unpackBinaryFrame","_unpackBinaryFrame2","_register","_register2","getImagePixelModule","getLUTs","getModalityLUTOutputPixelRepresentation","getNumberValues","metaDataProvider","dataSetCacheManager","fileManager","getEncapsulatedImageFrame","getUncompressedImageFrame","loadFileRequest","loadImageFromPromise","getLoaderForScheme","loadImage","unpackBinaryFrame","register","_getImagePixelModule","_getLUTs","_getModalityLUTOutputPixelRepresentation","_getNumberValues","_metaDataProvider","getLutDescriptor","tag","elements","uint16","getLutData","lutDataSet","lutDescriptor","lut","lutData","dataOffset","populatePaletteColorLut","imagePixelModule","redPaletteColorLookupTableDescriptor","greenPaletteColorLookupTableDescriptor","bluePaletteColorLookupTableDescriptor","numLutEntries","x00281201","lutBitsAllocated","redPaletteColorLookupTableData","greenPaletteColorLookupTableData","bluePaletteColorLookupTableData","populateSmallestLargestPixelValues","int16","string","bitsStored","highBit","pixelAspectRatio","x00281101","getLUT","numLUTEntries","firstValueMapped","numBitsPerEntry","id","lutSequence","luts","push","getMinStoredPixelValue","floatString","x00283000","minimumLength","values","valueAsString","split","parseFloat","_findIndexOfString","_findIndexOfString2","_getPixelData","_getPixelData2","_metaDataManager","_metaDataManager2","_loadImage2","getNumberString","getNumberValue","findIndexOfString","metaDataManager","_getNumberString","_getNumberValue","_getValue","_getValue2","checkToken","token","endIndex","stringToUint8Array","str","uint","charCodeAt","findBoundary","findContentType","trim","uint8ArrayToString","String","fromCharCode","mediaType","headers","accept","imageFrameAsArrayBuffer","response","tokenIndex","boundary","contentType","getTransferSyntaxForContentType","_createImage2","loadTimeInMS","cancelFn","_createImage","getImageFrame","processDecodeTask","priority","transferList","transferPixelData","loaderOptions","useWebWorkers","decodeArguments","apply","_webWorkerManager2","addTask","_decodeJPEGBaseline8BitColor2","_webWorkerManager","_decodeJPEGBaseline8BitColor","startTaskOnWebWorker","tasks","webWorkers","status","task","shift","statistics","totalTimeDelayedInMS","added","worker","postMessage","taskType","workerIndex","numTasksExecuting","config","maxWebWorkers","spawnWebWorker","handleMessageFromWorker","msg","deferred","numTasksCompleted","totalTaskTimeInMS","Worker","webWorkerPath","addEventListener","initialize","configObject","defaultConfig","taskConfiguration","decodeTask","navigator","hardwareConcurrency","startWebWorkersOnDemand","loadWebWorkerTask","sourcePath","taskConfig","webWorkerTaskPaths","assign","taskId","nextTaskId","splice","setTaskPriority","cancelTask","reason","getStatistics","numWebWorkers","numTasksQueued","loadCodecsOnStartup","initializeCodecsOnStartup","codecsPath","arrayBufferToString","binaryToString","Array","binary","decodeURIComponent","escape","_error","URIError","decodeJPEGBaseline8BitColor","imgBlob","Blob","type","fileReader","FileReader","readAsBinaryString","readAsArrayBuffer","onload","img","Image","drawImage","getImageData","onerror","src","window","btoa","e","photoMetricInterpretation","convertRGB","rgbaBuffer","convertRGBColorByPixel","convertRGBColorByPlane","convertYBRFull","convertYBRFullByPixel","convertYBRFullByPlane","convertColorSpace","convertPALETTECOLOR","isJPEGBaseline8BitColor","file","files","framesAreFragmented","intString","x7fe00010","fragments","basicOffsetTable","readEncapsulatedImageFrame","createJPEGBasicOffsetTable","readEncapsulatedPixelDataFromFragments","pixelDataElement","x7fe00008","pixelDataOffset","pixelsPerFrame","frameOffset","isBitSet","byte","bitPos","bytePos","parsedImageId","fileIndex","target","addDecache","decache","dataSetPromise","sharedCacheKey","loadEnd","totalTimeInMS","loadImageFromDataSet","loader","_index2","_index3","_configure","_version","_index4","rgbIndex","rgbaIndex","rIndex","gIndex","bIndex","ybrIndex","y","cb","cr","yIndex","cbIndex","crIndex","convertLUTto8Bit","numEntries","cleanedLUT","Uint8ClampedArray","rData","gData","bData","len","palIndex","rDataCleaned","gDataCleaned","bDataCleaned","modality","seriesInstanceUID","seriesNumber","studyInstanceUID","seriesDate","parseDA","seriesTime","parseTM","patientAge","patientSize","patientWeight","imageOrientationPatient","_getNumberValues2","imagePositionPatient","rowCosines","columnCosines","frameOfReferenceUID","sliceThickness","sliceLocation","_getImagePixelModule2","rescaleType","_getLUTs2","modalityLUTOutputPixelRepresentation","_getModalityLUTOutputPixelRepresentation2","x00283010","sopInstanceUID","radiopharmaceuticalInfo","x00540016","firstRadiopharmaceuticalInfoDataSet","radiopharmaceuticalStartTime","radionuclideTotalDose","radionuclideHalfLife","registerLoaders","_getNumberValue2","params","xhr","XMLHttpRequest","open","responseType","setRequestHeader","onloadstart","event","eventData","triggerEvent","events","onloadend","onreadystatechange","readyState","onprogress","oProgress","loaded","total","percentComplete","lengthComputable","round","send","registerImageLoader","addProvider","encapsulatedPixelData","configure"],"mappings":"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","file":"cornerstoneWADOImageLoader.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"dicom-parser\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"cornerstoneWADOImageLoader\", [\"dicom-parser\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cornerstoneWADOImageLoader\"] = factory(require(\"dicom-parser\"));\n\telse\n\t\troot[\"cornerstoneWADOImageLoader\"] = factory(root[\"dicomParser\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_52__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","/*! cornerstone-wado-image-loader - 2.0.0 - 2018-04-06 | (c) 2016 Chris Hafey | https://github.com/cornerstonejs/cornerstoneWADOImageLoader */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"dicom-parser\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"cornerstoneWADOImageLoader\", [\"dicom-parser\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cornerstoneWADOImageLoader\"] = factory(require(\"dicom-parser\"));\n\telse\n\t\troot[\"cornerstoneWADOImageLoader\"] = factory(root[\"dicomParser\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_52__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 45);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.external = exports.dicomParser = undefined;\n\nvar _dicomParser = __webpack_require__(52);\n\nvar dicomParser = _interopRequireWildcard(_dicomParser);\n\nvar _registerLoaders = __webpack_require__(53);\n\nvar _registerLoaders2 = _interopRequireDefault(_registerLoaders);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/* eslint import/extensions:0 */\nvar cornerstone = void 0;\n\nvar external = {\n  set cornerstone(cs) {\n    cornerstone = cs;\n\n    (0, _registerLoaders2.default)(cornerstone);\n  },\n  get cornerstone() {\n    return cornerstone;\n  }\n};\n\nexports.dicomParser = dicomParser;\nexports.external = external;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.internal = exports.xhrRequest = exports.getOptions = exports.setOptions = undefined;\n\nvar _xhrRequest = __webpack_require__(56);\n\nvar _xhrRequest2 = _interopRequireDefault(_xhrRequest);\n\nvar _options = __webpack_require__(4);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar internal = {\n  xhrRequest: _xhrRequest2.default,\n  setOptions: _options.setOptions,\n  getOptions: _options.getOptions\n};\n\nexports.setOptions = _options.setOptions;\nexports.getOptions = _options.getOptions;\nexports.xhrRequest = _xhrRequest2.default;\nexports.internal = internal;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction getMinMax(storedPixelData) {\n  // we always calculate the min max values since they are not always\n  // present in DICOM and we don't want to trust them anyway as cornerstone\n  // depends on us providing reliable values for these\n  var min = storedPixelData[0];\n  var max = storedPixelData[0];\n  var storedPixel = void 0;\n  var numPixels = storedPixelData.length;\n\n  for (var index = 1; index < numPixels; index++) {\n    storedPixel = storedPixelData[index];\n    min = Math.min(min, storedPixel);\n    max = Math.max(max, storedPixel);\n  }\n\n  return {\n    min: min,\n    max: max\n  };\n}\n\nexports.default = getMinMax;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n\n/**\n * Returns the raw value\n *\n * @param element - The javascript object for the specified element in the metadata\n * @param [index] - the index of the value in a multi-valued element, default is 0\n * @param [defaultValue] - The default value to return if the element does not exist\n * @returns {*}\n */\nfunction getValue(element, index, defaultValue) {\n  index = index || 0;\n  if (!element) {\n    return defaultValue;\n  }\n  // Value is not present if the attribute has a zero length value\n  if (!element.Value) {\n    return defaultValue;\n  }\n  // make sure we have the specified index\n  if (element.Value.length <= index) {\n    return defaultValue;\n  }\n\n  return element.Value[index];\n}\n\nexports.default = getValue;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setOptions = setOptions;\nexports.getOptions = getOptions;\nvar options = {\n  // callback allowing customization of the xhr (e.g. adding custom auth headers, cors, etc)\n  beforeSend: function beforeSend() /* xhr, imageId */{},\n\n  // callback allowing modification of newly created image objects\n  imageCreated: function imageCreated() /* image */{},\n\n  strict: false,\n  decodeConfig: {}\n};\n\nfunction setOptions(newOptions) {\n  Object.keys(newOptions).forEach(function (key) {\n    options[key] = newOptions[key];\n  });\n}\n\nfunction getOptions() {\n  return options;\n}\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar charLS = void 0;\n\nfunction jpegLSDecode(data, isSigned) {\n  // prepare input parameters\n  var dataPtr = charLS._malloc(data.length);\n\n  charLS.writeArrayToMemory(data, dataPtr);\n\n  // prepare output parameters\n  var imagePtrPtr = charLS._malloc(4);\n  var imageSizePtr = charLS._malloc(4);\n  var widthPtr = charLS._malloc(4);\n  var heightPtr = charLS._malloc(4);\n  var bitsPerSamplePtr = charLS._malloc(4);\n  var stridePtr = charLS._malloc(4);\n  var allowedLossyErrorPtr = charLS._malloc(4);\n  var componentsPtr = charLS._malloc(4);\n  var interleaveModePtr = charLS._malloc(4);\n\n  // Decode the image\n  var result = charLS.ccall('jpegls_decode', 'number', ['number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number'], [dataPtr, data.length, imagePtrPtr, imageSizePtr, widthPtr, heightPtr, bitsPerSamplePtr, stridePtr, componentsPtr, allowedLossyErrorPtr, interleaveModePtr]);\n\n  // Extract result values into object\n  var image = {\n    result: result,\n    width: charLS.getValue(widthPtr, 'i32'),\n    height: charLS.getValue(heightPtr, 'i32'),\n    bitsPerSample: charLS.getValue(bitsPerSamplePtr, 'i32'),\n    stride: charLS.getValue(stridePtr, 'i32'),\n    components: charLS.getValue(componentsPtr, 'i32'),\n    allowedLossyError: charLS.getValue(allowedLossyErrorPtr, 'i32'),\n    interleaveMode: charLS.getValue(interleaveModePtr, 'i32'),\n    pixelData: undefined\n  };\n\n  // Copy image from emscripten heap into appropriate array buffer type\n  var imagePtr = charLS.getValue(imagePtrPtr, '*');\n\n  if (image.bitsPerSample <= 8) {\n    image.pixelData = new Uint8Array(image.width * image.height * image.components);\n    image.pixelData.set(new Uint8Array(charLS.HEAP8.buffer, imagePtr, image.pixelData.length));\n  } else if (isSigned) {\n    image.pixelData = new Int16Array(image.width * image.height * image.components);\n    image.pixelData.set(new Int16Array(charLS.HEAP16.buffer, imagePtr, image.pixelData.length));\n  } else {\n    image.pixelData = new Uint16Array(image.width * image.height * image.components);\n    image.pixelData.set(new Uint16Array(charLS.HEAP16.buffer, imagePtr, image.pixelData.length));\n  }\n\n  // free memory and return image object\n  charLS._free(dataPtr);\n  charLS._free(imagePtr);\n  charLS._free(imagePtrPtr);\n  charLS._free(imageSizePtr);\n  charLS._free(widthPtr);\n  charLS._free(heightPtr);\n  charLS._free(bitsPerSamplePtr);\n  charLS._free(stridePtr);\n  charLS._free(componentsPtr);\n  charLS._free(interleaveModePtr);\n\n  return image;\n}\n\nfunction initializeJPEGLS() {\n  // check to make sure codec is loaded\n  if (typeof CharLS === 'undefined') {\n    throw new Error('No JPEG-LS decoder loaded');\n  }\n\n  // Try to initialize CharLS\n  // CharLS https://github.com/cornerstonejs/charls\n  if (!charLS) {\n    charLS = CharLS();\n    if (!charLS || !charLS._jpegls_decode) {\n      throw new Error('JPEG-LS failed to initialize');\n    }\n  }\n}\n\nfunction decodeJPEGLS(imageFrame, pixelData) {\n  initializeJPEGLS();\n\n  var image = jpegLSDecode(pixelData, imageFrame.pixelRepresentation === 1);\n\n  // throw error if not success or too much data\n  if (image.result !== 0 && image.result !== 6) {\n    throw new Error('JPEG-LS decoder failed to decode frame (error code ' + image.result + ')');\n  }\n\n  imageFrame.columns = image.width;\n  imageFrame.rows = image.height;\n  imageFrame.pixelData = image.pixelData;\n\n  return imageFrame;\n}\n\nexports.default = decodeJPEGLS;\nexports.initializeJPEGLS = initializeJPEGLS;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction decodeJpx(imageFrame, pixelData) {\n  var jpxImage = new JpxImage();\n\n  jpxImage.parse(pixelData);\n\n  var tileCount = jpxImage.tiles.length;\n\n  if (tileCount !== 1) {\n    throw new Error('JPEG2000 decoder returned a tileCount of ' + tileCount + ', when 1 is expected');\n  }\n\n  imageFrame.columns = jpxImage.width;\n  imageFrame.rows = jpxImage.height;\n  imageFrame.pixelData = jpxImage.tiles[0].items;\n\n  return imageFrame;\n}\n\nvar openJPEG = void 0;\n\nfunction decodeOpenJPEG(data, bytesPerPixel, signed) {\n  var dataPtr = openJPEG._malloc(data.length);\n\n  openJPEG.writeArrayToMemory(data, dataPtr);\n\n  // create param outpout\n  var imagePtrPtr = openJPEG._malloc(4);\n  var imageSizePtr = openJPEG._malloc(4);\n  var imageSizeXPtr = openJPEG._malloc(4);\n  var imageSizeYPtr = openJPEG._malloc(4);\n  var imageSizeCompPtr = openJPEG._malloc(4);\n\n  var t0 = new Date().getTime();\n  var ret = openJPEG.ccall('jp2_decode', 'number', ['number', 'number', 'number', 'number', 'number', 'number', 'number'], [dataPtr, data.length, imagePtrPtr, imageSizePtr, imageSizeXPtr, imageSizeYPtr, imageSizeCompPtr]);\n  // add num vomp..etc\n\n  if (ret !== 0) {\n    console.log('[opj_decode] decoding failed!');\n    openJPEG._free(dataPtr);\n    openJPEG._free(openJPEG.getValue(imagePtrPtr, '*'));\n    openJPEG._free(imageSizeXPtr);\n    openJPEG._free(imageSizeYPtr);\n    openJPEG._free(imageSizePtr);\n    openJPEG._free(imageSizeCompPtr);\n\n    return;\n  }\n\n  var imagePtr = openJPEG.getValue(imagePtrPtr, '*');\n\n  var image = {\n    length: openJPEG.getValue(imageSizePtr, 'i32'),\n    sx: openJPEG.getValue(imageSizeXPtr, 'i32'),\n    sy: openJPEG.getValue(imageSizeYPtr, 'i32'),\n    nbChannels: openJPEG.getValue(imageSizeCompPtr, 'i32'), // hard coded for now\n    perf_timetodecode: undefined,\n    pixelData: undefined\n  };\n\n  // Copy the data from the EMSCRIPTEN heap into the correct type array\n  var length = image.sx * image.sy * image.nbChannels;\n  var src32 = new Int32Array(openJPEG.HEAP32.buffer, imagePtr, length);\n\n  if (bytesPerPixel === 1) {\n    if (Uint8Array.from) {\n      image.pixelData = Uint8Array.from(src32);\n    } else {\n      image.pixelData = new Uint8Array(length);\n      for (var i = 0; i < length; i++) {\n        image.pixelData[i] = src32[i];\n      }\n    }\n  } else if (signed) {\n    if (Int16Array.from) {\n      image.pixelData = Int16Array.from(src32);\n    } else {\n      image.pixelData = new Int16Array(length);\n      for (var _i = 0; _i < length; _i++) {\n        image.pixelData[_i] = src32[_i];\n      }\n    }\n  } else if (Uint16Array.from) {\n    image.pixelData = Uint16Array.from(src32);\n  } else {\n    image.pixelData = new Uint16Array(length);\n    for (var _i2 = 0; _i2 < length; _i2++) {\n      image.pixelData[_i2] = src32[_i2];\n    }\n  }\n\n  var t1 = new Date().getTime();\n\n  image.perf_timetodecode = t1 - t0;\n\n  // free\n  openJPEG._free(dataPtr);\n  openJPEG._free(imagePtrPtr);\n  openJPEG._free(imagePtr);\n  openJPEG._free(imageSizePtr);\n  openJPEG._free(imageSizeXPtr);\n  openJPEG._free(imageSizeYPtr);\n  openJPEG._free(imageSizeCompPtr);\n\n  return image;\n}\n\nfunction decodeOpenJpeg2000(imageFrame, pixelData) {\n  var bytesPerPixel = imageFrame.bitsAllocated <= 8 ? 1 : 2;\n  var signed = imageFrame.pixelRepresentation === 1;\n\n  var image = decodeOpenJPEG(pixelData, bytesPerPixel, signed);\n\n  imageFrame.columns = image.sx;\n  imageFrame.rows = image.sy;\n  imageFrame.pixelData = image.pixelData;\n  if (image.nbChannels > 1) {\n    imageFrame.photometricInterpretation = 'RGB';\n  }\n\n  return imageFrame;\n}\n\nfunction initializeJPEG2000(decodeConfig) {\n  // check to make sure codec is loaded\n  if (!decodeConfig.usePDFJS) {\n    if (typeof OpenJPEG === 'undefined') {\n      throw new Error('OpenJPEG decoder not loaded');\n    }\n  }\n\n  if (!openJPEG) {\n    openJPEG = OpenJPEG();\n    if (!openJPEG || !openJPEG._jp2_decode) {\n      throw new Error('OpenJPEG failed to initialize');\n    }\n  }\n}\n\nfunction decodeJPEG2000(imageFrame, pixelData, decodeConfig) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  initializeJPEG2000(decodeConfig);\n\n  if (options.usePDFJS || decodeConfig.usePDFJS) {\n    // OHIF image-JPEG2000 https://github.com/OHIF/image-JPEG2000\n    // console.log('PDFJS')\n    return decodeJpx(imageFrame, pixelData);\n  }\n\n  // OpenJPEG2000 https://github.com/jpambrun/openjpeg\n  // console.log('OpenJPEG')\n  return decodeOpenJpeg2000(imageFrame, pixelData);\n}\n\nexports.default = decodeJPEG2000;\nexports.initializeJPEG2000 = initializeJPEG2000;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction parseImageId(imageId) {\n  // build a url by parsing out the url scheme and frame index from the imageId\n  var firstColonIndex = imageId.indexOf(':');\n  var url = imageId.substring(firstColonIndex + 1);\n  var frameIndex = url.indexOf('frame=');\n  var frame = void 0;\n\n  if (frameIndex !== -1) {\n    var frameStr = url.substr(frameIndex + 6);\n\n    frame = parseInt(frameStr, 10);\n    url = url.substr(0, frameIndex - 1);\n  }\n\n  return {\n    scheme: imageId.substr(0, firstColonIndex),\n    url: url,\n    frame: frame\n  };\n}\n\nexports.default = parseImageId;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n\nvar imageIds = [];\n\nfunction add(imageId, metadata) {\n  imageIds[imageId] = metadata;\n}\n\nfunction get(imageId) {\n  return imageIds[imageId];\n}\n\nfunction remove(imageId) {\n  imageIds[imageId] = undefined;\n}\n\nfunction purge() {\n  imageIds = [];\n}\n\nexports.default = {\n  add: add,\n  get: get,\n  remove: remove,\n  purge: purge\n};\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _externalModules = __webpack_require__(0);\n\nvar _getImageFrame = __webpack_require__(32);\n\nvar _getImageFrame2 = _interopRequireDefault(_getImageFrame);\n\nvar _decodeImageFrame = __webpack_require__(33);\n\nvar _decodeImageFrame2 = _interopRequireDefault(_decodeImageFrame);\n\nvar _isColorImage = __webpack_require__(36);\n\nvar _isColorImage2 = _interopRequireDefault(_isColorImage);\n\nvar _convertColorSpace = __webpack_require__(37);\n\nvar _convertColorSpace2 = _interopRequireDefault(_convertColorSpace);\n\nvar _getMinMax = __webpack_require__(2);\n\nvar _getMinMax2 = _interopRequireDefault(_getMinMax);\n\nvar _isJPEGBaseline8BitColor = __webpack_require__(38);\n\nvar _isJPEGBaseline8BitColor2 = _interopRequireDefault(_isJPEGBaseline8BitColor);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar lastImageIdDrawn = '';\n\nfunction isModalityLUTForDisplay(sopClassUid) {\n  // special case for XA and XRF\n  // https://groups.google.com/forum/#!searchin/comp.protocols.dicom/Modality$20LUT$20XA/comp.protocols.dicom/UBxhOZ2anJ0/D0R_QP8V2wIJ\n  return sopClassUid !== '1.2.840.10008.5.1.4.1.1.12.1' && // XA\n  sopClassUid !== '1.2.840.10008.5.1.4.1.1.12.2.1'; // XRF\n}\n\nfunction convertToIntPixelData(floatPixelData) {\n  var floatMinMax = (0, _getMinMax2.default)(floatPixelData);\n  var floatRange = Math.abs(floatMinMax.max - floatMinMax.min);\n  var intRange = 65535;\n  var slope = floatRange / intRange;\n  var intercept = floatMinMax.min;\n  var numPixels = floatPixelData.length;\n  var intPixelData = new Uint16Array(numPixels);\n  var min = 65535;\n  var max = 0;\n\n  for (var i = 0; i < numPixels; i++) {\n    var rescaledPixel = Math.floor((floatPixelData[i] - intercept) / slope);\n\n    intPixelData[i] = rescaledPixel;\n    min = Math.min(min, rescaledPixel);\n    max = Math.max(max, rescaledPixel);\n  }\n\n  return {\n    min: min,\n    max: max,\n    intPixelData: intPixelData,\n    slope: slope,\n    intercept: intercept\n  };\n}\n\n/**\n * Helper function to set pixel data to the right typed array.  This is needed because web workers\n * can transfer array buffers but not typed arrays\n * @param imageFrame\n */\nfunction setPixelDataType(imageFrame) {\n  if (imageFrame.bitsAllocated === 32) {\n    imageFrame.pixelData = new Float32Array(imageFrame.pixelData);\n  } else if (imageFrame.bitsAllocated === 16) {\n    if (imageFrame.pixelRepresentation === 0) {\n      imageFrame.pixelData = new Uint16Array(imageFrame.pixelData);\n    } else {\n      imageFrame.pixelData = new Int16Array(imageFrame.pixelData);\n    }\n  } else {\n    imageFrame.pixelData = new Uint8Array(imageFrame.pixelData);\n  }\n}\n\nfunction createImage(imageId, pixelData, transferSyntax, options) {\n  var cornerstone = _externalModules.external.cornerstone;\n  var canvas = document.createElement('canvas');\n  var imageFrame = (0, _getImageFrame2.default)(imageId);\n  var decodePromise = (0, _decodeImageFrame2.default)(imageFrame, transferSyntax, pixelData, canvas, options);\n\n  return new Promise(function (resolve, reject) {\n    decodePromise.then(function (imageFrame) {\n      var imagePlaneModule = cornerstone.metaData.get('imagePlaneModule', imageId) || {};\n      var voiLutModule = cornerstone.metaData.get('voiLutModule', imageId) || {};\n      var modalityLutModule = cornerstone.metaData.get('modalityLutModule', imageId) || {};\n      var sopCommonModule = cornerstone.metaData.get('sopCommonModule', imageId) || {};\n      var isColorImage = (0, _isColorImage2.default)(imageFrame.photometricInterpretation);\n\n      // JPEGBaseline (8 bits) is already returning the pixel data in the right format (rgba)\n      // because it's using a canvas to load and decode images.\n      if (!(0, _isJPEGBaseline8BitColor2.default)(imageFrame, transferSyntax)) {\n        setPixelDataType(imageFrame);\n\n        // convert color space\n        if (isColorImage) {\n          // setup the canvas context\n          canvas.height = imageFrame.rows;\n          canvas.width = imageFrame.columns;\n\n          var context = canvas.getContext('2d');\n          var imageData = context.createImageData(imageFrame.columns, imageFrame.rows);\n\n          (0, _convertColorSpace2.default)(imageFrame, imageData);\n          imageFrame.imageData = imageData;\n          imageFrame.pixelData = imageData.data;\n\n          // calculate smallest and largest PixelValue of the converted pixelData\n          var minMax = (0, _getMinMax2.default)(imageFrame.pixelData);\n\n          imageFrame.smallestPixelValue = minMax.min;\n          imageFrame.largestPixelValue = minMax.max;\n        }\n      }\n\n      var image = {\n        imageId: imageId,\n        color: isColorImage,\n        columnPixelSpacing: imagePlaneModule.pixelSpacing ? imagePlaneModule.pixelSpacing[1] : undefined,\n        columns: imageFrame.columns,\n        height: imageFrame.rows,\n        intercept: modalityLutModule.rescaleIntercept ? modalityLutModule.rescaleIntercept : 0,\n        invert: imageFrame.photometricInterpretation === 'MONOCHROME1',\n        minPixelValue: imageFrame.smallestPixelValue,\n        maxPixelValue: imageFrame.largestPixelValue,\n        render: undefined, // set below\n        rowPixelSpacing: imagePlaneModule.pixelSpacing ? imagePlaneModule.pixelSpacing[0] : undefined,\n        rows: imageFrame.rows,\n        sizeInBytes: imageFrame.pixelData.length,\n        slope: modalityLutModule.rescaleSlope ? modalityLutModule.rescaleSlope : 1,\n        width: imageFrame.columns,\n        windowCenter: voiLutModule.windowCenter ? voiLutModule.windowCenter[0] : undefined,\n        windowWidth: voiLutModule.windowWidth ? voiLutModule.windowWidth[0] : undefined,\n        decodeTimeInMS: imageFrame.decodeTimeInMS,\n        floatPixelData: undefined\n      };\n\n      // add function to return pixel data\n      if (imageFrame.pixelData instanceof Float32Array) {\n        var floatPixelData = imageFrame.pixelData;\n        var results = convertToIntPixelData(floatPixelData);\n\n        image.minPixelValue = results.min;\n        image.maxPixelValue = results.max;\n        image.slope = results.slope;\n        image.intercept = results.intercept;\n        image.floatPixelData = floatPixelData;\n        image.getPixelData = function () {\n          return results.intPixelData;\n        };\n      } else {\n        image.getPixelData = function () {\n          return imageFrame.pixelData;\n        };\n      }\n\n      // Setup the renderer\n      if (image.color) {\n        image.render = cornerstone.renderColorImage;\n        image.getCanvas = function () {\n          if (lastImageIdDrawn === imageId) {\n            return canvas;\n          }\n\n          canvas.height = image.rows;\n          canvas.width = image.columns;\n          var context = canvas.getContext('2d');\n\n          context.putImageData(imageFrame.imageData, 0, 0);\n          lastImageIdDrawn = imageId;\n\n          return canvas;\n        };\n      } else {\n        image.render = cornerstone.renderGrayscaleImage;\n      }\n\n      // Modality LUT\n      if (modalityLutModule.modalityLUTSequence && modalityLutModule.modalityLUTSequence.length > 0 && isModalityLUTForDisplay(sopCommonModule.sopClassUID)) {\n        image.modalityLUT = modalityLutModule.modalityLUTSequence[0];\n      }\n\n      // VOI LUT\n      if (voiLutModule.voiLUTSequence && voiLutModule.voiLUTSequence.length > 0) {\n        image.voiLUT = voiLutModule.voiLUTSequence[0];\n      }\n\n      if (image.color) {\n        image.windowWidth = 255;\n        image.windowCenter = 127;\n      }\n\n      // set the ww/wc to cover the dynamic range of the image if no values are supplied\n      if (image.windowCenter === undefined || image.windowWidth === undefined) {\n        var maxVoi = image.maxPixelValue * image.slope + image.intercept;\n        var minVoi = image.minPixelValue * image.slope + image.intercept;\n\n        image.windowWidth = maxVoi - minVoi;\n        image.windowCenter = (maxVoi + minVoi) / 2;\n      }\n      resolve(image);\n    }, reject);\n  });\n}\n\nexports.default = createImage;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _decodeLittleEndian = __webpack_require__(11);\n\nvar _decodeLittleEndian2 = _interopRequireDefault(_decodeLittleEndian);\n\nvar _decodeBigEndian = __webpack_require__(12);\n\nvar _decodeBigEndian2 = _interopRequireDefault(_decodeBigEndian);\n\nvar _decodeRLE = __webpack_require__(13);\n\nvar _decodeRLE2 = _interopRequireDefault(_decodeRLE);\n\nvar _decodeJPEGBaseline = __webpack_require__(14);\n\nvar _decodeJPEGBaseline2 = _interopRequireDefault(_decodeJPEGBaseline);\n\nvar _decodeJPEGLossless = __webpack_require__(15);\n\nvar _decodeJPEGLossless2 = _interopRequireDefault(_decodeJPEGLossless);\n\nvar _decodeJPEGLS = __webpack_require__(5);\n\nvar _decodeJPEGLS2 = _interopRequireDefault(_decodeJPEGLS);\n\nvar _decodeJPEG = __webpack_require__(6);\n\nvar _decodeJPEG2 = _interopRequireDefault(_decodeJPEG);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction decodeImageFrame(imageFrame, transferSyntax, pixelData, decodeConfig, options) {\n  var start = new Date().getTime();\n\n  if (transferSyntax === '1.2.840.10008.1.2') {\n    // Implicit VR Little Endian\n    imageFrame = (0, _decodeLittleEndian2.default)(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.1') {\n    // Explicit VR Little Endian\n    imageFrame = (0, _decodeLittleEndian2.default)(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.2') {\n    // Explicit VR Big Endian (retired)\n    imageFrame = (0, _decodeBigEndian2.default)(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.1.99') {\n    // Deflate transfer syntax (deflated by dicomParser)\n    imageFrame = (0, _decodeLittleEndian2.default)(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.5') {\n    // RLE Lossless\n    imageFrame = (0, _decodeRLE2.default)(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.50') {\n    // JPEG Baseline lossy process 1 (8 bit)\n    imageFrame = (0, _decodeJPEGBaseline2.default)(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.51') {\n    // JPEG Baseline lossy process 2 & 4 (12 bit)\n    imageFrame = (0, _decodeJPEGBaseline2.default)(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.57') {\n    // JPEG Lossless, Nonhierarchical (Processes 14)\n    imageFrame = (0, _decodeJPEGLossless2.default)(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.70') {\n    // JPEG Lossless, Nonhierarchical (Processes 14 [Selection 1])\n    imageFrame = (0, _decodeJPEGLossless2.default)(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.80') {\n    // JPEG-LS Lossless Image Compression\n    imageFrame = (0, _decodeJPEGLS2.default)(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.81') {\n    // JPEG-LS Lossy (Near-Lossless) Image Compression\n    imageFrame = (0, _decodeJPEGLS2.default)(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.90') {\n    // JPEG 2000 Lossless\n    imageFrame = (0, _decodeJPEG2.default)(imageFrame, pixelData, decodeConfig, options);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.91') {\n    // JPEG 2000 Lossy\n    imageFrame = (0, _decodeJPEG2.default)(imageFrame, pixelData, decodeConfig, options);\n  } else {\n    throw new Error('no decoder for transfer syntax ' + transferSyntax);\n  }\n\n  /* Don't know if these work...\n   // JPEG 2000 Part 2 Multicomponent Image Compression (Lossless Only)\n   else if(transferSyntax === \"1.2.840.10008.1.2.4.92\")\n   {\n   return decodeJPEG2000(dataSet, frame);\n   }\n   // JPEG 2000 Part 2 Multicomponent Image Compression\n   else if(transferSyntax === \"1.2.840.10008.1.2.4.93\")\n   {\n   return decodeJPEG2000(dataSet, frame);\n   }\n   */\n\n  var end = new Date().getTime();\n\n  imageFrame.decodeTimeInMS = end - start;\n\n  return imageFrame;\n}\n\nexports.default = decodeImageFrame;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction decodeLittleEndian(imageFrame, pixelData) {\n  var arrayBuffer = pixelData.buffer;\n  var offset = pixelData.byteOffset;\n  var length = pixelData.length;\n\n  if (imageFrame.bitsAllocated === 16) {\n    // if pixel data is not aligned on even boundary, shift it so we can create the 16 bit array\n    // buffers on it\n    if (offset % 2) {\n      arrayBuffer = arrayBuffer.slice(offset);\n      offset = 0;\n    }\n\n    if (imageFrame.pixelRepresentation === 0) {\n      imageFrame.pixelData = new Uint16Array(arrayBuffer, offset, length / 2);\n    } else {\n      imageFrame.pixelData = new Int16Array(arrayBuffer, offset, length / 2);\n    }\n  } else if (imageFrame.bitsAllocated === 8 || imageFrame.bitsAllocated === 1) {\n    imageFrame.pixelData = pixelData;\n  } else if (imageFrame.bitsAllocated === 32) {\n    // if pixel data is not aligned on even boundary, shift it\n    if (offset % 2) {\n      arrayBuffer = arrayBuffer.slice(offset);\n      offset = 0;\n    }\n\n    imageFrame.pixelData = new Float32Array(arrayBuffer, offset, length / 4);\n  }\n\n  return imageFrame;\n}\n\nexports.default = decodeLittleEndian;\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/* eslint no-bitwise: 0 */\nfunction swap16(val) {\n  return (val & 0xFF) << 8 | val >> 8 & 0xFF;\n}\n\nfunction decodeBigEndian(imageFrame, pixelData) {\n  if (imageFrame.bitsAllocated === 16) {\n    var arrayBuffer = pixelData.buffer;\n    var offset = pixelData.byteOffset;\n    var length = pixelData.length;\n    // if pixel data is not aligned on even boundary, shift it so we can create the 16 bit array\n    // buffers on it\n\n    if (offset % 2) {\n      arrayBuffer = arrayBuffer.slice(offset);\n      offset = 0;\n    }\n\n    if (imageFrame.pixelRepresentation === 0) {\n      imageFrame.pixelData = new Uint16Array(arrayBuffer, offset, length / 2);\n    } else {\n      imageFrame.pixelData = new Int16Array(arrayBuffer, offset, length / 2);\n    }\n    // Do the byte swap\n    for (var i = 0; i < imageFrame.pixelData.length; i++) {\n      imageFrame.pixelData[i] = swap16(imageFrame.pixelData[i]);\n    }\n  } else if (imageFrame.bitsAllocated === 8) {\n    imageFrame.pixelData = pixelData;\n  }\n\n  return imageFrame;\n}\n\nexports.default = decodeBigEndian;\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction decodeRLE(imageFrame, pixelData) {\n  if (imageFrame.bitsAllocated === 8) {\n    if (imageFrame.planarConfiguration) {\n      return decode8Planar(imageFrame, pixelData);\n    }\n\n    return decode8(imageFrame, pixelData);\n  } else if (imageFrame.bitsAllocated === 16) {\n    return decode16(imageFrame, pixelData);\n  }\n\n  throw new Error('unsupported pixel format for RLE');\n}\n\nfunction decode8(imageFrame, pixelData) {\n  var frameData = pixelData;\n  var frameSize = imageFrame.rows * imageFrame.columns;\n  var outFrame = new ArrayBuffer(frameSize * imageFrame.samplesPerPixel);\n  var header = new DataView(frameData.buffer, frameData.byteOffset);\n  var data = new Int8Array(frameData.buffer, frameData.byteOffset);\n  var out = new Int8Array(outFrame);\n\n  var outIndex = 0;\n  var numSegments = header.getInt32(0, true);\n\n  for (var s = 0; s < numSegments; ++s) {\n    outIndex = s;\n\n    var inIndex = header.getInt32((s + 1) * 4, true);\n    var maxIndex = header.getInt32((s + 2) * 4, true);\n\n    if (maxIndex === 0) {\n      maxIndex = frameData.length;\n    }\n\n    var endOfSegment = frameSize * numSegments;\n\n    while (inIndex < maxIndex) {\n      var n = data[inIndex++];\n\n      if (n >= 0 && n <= 127) {\n        // copy n bytes\n        for (var i = 0; i < n + 1 && outIndex < endOfSegment; ++i) {\n          out[outIndex] = data[inIndex++];\n          outIndex += imageFrame.samplesPerPixel;\n        }\n      } else if (n <= -1 && n >= -127) {\n        var value = data[inIndex++];\n        // run of n bytes\n\n        for (var j = 0; j < -n + 1 && outIndex < endOfSegment; ++j) {\n          out[outIndex] = value;\n          outIndex += imageFrame.samplesPerPixel;\n        }\n      } /* else if (n === -128) {\n        } // do nothing */\n    }\n  }\n  imageFrame.pixelData = new Uint8Array(outFrame);\n\n  return imageFrame;\n}\n\nfunction decode8Planar(imageFrame, pixelData) {\n  var frameData = pixelData;\n  var frameSize = imageFrame.rows * imageFrame.columns;\n  var outFrame = new ArrayBuffer(frameSize * imageFrame.samplesPerPixel);\n  var header = new DataView(frameData.buffer, frameData.byteOffset);\n  var data = new Int8Array(frameData.buffer, frameData.byteOffset);\n  var out = new Int8Array(outFrame);\n\n  var outIndex = 0;\n  var numSegments = header.getInt32(0, true);\n\n  for (var s = 0; s < numSegments; ++s) {\n    outIndex = s * frameSize;\n\n    var inIndex = header.getInt32((s + 1) * 4, true);\n    var maxIndex = header.getInt32((s + 2) * 4, true);\n\n    if (maxIndex === 0) {\n      maxIndex = frameData.length;\n    }\n\n    var endOfSegment = frameSize * numSegments;\n\n    while (inIndex < maxIndex) {\n      var n = data[inIndex++];\n\n      if (n >= 0 && n <= 127) {\n        // copy n bytes\n        for (var i = 0; i < n + 1 && outIndex < endOfSegment; ++i) {\n          out[outIndex] = data[inIndex++];\n          outIndex++;\n        }\n      } else if (n <= -1 && n >= -127) {\n        var value = data[inIndex++];\n        // run of n bytes\n\n        for (var j = 0; j < -n + 1 && outIndex < endOfSegment; ++j) {\n          out[outIndex] = value;\n          outIndex++;\n        }\n      } /* else if (n === -128) {\n        } // do nothing */\n    }\n  }\n  imageFrame.pixelData = new Uint8Array(outFrame);\n\n  return imageFrame;\n}\n\nfunction decode16(imageFrame, pixelData) {\n  var frameData = pixelData;\n  var frameSize = imageFrame.rows * imageFrame.columns;\n  var outFrame = new ArrayBuffer(frameSize * imageFrame.samplesPerPixel * 2);\n\n  var header = new DataView(frameData.buffer, frameData.byteOffset);\n  var data = new Int8Array(frameData.buffer, frameData.byteOffset);\n  var out = new Int8Array(outFrame);\n\n  var numSegments = header.getInt32(0, true);\n\n  for (var s = 0; s < numSegments; ++s) {\n    var outIndex = 0;\n    var highByte = s === 0 ? 1 : 0;\n\n    var inIndex = header.getInt32((s + 1) * 4, true);\n    var maxIndex = header.getInt32((s + 2) * 4, true);\n\n    if (maxIndex === 0) {\n      maxIndex = frameData.length;\n    }\n\n    while (inIndex < maxIndex) {\n      var n = data[inIndex++];\n\n      if (n >= 0 && n <= 127) {\n        for (var i = 0; i < n + 1 && outIndex < frameSize; ++i) {\n          out[outIndex * 2 + highByte] = data[inIndex++];\n          outIndex++;\n        }\n      } else if (n <= -1 && n >= -127) {\n        var value = data[inIndex++];\n\n        for (var j = 0; j < -n + 1 && outIndex < frameSize; ++j) {\n          out[outIndex * 2 + highByte] = value;\n          outIndex++;\n        }\n      } /* else if (n === -128) {\n        } // do nothing */\n    }\n  }\n  if (imageFrame.pixelRepresentation === 0) {\n    imageFrame.pixelData = new Uint16Array(outFrame);\n  } else {\n    imageFrame.pixelData = new Int16Array(outFrame);\n  }\n\n  return imageFrame;\n}\n\nexports.default = decodeRLE;\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n\nfunction decodeJPEGBaseline(imageFrame, pixelData) {\n  // check to make sure codec is loaded\n  if (typeof JpegImage === 'undefined') {\n    throw new Error('No JPEG Baseline decoder loaded');\n  }\n  var jpeg = new JpegImage();\n\n  jpeg.parse(pixelData);\n\n  // Do not use the internal jpeg.js color transformation,\n  // since we will handle this afterwards\n  jpeg.colorTransform = false;\n\n  if (imageFrame.bitsAllocated === 8) {\n    imageFrame.pixelData = jpeg.getData(imageFrame.columns, imageFrame.rows);\n\n    return imageFrame;\n  } else if (imageFrame.bitsAllocated === 16) {\n    imageFrame.pixelData = jpeg.getData16(imageFrame.columns, imageFrame.rows);\n\n    return imageFrame;\n  }\n}\n\nexports.default = decodeJPEGBaseline;\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n\nfunction decodeJPEGLossless(imageFrame, pixelData) {\n  // check to make sure codec is loaded\n  if (typeof jpeg === 'undefined' || typeof jpeg.lossless === 'undefined' || typeof jpeg.lossless.Decoder === 'undefined') {\n    throw new Error('No JPEG Lossless decoder loaded');\n  }\n\n  var byteOutput = imageFrame.bitsAllocated <= 8 ? 1 : 2;\n  // console.time('jpeglossless');\n  var buffer = pixelData.buffer;\n  var decoder = new jpeg.lossless.Decoder();\n  var decompressedData = decoder.decode(buffer, pixelData.byteOffset, pixelData.length, byteOutput);\n  // console.timeEnd('jpeglossless');\n\n  if (imageFrame.pixelRepresentation === 0) {\n    if (imageFrame.bitsAllocated === 16) {\n      imageFrame.pixelData = new Uint16Array(decompressedData.buffer);\n\n      return imageFrame;\n    }\n    // untested!\n    imageFrame.pixelData = new Uint8Array(decompressedData.buffer);\n\n    return imageFrame;\n  }\n  imageFrame.pixelData = new Int16Array(decompressedData.buffer);\n\n  return imageFrame;\n}\n\nexports.default = decodeJPEGLossless;\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _externalModules = __webpack_require__(0);\n\nvar _index = __webpack_require__(1);\n\n/**\n * This object supports loading of DICOM P10 dataset from a uri and caching it so it can be accessed\n * by the caller.  This allows a caller to access the datasets without having to go through cornerstone's\n * image loader mechanism.  One reason a caller may need to do this is to determine the number of frames\n * in a multiframe sop instance so it can create the imageId's correctly.\n */\nvar loadedDataSets = {};\nvar promises = {};\n\n// returns true if the wadouri for the specified index has been loaded\nfunction isLoaded(uri) {\n  return loadedDataSets[uri] !== undefined;\n}\n\nfunction get(uri) {\n  if (!loadedDataSets[uri]) {\n    return;\n  }\n\n  return loadedDataSets[uri].dataSet;\n}\n\n// loads the dicom dataset from the wadouri sp\nfunction load(uri) {\n  var loadRequest = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _index.xhrRequest;\n  var imageId = arguments[2];\n\n  // if already loaded return it right away\n  if (loadedDataSets[uri]) {\n    // console.log('using loaded dataset ' + uri);\n    return new Promise(function (resolve) {\n      loadedDataSets[uri].cacheCount++;\n      resolve(loadedDataSets[uri].dataSet);\n    });\n  }\n\n  // if we are currently loading this uri, return its promise\n  if (promises[uri]) {\n    // console.log('returning existing load promise for ' + uri);\n    return promises[uri];\n  }\n\n  // This uri is not loaded or being loaded, load it via an xhrRequest\n  var loadDICOMPromise = loadRequest(uri, imageId);\n\n  // handle success and failure of the XHR request load\n  var promise = new Promise(function (resolve, reject) {\n    loadDICOMPromise.then(function (dicomPart10AsArrayBuffer /* , xhr*/) {\n      var byteArray = new Uint8Array(dicomPart10AsArrayBuffer);\n\n      // Reject the promise if parsing the dicom file fails\n      var dataSet = void 0;\n\n      try {\n        dataSet = _externalModules.dicomParser.parseDicom(byteArray);\n      } catch (error) {\n        return reject(error);\n      }\n\n      loadedDataSets[uri] = {\n        dataSet: dataSet,\n        cacheCount: 1\n      };\n\n      resolve(dataSet);\n    }, reject).then(function () {\n      // Remove the promise regardless of success or failure\n      delete promises[uri];\n    });\n  });\n\n  promises[uri] = promise;\n\n  return promise;\n}\n\n// remove the cached/loaded dicom dataset for the specified wadouri to free up memory\nfunction unload(uri) {\n  // console.log('unload for ' + uri);\n  if (loadedDataSets[uri]) {\n    loadedDataSets[uri].cacheCount--;\n    if (loadedDataSets[uri].cacheCount === 0) {\n      // console.log('removing loaded dataset for ' + uri);\n      delete loadedDataSets[uri];\n    }\n  }\n}\n\n// removes all cached datasets from memory\nfunction purge() {\n  loadedDataSets = {};\n  promises = {};\n}\n\nexports.default = {\n  isLoaded: isLoaded,\n  load: load,\n  unload: unload,\n  purge: purge,\n  get: get\n};\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = '2.0.0';\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _convertRGBColorByPixel = __webpack_require__(46);\n\nObject.defineProperty(exports, 'convertRGBColorByPixel', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_convertRGBColorByPixel).default;\n  }\n});\n\nvar _convertRGBColorByPlane = __webpack_require__(47);\n\nObject.defineProperty(exports, 'convertRGBColorByPlane', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_convertRGBColorByPlane).default;\n  }\n});\n\nvar _convertYBRFullByPixel = __webpack_require__(48);\n\nObject.defineProperty(exports, 'convertYBRFullByPixel', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_convertYBRFullByPixel).default;\n  }\n});\n\nvar _convertYBRFullByPlane = __webpack_require__(49);\n\nObject.defineProperty(exports, 'convertYBRFullByPlane', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_convertYBRFullByPlane).default;\n  }\n});\n\nvar _convertPALETTECOLOR = __webpack_require__(50);\n\nObject.defineProperty(exports, 'convertPALETTECOLOR', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_convertPALETTECOLOR).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _index = __webpack_require__(20);\n\nvar _dataSetCacheManager = __webpack_require__(16);\n\nvar _dataSetCacheManager2 = _interopRequireDefault(_dataSetCacheManager);\n\nvar _fileManager = __webpack_require__(39);\n\nvar _fileManager2 = _interopRequireDefault(_fileManager);\n\nvar _getEncapsulatedImageFrame = __webpack_require__(40);\n\nvar _getEncapsulatedImageFrame2 = _interopRequireDefault(_getEncapsulatedImageFrame);\n\nvar _getUncompressedImageFrame = __webpack_require__(41);\n\nvar _getUncompressedImageFrame2 = _interopRequireDefault(_getUncompressedImageFrame);\n\nvar _loadFileRequest = __webpack_require__(43);\n\nvar _loadFileRequest2 = _interopRequireDefault(_loadFileRequest);\n\nvar _loadImage = __webpack_require__(44);\n\nvar _parseImageId = __webpack_require__(7);\n\nvar _parseImageId2 = _interopRequireDefault(_parseImageId);\n\nvar _unpackBinaryFrame = __webpack_require__(42);\n\nvar _unpackBinaryFrame2 = _interopRequireDefault(_unpackBinaryFrame);\n\nvar _register = __webpack_require__(59);\n\nvar _register2 = _interopRequireDefault(_register);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar metaData = {\n  getImagePixelModule: _index.getImagePixelModule,\n  getLUTs: _index.getLUTs,\n  getModalityLUTOutputPixelRepresentation: _index.getModalityLUTOutputPixelRepresentation,\n  getNumberValues: _index.getNumberValues,\n  metaDataProvider: _index.metaDataProvider\n};\n\nexports.default = {\n  metaData: metaData,\n  dataSetCacheManager: _dataSetCacheManager2.default,\n  fileManager: _fileManager2.default,\n  getEncapsulatedImageFrame: _getEncapsulatedImageFrame2.default,\n  getUncompressedImageFrame: _getUncompressedImageFrame2.default,\n  loadFileRequest: _loadFileRequest2.default,\n  loadImageFromPromise: _loadImage.loadImageFromPromise,\n  getLoaderForScheme: _loadImage.getLoaderForScheme,\n  loadImage: _loadImage.loadImage,\n  parseImageId: _parseImageId2.default,\n  unpackBinaryFrame: _unpackBinaryFrame2.default,\n  register: _register2.default\n};\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _getImagePixelModule = __webpack_require__(21);\n\nObject.defineProperty(exports, 'getImagePixelModule', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_getImagePixelModule).default;\n  }\n});\n\nvar _getLUTs = __webpack_require__(22);\n\nObject.defineProperty(exports, 'getLUTs', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_getLUTs).default;\n  }\n});\n\nvar _getModalityLUTOutputPixelRepresentation = __webpack_require__(23);\n\nObject.defineProperty(exports, 'getModalityLUTOutputPixelRepresentation', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_getModalityLUTOutputPixelRepresentation).default;\n  }\n});\n\nvar _getNumberValues = __webpack_require__(24);\n\nObject.defineProperty(exports, 'getNumberValues', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_getNumberValues).default;\n  }\n});\n\nvar _metaDataProvider = __webpack_require__(51);\n\nObject.defineProperty(exports, 'metaDataProvider', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_metaDataProvider).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction getLutDescriptor(dataSet, tag) {\n  if (!dataSet.elements[tag] || dataSet.elements[tag].length !== 6) {\n    return;\n  }\n\n  return [dataSet.uint16(tag, 0), dataSet.uint16(tag, 1), dataSet.uint16(tag, 2)];\n}\n\nfunction getLutData(lutDataSet, tag, lutDescriptor) {\n  var lut = [];\n  var lutData = lutDataSet.elements[tag];\n\n  for (var i = 0; i < lutDescriptor[0]; i++) {\n    // Output range is always unsigned\n    if (lutDescriptor[2] === 16) {\n      lut[i] = lutDataSet.uint16(tag, i);\n    } else {\n      lut[i] = lutDataSet.byteArray[i + lutData.dataOffset];\n    }\n  }\n\n  return lut;\n}\n\nfunction populatePaletteColorLut(dataSet, imagePixelModule) {\n  imagePixelModule.redPaletteColorLookupTableDescriptor = getLutDescriptor(dataSet, 'x00281101');\n  imagePixelModule.greenPaletteColorLookupTableDescriptor = getLutDescriptor(dataSet, 'x00281102');\n  imagePixelModule.bluePaletteColorLookupTableDescriptor = getLutDescriptor(dataSet, 'x00281103');\n\n  // The first Palette Color Lookup Table Descriptor value is the number of entries in the lookup table.\n  // When the number of table entries is equal to 2ˆ16 then this value shall be 0.\n  // See http://dicom.nema.org/MEDICAL/DICOM/current/output/chtml/part03/sect_C.7.6.3.html#sect_C.7.6.3.1.5\n  if (imagePixelModule.redPaletteColorLookupTableDescriptor[0] === 0) {\n    imagePixelModule.redPaletteColorLookupTableDescriptor[0] = 65536;\n    imagePixelModule.greenPaletteColorLookupTableDescriptor[0] = 65536;\n    imagePixelModule.bluePaletteColorLookupTableDescriptor[0] = 65536;\n  }\n\n  // The third Palette Color Lookup Table Descriptor value specifies the number of bits for each entry in the Lookup Table Data.\n  // It shall take the value of 8 or 16.\n  // The LUT Data shall be stored in a format equivalent to 8 bits allocated when the number of bits for each entry is 8, and 16 bits allocated when the number of bits for each entry is 16, where in both cases the high bit is equal to bits allocated-1.\n  // The third value shall be identical for each of the Red, Green and Blue Palette Color Lookup Table Descriptors.\n  //\n  // Note: Some implementations have encoded 8 bit entries with 16 bits allocated, padding the high bits;\n  // this can be detected by comparing the number of entries specified in the LUT Descriptor with the actual value length of the LUT Data entry.\n  // The value length in bytes should equal the number of entries if bits allocated is 8, and be twice as long if bits allocated is 16.\n  var numLutEntries = imagePixelModule.redPaletteColorLookupTableDescriptor[0];\n  var lutData = dataSet.elements.x00281201;\n  var lutBitsAllocated = lutData.length === numLutEntries ? 8 : 16;\n\n  // If the descriptors do not appear to have the correct values, correct them\n  if (imagePixelModule.redPaletteColorLookupTableDescriptor[2] !== lutBitsAllocated) {\n    imagePixelModule.redPaletteColorLookupTableDescriptor[2] = lutBitsAllocated;\n    imagePixelModule.greenPaletteColorLookupTableDescriptor[2] = lutBitsAllocated;\n    imagePixelModule.bluePaletteColorLookupTableDescriptor[2] = lutBitsAllocated;\n  }\n\n  imagePixelModule.redPaletteColorLookupTableData = getLutData(dataSet, 'x00281201', imagePixelModule.redPaletteColorLookupTableDescriptor);\n  imagePixelModule.greenPaletteColorLookupTableData = getLutData(dataSet, 'x00281202', imagePixelModule.greenPaletteColorLookupTableDescriptor);\n  imagePixelModule.bluePaletteColorLookupTableData = getLutData(dataSet, 'x00281203', imagePixelModule.bluePaletteColorLookupTableDescriptor);\n}\n\nfunction populateSmallestLargestPixelValues(dataSet, imagePixelModule) {\n  var pixelRepresentation = dataSet.uint16('x00280103');\n\n  if (pixelRepresentation === 0) {\n    imagePixelModule.smallestPixelValue = dataSet.uint16('x00280106');\n    imagePixelModule.largestPixelValue = dataSet.uint16('x00280107');\n  } else {\n    imagePixelModule.smallestPixelValue = dataSet.int16('x00280106');\n    imagePixelModule.largestPixelValue = dataSet.int16('x00280107');\n  }\n}\n\nfunction getImagePixelModule(dataSet) {\n  var imagePixelModule = {\n    samplesPerPixel: dataSet.uint16('x00280002'),\n    photometricInterpretation: dataSet.string('x00280004'),\n    rows: dataSet.uint16('x00280010'),\n    columns: dataSet.uint16('x00280011'),\n    bitsAllocated: dataSet.uint16('x00280100'),\n    bitsStored: dataSet.uint16('x00280101'),\n    highBit: dataSet.uint16('x00280102'),\n    pixelRepresentation: dataSet.uint16('x00280103'),\n    planarConfiguration: dataSet.uint16('x00280006'),\n    pixelAspectRatio: dataSet.string('x00280034')\n  };\n\n  populateSmallestLargestPixelValues(dataSet, imagePixelModule);\n\n  if (imagePixelModule.photometricInterpretation === 'PALETTE COLOR' && dataSet.elements.x00281101) {\n    populatePaletteColorLut(dataSet, imagePixelModule);\n  }\n\n  return imagePixelModule;\n}\n\nexports.default = getImagePixelModule;\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction getLUT(pixelRepresentation, lutDataSet) {\n  var numLUTEntries = lutDataSet.uint16('x00283002', 0);\n\n  if (numLUTEntries === 0) {\n    numLUTEntries = 65535;\n  }\n  var firstValueMapped = 0;\n\n  if (pixelRepresentation === 0) {\n    firstValueMapped = lutDataSet.uint16('x00283002', 1);\n  } else {\n    firstValueMapped = lutDataSet.int16('x00283002', 1);\n  }\n  var numBitsPerEntry = lutDataSet.uint16('x00283002', 2);\n  // console.log('LUT(', numLUTEntries, ',', firstValueMapped, ',', numBitsPerEntry, ')');\n  var lut = {\n    id: '1',\n    firstValueMapped: firstValueMapped,\n    numBitsPerEntry: numBitsPerEntry,\n    lut: []\n  };\n\n  // console.log(\"minValue=\", minValue, \"; maxValue=\", maxValue);\n  for (var i = 0; i < numLUTEntries; i++) {\n    if (pixelRepresentation === 0) {\n      lut.lut[i] = lutDataSet.uint16('x00283006', i);\n    } else {\n      lut.lut[i] = lutDataSet.int16('x00283006', i);\n    }\n  }\n\n  return lut;\n}\n\nfunction getLUTs(pixelRepresentation, lutSequence) {\n  if (!lutSequence || !lutSequence.items.length) {\n    return;\n  }\n  var luts = [];\n\n  for (var i = 0; i < lutSequence.items.length; i++) {\n    var lutDataSet = lutSequence.items[i].dataSet;\n    var lut = getLUT(pixelRepresentation, lutDataSet);\n\n    if (lut) {\n      luts.push(lut);\n    }\n  }\n\n  return luts;\n}\n\nexports.default = getLUTs;\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/* eslint no-bitwise: 0 */\n\nfunction getMinStoredPixelValue(dataSet) {\n  var pixelRepresentation = dataSet.uint16('x00280103');\n  var bitsStored = dataSet.uint16('x00280101');\n\n  if (pixelRepresentation === 0) {\n    return 0;\n  }\n\n  return -1 << bitsStored - 1;\n}\n\n// 0 = unsigned / US, 1 = signed / SS\nfunction getModalityLUTOutputPixelRepresentation(dataSet) {\n\n  // CT SOP Classes are always signed\n  var sopClassUID = dataSet.string('x00080016');\n\n  if (sopClassUID === '1.2.840.10008.5.1.4.1.1.2' || sopClassUID === '1.2.840.10008.5.1.4.1.1.2.1') {\n    return 1;\n  }\n\n  // if rescale intercept and rescale slope are present, pass the minimum stored\n  // pixel value through them to see if we get a signed output range\n  var rescaleIntercept = dataSet.floatString('x00281052');\n  var rescaleSlope = dataSet.floatString('x00281053');\n\n  if (rescaleIntercept !== undefined && rescaleSlope !== undefined) {\n    var minStoredPixelValue = getMinStoredPixelValue(dataSet); //\n    var minModalityLutValue = minStoredPixelValue * rescaleSlope + rescaleIntercept;\n\n    if (minModalityLutValue < 0) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  // Output of non linear modality lut is always unsigned\n  if (dataSet.elements.x00283000 && dataSet.elements.x00283000.length > 0) {\n    return 0;\n  }\n\n  // If no modality lut transform, output is same as pixel representation\n  return dataSet.uint16('x00280103');\n}\n\nexports.default = getModalityLUTOutputPixelRepresentation;\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction getNumberValues(dataSet, tag, minimumLength) {\n  var values = [];\n  var valueAsString = dataSet.string(tag);\n\n  if (!valueAsString) {\n    return;\n  }\n  var split = valueAsString.split('\\\\');\n\n  if (minimumLength && split.length < minimumLength) {\n    return;\n  }\n  for (var i = 0; i < split.length; i++) {\n    values.push(parseFloat(split[i]));\n  }\n\n  return values;\n}\n\nexports.default = getNumberValues;\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _index = __webpack_require__(26);\n\nvar _findIndexOfString = __webpack_require__(29);\n\nvar _findIndexOfString2 = _interopRequireDefault(_findIndexOfString);\n\nvar _getPixelData = __webpack_require__(30);\n\nvar _getPixelData2 = _interopRequireDefault(_getPixelData);\n\nvar _metaDataManager = __webpack_require__(8);\n\nvar _metaDataManager2 = _interopRequireDefault(_metaDataManager);\n\nvar _loadImage = __webpack_require__(31);\n\nvar _loadImage2 = _interopRequireDefault(_loadImage);\n\nvar _register = __webpack_require__(57);\n\nvar _register2 = _interopRequireDefault(_register);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar metaData = {\n  getNumberString: _index.getNumberString,\n  getNumberValue: _index.getNumberValue,\n  getNumberValues: _index.getNumberValues,\n  getValue: _index.getValue,\n  metaDataProvider: _index.metaDataProvider\n};\n\nexports.default = {\n  metaData: metaData,\n  findIndexOfString: _findIndexOfString2.default,\n  getPixelData: _getPixelData2.default,\n  loadImage: _loadImage2.default,\n  metaDataManager: _metaDataManager2.default,\n  register: _register2.default\n};\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _getNumberString = __webpack_require__(54);\n\nObject.defineProperty(exports, 'getNumberString', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_getNumberString).default;\n  }\n});\n\nvar _getNumberValue = __webpack_require__(27);\n\nObject.defineProperty(exports, 'getNumberValue', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_getNumberValue).default;\n  }\n});\n\nvar _getNumberValues = __webpack_require__(28);\n\nObject.defineProperty(exports, 'getNumberValues', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_getNumberValues).default;\n  }\n});\n\nvar _getValue = __webpack_require__(3);\n\nObject.defineProperty(exports, 'getValue', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_getValue).default;\n  }\n});\n\nvar _metaDataProvider = __webpack_require__(55);\n\nObject.defineProperty(exports, 'metaDataProvider', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_metaDataProvider).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _getValue = __webpack_require__(3);\n\nvar _getValue2 = _interopRequireDefault(_getValue);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction getNumberValue(element, index) {\n  var value = (0, _getValue2.default)(element, index);\n\n  if (value === undefined) {\n    return;\n  }\n\n  return parseFloat(value);\n}\n\nexports.default = getNumberValue;\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n\n/**\n * Returns the values as an array of javascript numbers\n *\n * @param element - The javascript object for the specified element in the metadata\n * @param [minimumLength] - the minimum number of values\n * @returns {*}\n */\nfunction getNumberValues(element, minimumLength) {\n  if (!element) {\n    return;\n  }\n  // Value is not present if the attribute has a zero length value\n  if (!element.Value) {\n    return;\n  }\n  // make sure we have the expected length\n  if (minimumLength && element.Value.length < minimumLength) {\n    return;\n  }\n\n  var values = [];\n\n  for (var i = 0; i < element.Value.length; i++) {\n    values.push(parseFloat(element.Value[i]));\n  }\n\n  return values;\n}\n\nexports.default = getNumberValues;\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction checkToken(token, data, dataOffset) {\n\n  if (dataOffset + token.length > data.length) {\n    return false;\n  }\n\n  var endIndex = dataOffset;\n\n  for (var i = 0; i < token.length; i++) {\n    if (token[i] !== data[endIndex++]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction stringToUint8Array(str) {\n  var uint = new Uint8Array(str.length);\n\n  for (var i = 0, j = str.length; i < j; i++) {\n    uint[i] = str.charCodeAt(i);\n  }\n\n  return uint;\n}\n\nfunction findIndexOfString(data, str, offset) {\n\n  offset = offset || 0;\n\n  var token = stringToUint8Array(str);\n\n  for (var i = offset; i < data.length; i++) {\n    if (token[0] === data[i]) {\n      // console.log('match @', i);\n      if (checkToken(token, data, i)) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\nexports.default = findIndexOfString;\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _index = __webpack_require__(1);\n\nvar _findIndexOfString = __webpack_require__(29);\n\nvar _findIndexOfString2 = _interopRequireDefault(_findIndexOfString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction findBoundary(header) {\n  for (var i = 0; i < header.length; i++) {\n    if (header[i].substr(0, 2) === '--') {\n      return header[i];\n    }\n  }\n}\n\nfunction findContentType(header) {\n  for (var i = 0; i < header.length; i++) {\n    if (header[i].substr(0, 13) === 'Content-Type:') {\n      return header[i].substr(13).trim();\n    }\n  }\n}\n\nfunction uint8ArrayToString(data, offset, length) {\n  offset = offset || 0;\n  length = length || data.length - offset;\n  var str = '';\n\n  for (var i = offset; i < offset + length; i++) {\n    str += String.fromCharCode(data[i]);\n  }\n\n  return str;\n}\n\nfunction getPixelData(uri, imageId) {\n  var mediaType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'application/octet-stream';\n\n  var headers = {\n    accept: mediaType\n  };\n\n  return new Promise(function (resolve, reject) {\n    var loadPromise = (0, _index.xhrRequest)(uri, imageId, headers);\n\n    loadPromise.then(function (imageFrameAsArrayBuffer /* , xhr*/) {\n\n      // request succeeded, Parse the multi-part mime response\n      var response = new Uint8Array(imageFrameAsArrayBuffer);\n\n      // First look for the multipart mime header\n      var tokenIndex = (0, _findIndexOfString2.default)(response, '\\r\\n\\r\\n');\n\n      if (tokenIndex === -1) {\n        reject(new Error('invalid response - no multipart mime header'));\n      }\n      var header = uint8ArrayToString(response, 0, tokenIndex);\n      // Now find the boundary  marker\n      var split = header.split('\\r\\n');\n      var boundary = findBoundary(split);\n\n      if (!boundary) {\n        reject(new Error('invalid response - no boundary marker'));\n      }\n      var offset = tokenIndex + 4; // skip over the \\r\\n\\r\\n\n\n      // find the terminal boundary marker\n      var endIndex = (0, _findIndexOfString2.default)(response, boundary, offset);\n\n      if (endIndex === -1) {\n        reject(new Error('invalid response - terminating boundary not found'));\n      }\n\n      // Remove \\r\\n from the length\n      var length = endIndex - offset - 2;\n\n      // return the info for this pixel data\n      resolve({\n        contentType: findContentType(split),\n        imageFrame: {\n          pixelData: new Uint8Array(imageFrameAsArrayBuffer, offset, length)\n        }\n      });\n    });\n  });\n}\n\nexports.default = getPixelData;\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _metaDataManager = __webpack_require__(8);\n\nvar _metaDataManager2 = _interopRequireDefault(_metaDataManager);\n\nvar _getPixelData = __webpack_require__(30);\n\nvar _getPixelData2 = _interopRequireDefault(_getPixelData);\n\nvar _createImage = __webpack_require__(9);\n\nvar _createImage2 = _interopRequireDefault(_createImage);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction getTransferSyntaxForContentType() /* contentType */{\n  return '1.2.840.10008.1.2'; // hard code to ILE for now\n}\n\nfunction loadImage(imageId, options) {\n  var start = new Date().getTime();\n  var uri = imageId.substring(7);\n\n  var promise = new Promise(function (resolve, reject) {\n    // check to make sure we have metadata for this imageId\n    var metaData = _metaDataManager2.default.get(imageId);\n\n    if (metaData === undefined) {\n      var error = new Error('no metadata for imageId ' + imageId);\n\n      return reject(error);\n    }\n\n    // TODO: load bulk data items that we might need\n    var mediaType = 'multipart/related; type=\"application/octet-stream\"'; // 'image/dicom+jp2';\n\n    // get the pixel data from the server\n    (0, _getPixelData2.default)(uri, imageId, mediaType).then(function (result) {\n      var transferSyntax = getTransferSyntaxForContentType(result.contentType);\n      var pixelData = result.imageFrame.pixelData;\n      var imagePromise = (0, _createImage2.default)(imageId, pixelData, transferSyntax, options);\n\n      imagePromise.then(function (image) {\n        // add the loadTimeInMS property\n        var end = new Date().getTime();\n\n        image.loadTimeInMS = end - start;\n        resolve(image);\n      }, reject);\n    }, reject);\n  });\n\n  return {\n    promise: promise,\n    cancelFn: undefined\n  };\n}\n\nexports.default = loadImage;\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _externalModules = __webpack_require__(0);\n\nfunction getImageFrame(imageId) {\n  var imagePixelModule = _externalModules.external.cornerstone.metaData.get('imagePixelModule', imageId);\n\n  return {\n    samplesPerPixel: imagePixelModule.samplesPerPixel,\n    photometricInterpretation: imagePixelModule.photometricInterpretation,\n    planarConfiguration: imagePixelModule.planarConfiguration,\n    rows: imagePixelModule.rows,\n    columns: imagePixelModule.columns,\n    bitsAllocated: imagePixelModule.bitsAllocated,\n    pixelRepresentation: imagePixelModule.pixelRepresentation, // 0 = unsigned,\n    smallestPixelValue: imagePixelModule.smallestPixelValue,\n    largestPixelValue: imagePixelModule.largestPixelValue,\n    redPaletteColorLookupTableDescriptor: imagePixelModule.redPaletteColorLookupTableDescriptor,\n    greenPaletteColorLookupTableDescriptor: imagePixelModule.greenPaletteColorLookupTableDescriptor,\n    bluePaletteColorLookupTableDescriptor: imagePixelModule.bluePaletteColorLookupTableDescriptor,\n    redPaletteColorLookupTableData: imagePixelModule.redPaletteColorLookupTableData,\n    greenPaletteColorLookupTableData: imagePixelModule.greenPaletteColorLookupTableData,\n    bluePaletteColorLookupTableData: imagePixelModule.bluePaletteColorLookupTableData,\n    pixelData: undefined // populated later after decoding\n  };\n}\n\nexports.default = getImageFrame;\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _options = __webpack_require__(4);\n\nvar _webWorkerManager = __webpack_require__(34);\n\nvar _webWorkerManager2 = _interopRequireDefault(_webWorkerManager);\n\nvar _decodeJPEGBaseline8BitColor = __webpack_require__(35);\n\nvar _decodeJPEGBaseline8BitColor2 = _interopRequireDefault(_decodeJPEGBaseline8BitColor);\n\nvar _decodeImageFrame = __webpack_require__(10);\n\nvar _decodeImageFrame2 = _interopRequireDefault(_decodeImageFrame);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction processDecodeTask(imageFrame, transferSyntax, pixelData, options) {\n  var priority = options.priority || undefined;\n  var transferList = options.transferPixelData ? [pixelData.buffer] : undefined;\n  var loaderOptions = (0, _options.getOptions)();\n  var decodeConfig = loaderOptions.decodeConfig;\n\n  if (decodeConfig.useWebWorkers === false) {\n    return new Promise(function (resolve, reject) {\n      try {\n        var decodeArguments = [imageFrame, transferSyntax, pixelData, decodeConfig, options];\n        var decodedImageFrame = _decodeImageFrame2.default.apply(undefined, decodeArguments);\n\n        resolve(decodedImageFrame);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  return _webWorkerManager2.default.addTask('decodeTask', {\n    imageFrame: imageFrame,\n    transferSyntax: transferSyntax,\n    pixelData: pixelData,\n    options: options\n  }, priority, transferList).promise;\n}\n\nfunction decodeImageFrame(imageFrame, transferSyntax, pixelData, canvas) {\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n  // TODO: Turn this into a switch statement instead\n  if (transferSyntax === '1.2.840.10008.1.2') {\n    // Implicit VR Little Endian\n    return processDecodeTask(imageFrame, transferSyntax, pixelData, options);\n  } else if (transferSyntax === '1.2.840.10008.1.2.1') {\n    // Explicit VR Little Endian\n    return processDecodeTask(imageFrame, transferSyntax, pixelData, options);\n  } else if (transferSyntax === '1.2.840.10008.1.2.2') {\n    // Explicit VR Big Endian (retired)\n    return processDecodeTask(imageFrame, transferSyntax, pixelData, options);\n  } else if (transferSyntax === '1.2.840.10008.1.2.1.99') {\n    // Deflate transfer syntax (deflated by dicomParser)\n    return processDecodeTask(imageFrame, transferSyntax, pixelData, options);\n  } else if (transferSyntax === '1.2.840.10008.1.2.5') {\n    // RLE Lossless\n    return processDecodeTask(imageFrame, transferSyntax, pixelData, options);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.50') {\n    // JPEG Baseline lossy process 1 (8 bit)\n\n    // Handle 8-bit JPEG Baseline color images using the browser's built-in\n    // JPEG decoding\n    if (imageFrame.bitsAllocated === 8 && (imageFrame.samplesPerPixel === 3 || imageFrame.samplesPerPixel === 4)) {\n      return (0, _decodeJPEGBaseline8BitColor2.default)(imageFrame, pixelData, canvas);\n    }\n\n    return processDecodeTask(imageFrame, transferSyntax, pixelData, options);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.51') {\n    // JPEG Baseline lossy process 2 & 4 (12 bit)\n    return processDecodeTask(imageFrame, transferSyntax, pixelData, options);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.57') {\n    // JPEG Lossless, Nonhierarchical (Processes 14)\n    return processDecodeTask(imageFrame, transferSyntax, pixelData, options);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.70') {\n    // JPEG Lossless, Nonhierarchical (Processes 14 [Selection 1])\n    return processDecodeTask(imageFrame, transferSyntax, pixelData, options);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.80') {\n    // JPEG-LS Lossless Image Compression\n    return processDecodeTask(imageFrame, transferSyntax, pixelData, options);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.81') {\n    // JPEG-LS Lossy (Near-Lossless) Image Compression\n    return processDecodeTask(imageFrame, transferSyntax, pixelData, options);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.90') {\n    // JPEG 2000 Lossless\n    return processDecodeTask(imageFrame, transferSyntax, pixelData, options);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.91') {\n    // JPEG 2000 Lossy\n    return processDecodeTask(imageFrame, transferSyntax, pixelData, options);\n  }\n\n  /* Don't know if these work...\n   // JPEG 2000 Part 2 Multicomponent Image Compression (Lossless Only)\n   else if(transferSyntax === \"1.2.840.10008.1.2.4.92\")\n   {\n   return cornerstoneWADOImageLoader.decodeJPEG2000(dataSet, frame);\n   }\n   // JPEG 2000 Part 2 Multicomponent Image Compression\n   else if(transferSyntax === \"1.2.840.10008.1.2.4.93\")\n   {\n   return cornerstoneWADOImageLoader.decodeJPEG2000(dataSet, frame);\n   }\n   */\n\n  throw new Error('No decoder for transfer syntax ' + transferSyntax);\n}\n\nexports.default = decodeImageFrame;\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _options = __webpack_require__(4);\n\n// the taskId to assign to the next task added via addTask()\nvar nextTaskId = 0;\n\n// array of queued tasks sorted with highest priority task first\nvar tasks = [];\n\n// array of web workers to dispatch decode tasks to\nvar webWorkers = [];\n\n// The options for CornerstoneWADOImageLoader\nvar options = (0, _options.getOptions)();\n\nvar defaultConfig = {\n  maxWebWorkers: navigator.hardwareConcurrency || 1,\n  startWebWorkersOnDemand: true,\n  webWorkerPath: '../../dist/cornerstoneWADOImageLoaderWebWorker.js',\n  webWorkerTaskPaths: [],\n  taskConfiguration: {\n    decodeTask: {\n      useWebWorkers: true,\n      loadCodecsOnStartup: true,\n      initializeCodecsOnStartup: false,\n      codecsPath: '../dist/cornerstoneWADOImageLoaderCodecs.js',\n      usePDFJS: false,\n      strict: options.strict\n    }\n  }\n};\n\nvar config = void 0;\n\nvar statistics = {\n  maxWebWorkers: 0,\n  numWebWorkers: 0,\n  numTasksQueued: 0,\n  numTasksExecuting: 0,\n  numTasksCompleted: 0,\n  totalTaskTimeInMS: 0,\n  totalTimeDelayedInMS: 0\n};\n\n/**\n * Function to start a task on a web worker\n */\nfunction startTaskOnWebWorker() {\n  // return immediately if no decode tasks to do\n  if (!tasks.length) {\n    return;\n  }\n\n  // look for a web worker that is ready\n  for (var i = 0; i < webWorkers.length; i++) {\n    if (webWorkers[i].status === 'ready') {\n      // mark it as busy so tasks are not assigned to it\n      webWorkers[i].status = 'busy';\n\n      // get the highest priority task\n      var task = tasks.shift();\n\n      task.start = new Date().getTime();\n\n      // update stats with how long this task was delayed (waiting in queue)\n      var end = new Date().getTime();\n\n      statistics.totalTimeDelayedInMS += end - task.added;\n\n      // assign this task to this web worker and send the web worker\n      // a message to execute it\n      webWorkers[i].task = task;\n      webWorkers[i].worker.postMessage({\n        taskType: task.taskType,\n        workerIndex: i,\n        data: task.data\n      }, task.transferList);\n      statistics.numTasksExecuting++;\n\n      return;\n    }\n  }\n\n  // if no available web workers and we haven't started max web workers, start a new one\n  if (webWorkers.length < config.maxWebWorkers) {\n    spawnWebWorker();\n  }\n}\n\n/**\n * Function to handle a message from a web worker\n * @param msg\n */\nfunction handleMessageFromWorker(msg) {\n  // console.log('handleMessageFromWorker', msg.data);\n  if (msg.data.taskType === 'initialize') {\n    webWorkers[msg.data.workerIndex].status = 'ready';\n    startTaskOnWebWorker();\n  } else {\n    var start = webWorkers[msg.data.workerIndex].task.start;\n\n    webWorkers[msg.data.workerIndex].task.deferred.resolve(msg.data.result);\n    webWorkers[msg.data.workerIndex].task = undefined;\n\n    statistics.numTasksExecuting--;\n    webWorkers[msg.data.workerIndex].status = 'ready';\n    statistics.numTasksCompleted++;\n\n    var end = new Date().getTime();\n\n    statistics.totalTaskTimeInMS += end - start;\n\n    startTaskOnWebWorker();\n  }\n}\n\n/**\n * Spawns a new web worker\n */\nfunction spawnWebWorker() {\n  // prevent exceeding maxWebWorkers\n  if (webWorkers.length >= config.maxWebWorkers) {\n    return;\n  }\n\n  // spawn the webworker\n  var worker = new Worker(config.webWorkerPath);\n\n  webWorkers.push({\n    worker: worker,\n    status: 'initializing'\n  });\n  worker.addEventListener('message', handleMessageFromWorker);\n  worker.postMessage({\n    taskType: 'initialize',\n    workerIndex: webWorkers.length - 1,\n    config: config\n  });\n}\n\n/**\n * Initialization function for the web worker manager - spawns web workers\n * @param configObject\n */\nfunction initialize(configObject) {\n  configObject = configObject || defaultConfig;\n\n  // prevent being initialized more than once\n  if (config) {\n    throw new Error('WebWorkerManager already initialized');\n  }\n\n  config = configObject;\n  options.decodeConfig = (config.taskConfiguration || defaultConfig.taskConfiguration).decodeTask;\n\n  // Prevent web worker from being spawned if it's disabled by configuration\n  if (options.decodeConfig.useWebWorkers !== false) {\n\n    config.maxWebWorkers = config.maxWebWorkers || navigator.hardwareConcurrency || 1;\n\n    // Spawn new web workers\n    if (!config.startWebWorkersOnDemand) {\n      for (var i = 0; i < config.maxWebWorkers; i++) {\n        spawnWebWorker();\n      }\n    }\n  }\n}\n\n/**\n * dynamically loads a web worker task\n * @param sourcePath\n * @param taskConfig\n */\nfunction loadWebWorkerTask(sourcePath, taskConfig) {\n  // add it to the list of web worker tasks paths so on demand web workers\n  // load this properly\n  config.webWorkerTaskPaths.push(sourcePath);\n\n  // if a task specific configuration is provided, merge it into the config\n  if (taskConfig) {\n    config.taskConfiguration = Object.assign(config.taskConfiguration, taskConfig);\n  }\n\n  // tell each spawned web worker to load this task\n  for (var i = 0; i < webWorkers.length; i++) {\n    webWorkers[i].worker.postMessage({\n      taskType: 'loadWebWorkerTask',\n      workerIndex: webWorkers.length - 1,\n      sourcePath: sourcePath,\n      config: config\n    });\n  }\n}\n\n/**\n * Function to add a decode task to be performed\n *\n * @param taskType - the taskType for this task\n * @param data - data specific to the task\n * @param priority - optional priority of the task (defaults to 0), > 0 is higher, < 0 is lower\n * @param transferList - optional array of data to transfer to web worker\n * @returns {*}\n */\nfunction addTask(taskType, data) {\n  var priority = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var transferList = arguments[3];\n\n  if (!config) {\n    initialize();\n  }\n\n  var deferred = {};\n  var promise = new Promise(function (resolve, reject) {\n    deferred = {\n      resolve: resolve,\n      reject: reject\n    };\n  });\n\n  // find the right spot to insert this decode task (based on priority)\n  var i = void 0;\n\n  for (i = 0; i < tasks.length; i++) {\n    if (tasks[i].priority < priority) {\n      break;\n    }\n  }\n\n  var taskId = nextTaskId++;\n\n  // insert the decode task at position i\n  tasks.splice(i, 0, {\n    taskId: taskId,\n    taskType: taskType,\n    status: 'ready',\n    added: new Date().getTime(),\n    data: data,\n    deferred: deferred,\n    priority: priority,\n    transferList: transferList\n  });\n\n  // try to start a task on the web worker since we just added a new task and a web worker may be available\n  startTaskOnWebWorker();\n\n  return {\n    taskId: taskId,\n    promise: promise\n  };\n}\n\n/**\n * Changes the priority of a queued task\n * @param taskId - the taskId to change the priority of\n * @param priority - priority of the task (defaults to 0), > 0 is higher, < 0 is lower\n * @returns boolean - true on success, false if taskId not found\n */\nfunction setTaskPriority(taskId) {\n  var priority = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n  // search for this taskId\n  for (var i = 0; i < tasks.length; i++) {\n    if (tasks[i].taskId === taskId) {\n      // taskId found, remove it\n      var task = tasks.splice(i, 1)[0];\n\n      // set its priority\n      task.priority = priority;\n\n      // find the right spot to insert this decode task (based on priority)\n      for (i = 0; i < tasks.length; i++) {\n        if (tasks[i].priority < priority) {\n          break;\n        }\n      }\n\n      // insert the decode task at position i\n      tasks.splice(i, 0, task);\n\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Cancels a queued task and rejects\n * @param taskId - the taskId to cancel\n * @param reason - optional reason the task was rejected\n * @returns boolean - true on success, false if taskId not found\n */\nfunction cancelTask(taskId, reason) {\n  // search for this taskId\n  for (var i = 0; i < tasks.length; i++) {\n    if (tasks[i].taskId === taskId) {\n      // taskId found, remove it\n      var task = tasks.splice(i, 1);\n\n      task.deferred.reject(reason);\n\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Function to return the statistics on running web workers\n * @returns object containing statistics\n */\nfunction getStatistics() {\n  statistics.maxWebWorkers = config.maxWebWorkers;\n  statistics.numWebWorkers = webWorkers.length;\n  statistics.numTasksQueued = tasks.length;\n\n  return statistics;\n}\n\nexports.default = {\n  initialize: initialize,\n  loadWebWorkerTask: loadWebWorkerTask,\n  addTask: addTask,\n  getStatistics: getStatistics,\n  setTaskPriority: setTaskPriority,\n  cancelTask: cancelTask\n};\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _getMinMax = __webpack_require__(2);\n\nvar _getMinMax2 = _interopRequireDefault(_getMinMax);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Special decoder for 8 bit jpeg that leverages the browser's built in JPEG decoder for increased performance\n */\n\nfunction arrayBufferToString(buffer) {\n  return binaryToString(String.fromCharCode.apply(null, Array.prototype.slice.apply(new Uint8Array(buffer))));\n}\n\nfunction binaryToString(binary) {\n  var error = void 0;\n\n  try {\n    return decodeURIComponent(escape(binary));\n  } catch (_error) {\n    error = _error;\n    if (error instanceof URIError) {\n      return binary;\n    }\n    throw error;\n  }\n}\n\nfunction decodeJPEGBaseline8BitColor(imageFrame, pixelData, canvas) {\n  var start = new Date().getTime();\n  var imgBlob = new Blob([pixelData], { type: 'image/jpeg' });\n\n  return new Promise(function (resolve, reject) {\n    var fileReader = new FileReader();\n\n    if (fileReader.readAsBinaryString === undefined) {\n      fileReader.readAsArrayBuffer(imgBlob);\n    } else {\n      fileReader.readAsBinaryString(imgBlob); // doesn't work on IE11\n    }\n\n    fileReader.onload = function () {\n      var img = new Image();\n\n      img.onload = function () {\n        canvas.height = img.height;\n        canvas.width = img.width;\n        imageFrame.rows = img.height;\n        imageFrame.columns = img.width;\n        var context = canvas.getContext('2d');\n\n        context.drawImage(this, 0, 0);\n        var imageData = context.getImageData(0, 0, img.width, img.height);\n        var end = new Date().getTime();\n\n        imageFrame.pixelData = imageData.data;\n        imageFrame.imageData = imageData;\n        imageFrame.decodeTimeInMS = end - start;\n\n        // calculate smallest and largest PixelValue\n        var minMax = (0, _getMinMax2.default)(imageFrame.pixelData);\n\n        imageFrame.smallestPixelValue = minMax.min;\n        imageFrame.largestPixelValue = minMax.max;\n\n        resolve(imageFrame);\n      };\n\n      img.onerror = function (error) {\n        reject(error);\n      };\n\n      if (fileReader.readAsBinaryString === undefined) {\n        img.src = 'data:image/jpeg;base64,' + window.btoa(arrayBufferToString(fileReader.result));\n      } else {\n        img.src = 'data:image/jpeg;base64,' + window.btoa(fileReader.result); // doesn't work on IE11\n      }\n    };\n\n    fileReader.onerror = function (e) {\n      reject(e);\n    };\n  });\n}\n\nexports.default = decodeJPEGBaseline8BitColor;\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (photoMetricInterpretation) {\n  return photoMetricInterpretation === 'RGB' || photoMetricInterpretation === 'PALETTE COLOR' || photoMetricInterpretation === 'YBR_FULL' || photoMetricInterpretation === 'YBR_FULL_422' || photoMetricInterpretation === 'YBR_PARTIAL_422' || photoMetricInterpretation === 'YBR_PARTIAL_420' || photoMetricInterpretation === 'YBR_RCT' || photoMetricInterpretation === 'YBR_ICT';\n};\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = convertColorSpace;\n\nvar _index = __webpack_require__(18);\n\nfunction convertRGB(imageFrame, rgbaBuffer) {\n  if (imageFrame.planarConfiguration === 0) {\n    (0, _index.convertRGBColorByPixel)(imageFrame.pixelData, rgbaBuffer);\n  } else {\n    (0, _index.convertRGBColorByPlane)(imageFrame.pixelData, rgbaBuffer);\n  }\n}\n\nfunction convertYBRFull(imageFrame, rgbaBuffer) {\n  if (imageFrame.planarConfiguration === 0) {\n    (0, _index.convertYBRFullByPixel)(imageFrame.pixelData, rgbaBuffer);\n  } else {\n    (0, _index.convertYBRFullByPlane)(imageFrame.pixelData, rgbaBuffer);\n  }\n}\n\nfunction convertColorSpace(imageFrame, imageData) {\n  var rgbaBuffer = imageData.data;\n  // convert based on the photometric interpretation\n\n  if (imageFrame.photometricInterpretation === 'RGB') {\n    convertRGB(imageFrame, rgbaBuffer);\n  } else if (imageFrame.photometricInterpretation === 'YBR_RCT') {\n    convertRGB(imageFrame, rgbaBuffer);\n  } else if (imageFrame.photometricInterpretation === 'YBR_ICT') {\n    convertRGB(imageFrame, rgbaBuffer);\n  } else if (imageFrame.photometricInterpretation === 'PALETTE COLOR') {\n    (0, _index.convertPALETTECOLOR)(imageFrame, rgbaBuffer);\n  } else if (imageFrame.photometricInterpretation === 'YBR_FULL_422') {\n    convertRGB(imageFrame, rgbaBuffer);\n  } else if (imageFrame.photometricInterpretation === 'YBR_FULL') {\n    convertYBRFull(imageFrame, rgbaBuffer);\n  } else {\n    throw new Error('No color space conversion for photometric interpretation ' + imageFrame.photometricInterpretation);\n  }\n}\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction isJPEGBaseline8BitColor(imageFrame, transferSyntax) {\n  transferSyntax = transferSyntax || imageFrame.transferSyntax;\n\n  if (imageFrame.bitsAllocated === 8 && transferSyntax === '1.2.840.10008.1.2.4.50' && (imageFrame.samplesPerPixel === 3 || imageFrame.samplesPerPixel === 4)) {\n    return true;\n  }\n}\n\nexports.default = isJPEGBaseline8BitColor;\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar files = [];\n\nfunction add(file) {\n  var fileIndex = files.push(file);\n\n  return \"dicomfile:\" + (fileIndex - 1);\n}\n\nfunction get(index) {\n  return files[index];\n}\n\nfunction remove(index) {\n  files[index] = undefined;\n}\n\nfunction purge() {\n  files = [];\n}\n\nexports.default = {\n  add: add,\n  get: get,\n  remove: remove,\n  purge: purge\n};\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getEncapsulatedImageFrame;\n\nvar _externalModules = __webpack_require__(0);\n\n/**\n * Function to deal with extracting an image frame from an encapsulated data set.\n */\n\nfunction framesAreFragmented(dataSet) {\n  var numberOfFrames = dataSet.intString('x00280008');\n  var pixelDataElement = dataSet.elements.x7fe00010;\n\n  return numberOfFrames !== pixelDataElement.fragments.length;\n}\n\nfunction getEncapsulatedImageFrame(dataSet, frameIndex) {\n  if (dataSet.elements.x7fe00010 && dataSet.elements.x7fe00010.basicOffsetTable.length) {\n    // Basic Offset Table is not empty\n    return _externalModules.dicomParser.readEncapsulatedImageFrame(dataSet, dataSet.elements.x7fe00010, frameIndex);\n  }\n\n  // Empty basic offset table\n\n  if (framesAreFragmented(dataSet)) {\n    var basicOffsetTable = _externalModules.dicomParser.createJPEGBasicOffsetTable(dataSet, dataSet.elements.x7fe00010);\n\n    return _externalModules.dicomParser.readEncapsulatedImageFrame(dataSet, dataSet.elements.x7fe00010, frameIndex, basicOffsetTable);\n  }\n\n  return _externalModules.dicomParser.readEncapsulatedPixelDataFromFragments(dataSet, dataSet.elements.x7fe00010, frameIndex);\n}\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _unpackBinaryFrame = __webpack_require__(42);\n\nvar _unpackBinaryFrame2 = _interopRequireDefault(_unpackBinaryFrame);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Function to deal with extracting an image frame from an encapsulated data set.\n */\n\nfunction getUncompressedImageFrame(dataSet, frameIndex) {\n  var pixelDataElement = dataSet.elements.x7fe00010 || dataSet.elements.x7fe00008;\n  var bitsAllocated = dataSet.uint16('x00280100');\n  var rows = dataSet.uint16('x00280010');\n  var columns = dataSet.uint16('x00280011');\n  var samplesPerPixel = dataSet.uint16('x00280002');\n\n  var pixelDataOffset = pixelDataElement.dataOffset;\n  var pixelsPerFrame = rows * columns * samplesPerPixel;\n\n  var frameOffset = void 0;\n\n  if (bitsAllocated === 8) {\n    frameOffset = pixelDataOffset + frameIndex * pixelsPerFrame;\n    if (frameOffset >= dataSet.byteArray.length) {\n      throw new Error('frame exceeds size of pixelData');\n    }\n\n    return new Uint8Array(dataSet.byteArray.buffer, frameOffset, pixelsPerFrame);\n  } else if (bitsAllocated === 16) {\n    frameOffset = pixelDataOffset + frameIndex * pixelsPerFrame * 2;\n    if (frameOffset >= dataSet.byteArray.length) {\n      throw new Error('frame exceeds size of pixelData');\n    }\n\n    return new Uint8Array(dataSet.byteArray.buffer, frameOffset, pixelsPerFrame * 2);\n  } else if (bitsAllocated === 1) {\n    frameOffset = pixelDataOffset + frameIndex * pixelsPerFrame * 0.125;\n    if (frameOffset >= dataSet.byteArray.length) {\n      throw new Error('frame exceeds size of pixelData');\n    }\n\n    return (0, _unpackBinaryFrame2.default)(dataSet.byteArray, frameOffset, pixelsPerFrame);\n  } else if (bitsAllocated === 32) {\n    frameOffset = pixelDataOffset + frameIndex * pixelsPerFrame * 4;\n    if (frameOffset >= dataSet.byteArray.length) {\n      throw new Error('frame exceeds size of pixelData');\n    }\n\n    return new Uint8Array(dataSet.byteArray.buffer, frameOffset, pixelsPerFrame * 4);\n  }\n\n  throw new Error('unsupported pixel format');\n}\n\nexports.default = getUncompressedImageFrame;\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/* eslint no-bitwise: 0 */\n\nfunction isBitSet(byte, bitPos) {\n  return byte & 1 << bitPos;\n}\n\n/**\n * Function to deal with unpacking a binary frame\n */\nfunction unpackBinaryFrame(byteArray, frameOffset, pixelsPerFrame) {\n  // Create a new pixel array given the image size\n  var pixelData = new Uint8Array(pixelsPerFrame);\n\n  for (var i = 0; i < pixelsPerFrame; i++) {\n    // Compute byte position\n    var bytePos = Math.floor(i / 8);\n\n    // Get the current byte\n    var byte = byteArray[bytePos + frameOffset];\n\n    // Bit position (0-7) within byte\n    var bitPos = i % 8;\n\n    // Check whether bit at bitpos is set\n    pixelData[i] = isBitSet(byte, bitPos) ? 1 : 0;\n  }\n\n  return pixelData;\n}\n\nexports.default = unpackBinaryFrame;\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _parseImageId = __webpack_require__(7);\n\nvar _parseImageId2 = _interopRequireDefault(_parseImageId);\n\nvar _fileManager = __webpack_require__(39);\n\nvar _fileManager2 = _interopRequireDefault(_fileManager);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction loadFileRequest(uri) {\n  var parsedImageId = (0, _parseImageId2.default)(uri);\n  var fileIndex = parseInt(parsedImageId.url, 10);\n  var file = _fileManager2.default.get(fileIndex);\n\n  return new Promise(function (resolve, reject) {\n    var fileReader = new FileReader();\n\n    fileReader.onload = function (e) {\n      var dicomPart10AsArrayBuffer = e.target.result;\n\n      resolve(dicomPart10AsArrayBuffer);\n    };\n\n    fileReader.onerror = reject;\n\n    fileReader.readAsArrayBuffer(file);\n  });\n}\n\nexports.default = loadFileRequest;\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.loadImage = exports.getLoaderForScheme = exports.loadImageFromPromise = undefined;\n\nvar _createImage = __webpack_require__(9);\n\nvar _createImage2 = _interopRequireDefault(_createImage);\n\nvar _parseImageId = __webpack_require__(7);\n\nvar _parseImageId2 = _interopRequireDefault(_parseImageId);\n\nvar _dataSetCacheManager = __webpack_require__(16);\n\nvar _dataSetCacheManager2 = _interopRequireDefault(_dataSetCacheManager);\n\nvar _loadFileRequest = __webpack_require__(43);\n\nvar _loadFileRequest2 = _interopRequireDefault(_loadFileRequest);\n\nvar _getPixelData = __webpack_require__(58);\n\nvar _getPixelData2 = _interopRequireDefault(_getPixelData);\n\nvar _index = __webpack_require__(1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// add a decache callback function to clear out our dataSetCacheManager\nfunction addDecache(image) {\n  image.decache = function () {\n    // console.log('decache');\n    var parsedImageId = (0, _parseImageId2.default)(image.imageId);\n\n    _dataSetCacheManager2.default.unload(parsedImageId.url);\n  };\n}\n\nfunction loadImageFromPromise(dataSetPromise, imageId) {\n  var frame = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var sharedCacheKey = arguments[3];\n  var options = arguments[4];\n\n  var start = new Date().getTime();\n\n  var promise = new Promise(function (resolve, reject) {\n    dataSetPromise.then(function (dataSet /* , xhr*/) {\n      var pixelData = (0, _getPixelData2.default)(dataSet, frame);\n      var transferSyntax = dataSet.string('x00020010');\n      var loadEnd = new Date().getTime();\n      var imagePromise = (0, _createImage2.default)(imageId, pixelData, transferSyntax, options);\n\n      imagePromise.then(function (image) {\n        image.data = dataSet;\n        image.sharedCacheKey = sharedCacheKey;\n        var end = new Date().getTime();\n\n        image.loadTimeInMS = loadEnd - start;\n        image.totalTimeInMS = end - start;\n        addDecache(image);\n        resolve(image);\n      }, reject);\n    }, reject);\n  });\n\n  return {\n    promise: promise,\n    cancelFn: undefined\n  };\n}\n\nfunction loadImageFromDataSet(dataSet, imageId) {\n  var frame = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var sharedCacheKey = arguments[3];\n  var options = arguments[4];\n\n  var start = new Date().getTime();\n\n  var promise = new Promise(function (resolve, reject) {\n    var pixelData = (0, _getPixelData2.default)(dataSet, frame);\n    var transferSyntax = dataSet.string('x00020010');\n    var loadEnd = new Date().getTime();\n    var imagePromise = (0, _createImage2.default)(imageId, pixelData, transferSyntax, options);\n\n    imagePromise.then(function (image) {\n      image.data = dataSet;\n      image.sharedCacheKey = sharedCacheKey;\n      var end = new Date().getTime();\n\n      image.loadTimeInMS = loadEnd - start;\n      image.totalTimeInMS = end - start;\n      addDecache(image);\n      resolve(image);\n    }, reject);\n  });\n\n  return {\n    promise: promise,\n    cancelFn: undefined\n  };\n}\n\nfunction getLoaderForScheme(scheme) {\n  if (scheme === 'dicomweb' || scheme === 'wadouri') {\n    return _index.xhrRequest;\n  } else if (scheme === 'dicomfile') {\n    return _loadFileRequest2.default;\n  }\n}\n\nfunction loadImage(imageId, options) {\n  var parsedImageId = (0, _parseImageId2.default)(imageId);\n  var loader = getLoaderForScheme(parsedImageId.scheme);\n\n  // if the dataset for this url is already loaded, use it\n  if (_dataSetCacheManager2.default.isLoaded(parsedImageId.url)) {\n    var dataSet = _dataSetCacheManager2.default.get(parsedImageId.url, loader, imageId);\n\n    return loadImageFromDataSet(dataSet, imageId, parsedImageId.frame, parsedImageId.url, options);\n  }\n\n  // load the dataSet via the dataSetCacheManager\n  var dataSetPromise = _dataSetCacheManager2.default.load(parsedImageId.url, loader, imageId);\n\n  return loadImageFromPromise(dataSetPromise, imageId, parsedImageId.frame, parsedImageId.url, options);\n}\n\nexports.loadImageFromPromise = loadImageFromPromise;\nexports.getLoaderForScheme = getLoaderForScheme;\nexports.loadImage = loadImage;\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _index = __webpack_require__(18);\n\nObject.keys(_index).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _index[key];\n    }\n  });\n});\n\nvar _index2 = __webpack_require__(19);\n\nObject.defineProperty(exports, 'wadouri', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_index2).default;\n  }\n});\n\nvar _index3 = __webpack_require__(25);\n\nObject.defineProperty(exports, 'wadors', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_index3).default;\n  }\n});\n\nvar _configure = __webpack_require__(60);\n\nObject.defineProperty(exports, 'configure', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_configure).default;\n  }\n});\n\nvar _convertColorSpace = __webpack_require__(37);\n\nObject.defineProperty(exports, 'convertColorSpace', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_convertColorSpace).default;\n  }\n});\n\nvar _createImage = __webpack_require__(9);\n\nObject.defineProperty(exports, 'createImage', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_createImage).default;\n  }\n});\n\nvar _decodeImageFrame = __webpack_require__(33);\n\nObject.defineProperty(exports, 'decodeImageFrame', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_decodeImageFrame).default;\n  }\n});\n\nvar _decodeJPEGBaseline8BitColor = __webpack_require__(35);\n\nObject.defineProperty(exports, 'decodeJPEGBaseline8BitColor', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_decodeJPEGBaseline8BitColor).default;\n  }\n});\n\nvar _getImageFrame = __webpack_require__(32);\n\nObject.defineProperty(exports, 'getImageFrame', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_getImageFrame).default;\n  }\n});\n\nvar _getMinMax = __webpack_require__(2);\n\nObject.defineProperty(exports, 'getMinMax', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_getMinMax).default;\n  }\n});\n\nvar _isColorImage = __webpack_require__(36);\n\nObject.defineProperty(exports, 'isColorImage', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_isColorImage).default;\n  }\n});\n\nvar _isJPEGBaseline8BitColor = __webpack_require__(38);\n\nObject.defineProperty(exports, 'isJPEGBaseline8BitColor', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_isJPEGBaseline8BitColor).default;\n  }\n});\n\nvar _webWorkerManager = __webpack_require__(34);\n\nObject.defineProperty(exports, 'webWorkerManager', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_webWorkerManager).default;\n  }\n});\n\nvar _version = __webpack_require__(17);\n\nObject.defineProperty(exports, 'version', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_version).default;\n  }\n});\n\nvar _index4 = __webpack_require__(1);\n\nObject.defineProperty(exports, 'internal', {\n  enumerable: true,\n  get: function get() {\n    return _index4.internal;\n  }\n});\n\nvar _externalModules = __webpack_require__(0);\n\nObject.defineProperty(exports, 'external', {\n  enumerable: true,\n  get: function get() {\n    return _externalModules.external;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (imageFrame, rgbaBuffer) {\n  if (imageFrame === undefined) {\n    throw new Error('decodeRGB: rgbBuffer must not be undefined');\n  }\n  if (imageFrame.length % 3 !== 0) {\n    throw new Error('decodeRGB: rgbBuffer length must be divisible by 3');\n  }\n\n  var numPixels = imageFrame.length / 3;\n  var rgbIndex = 0;\n  var rgbaIndex = 0;\n\n  for (var i = 0; i < numPixels; i++) {\n    rgbaBuffer[rgbaIndex++] = imageFrame[rgbIndex++]; // red\n    rgbaBuffer[rgbaIndex++] = imageFrame[rgbIndex++]; // green\n    rgbaBuffer[rgbaIndex++] = imageFrame[rgbIndex++]; // blue\n    rgbaBuffer[rgbaIndex++] = 255; // alpha\n  }\n};\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (imageFrame, rgbaBuffer) {\n  if (imageFrame === undefined) {\n    throw new Error('decodeRGB: rgbBuffer must not be undefined');\n  }\n  if (imageFrame.length % 3 !== 0) {\n    throw new Error('decodeRGB: rgbBuffer length must be divisible by 3');\n  }\n\n  var numPixels = imageFrame.length / 3;\n  var rgbaIndex = 0;\n  var rIndex = 0;\n  var gIndex = numPixels;\n  var bIndex = numPixels * 2;\n\n  for (var i = 0; i < numPixels; i++) {\n    rgbaBuffer[rgbaIndex++] = imageFrame[rIndex++]; // red\n    rgbaBuffer[rgbaIndex++] = imageFrame[gIndex++]; // green\n    rgbaBuffer[rgbaIndex++] = imageFrame[bIndex++]; // blue\n    rgbaBuffer[rgbaIndex++] = 255; // alpha\n  }\n};\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (imageFrame, rgbaBuffer) {\n  if (imageFrame === undefined) {\n    throw new Error('decodeRGB: ybrBuffer must not be undefined');\n  }\n  if (imageFrame.length % 3 !== 0) {\n    throw new Error('decodeRGB: ybrBuffer length must be divisble by 3');\n  }\n\n  var numPixels = imageFrame.length / 3;\n  var ybrIndex = 0;\n  var rgbaIndex = 0;\n\n  for (var i = 0; i < numPixels; i++) {\n    var y = imageFrame[ybrIndex++];\n    var cb = imageFrame[ybrIndex++];\n    var cr = imageFrame[ybrIndex++];\n\n    rgbaBuffer[rgbaIndex++] = y + 1.40200 * (cr - 128); // red\n    rgbaBuffer[rgbaIndex++] = y - 0.34414 * (cb - 128) - 0.71414 * (cr - 128); // green\n    rgbaBuffer[rgbaIndex++] = y + 1.77200 * (cb - 128); // blue\n    rgbaBuffer[rgbaIndex++] = 255; // alpha\n  }\n};\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (imageFrame, rgbaBuffer) {\n  if (imageFrame === undefined) {\n    throw new Error('decodeRGB: ybrBuffer must not be undefined');\n  }\n  if (imageFrame.length % 3 !== 0) {\n    throw new Error('decodeRGB: ybrBuffer length must be divisble by 3');\n  }\n\n  var numPixels = imageFrame.length / 3;\n  var rgbaIndex = 0;\n  var yIndex = 0;\n  var cbIndex = numPixels;\n  var crIndex = numPixels * 2;\n\n  for (var i = 0; i < numPixels; i++) {\n    var y = imageFrame[yIndex++];\n    var cb = imageFrame[cbIndex++];\n    var cr = imageFrame[crIndex++];\n\n    rgbaBuffer[rgbaIndex++] = y + 1.40200 * (cr - 128); // red\n    rgbaBuffer[rgbaIndex++] = y - 0.34414 * (cb - 128) - 0.71414 * (cr - 128); // green\n    rgbaBuffer[rgbaIndex++] = y + 1.77200 * (cb - 128); // blue\n    rgbaBuffer[rgbaIndex++] = 255; // alpha\n  }\n};\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (imageFrame, rgbaBuffer) {\n  var numPixels = imageFrame.columns * imageFrame.rows;\n  var pixelData = imageFrame.pixelData;\n  var rData = imageFrame.redPaletteColorLookupTableData;\n  var gData = imageFrame.greenPaletteColorLookupTableData;\n  var bData = imageFrame.bluePaletteColorLookupTableData;\n  var len = imageFrame.redPaletteColorLookupTableData.length;\n  var palIndex = 0;\n  var rgbaIndex = 0;\n\n  var start = imageFrame.redPaletteColorLookupTableDescriptor[1];\n  var shift = imageFrame.redPaletteColorLookupTableDescriptor[2] === 8 ? 0 : 8;\n\n  var rDataCleaned = convertLUTto8Bit(rData, shift);\n  var gDataCleaned = convertLUTto8Bit(gData, shift);\n  var bDataCleaned = convertLUTto8Bit(bData, shift);\n\n  for (var i = 0; i < numPixels; ++i) {\n    var value = pixelData[palIndex++];\n\n    if (value < start) {\n      value = 0;\n    } else if (value > start + len - 1) {\n      value = len - 1;\n    } else {\n      value -= start;\n    }\n\n    rgbaBuffer[rgbaIndex++] = rDataCleaned[value];\n    rgbaBuffer[rgbaIndex++] = gDataCleaned[value];\n    rgbaBuffer[rgbaIndex++] = bDataCleaned[value];\n    rgbaBuffer[rgbaIndex++] = 255;\n  }\n};\n\n/* eslint no-bitwise: 0 */\n\nfunction convertLUTto8Bit(lut, shift) {\n  var numEntries = lut.length;\n  var cleanedLUT = new Uint8ClampedArray(numEntries);\n\n  for (var i = 0; i < numEntries; ++i) {\n    cleanedLUT[i] = lut[i] >> shift;\n  }\n\n  return cleanedLUT;\n}\n\n/**\n * Convert pixel data with PALETTE COLOR Photometric Interpretation to RGBA\n *\n * @param {ImageFrame} imageFrame\n * @param {Uint8ClampedArray} rgbaBuffer\n * @returns {void}\n */\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _externalModules = __webpack_require__(0);\n\nvar _getNumberValues = __webpack_require__(24);\n\nvar _getNumberValues2 = _interopRequireDefault(_getNumberValues);\n\nvar _parseImageId = __webpack_require__(7);\n\nvar _parseImageId2 = _interopRequireDefault(_parseImageId);\n\nvar _dataSetCacheManager = __webpack_require__(16);\n\nvar _dataSetCacheManager2 = _interopRequireDefault(_dataSetCacheManager);\n\nvar _getImagePixelModule = __webpack_require__(21);\n\nvar _getImagePixelModule2 = _interopRequireDefault(_getImagePixelModule);\n\nvar _getLUTs = __webpack_require__(22);\n\nvar _getLUTs2 = _interopRequireDefault(_getLUTs);\n\nvar _getModalityLUTOutputPixelRepresentation = __webpack_require__(23);\n\nvar _getModalityLUTOutputPixelRepresentation2 = _interopRequireDefault(_getModalityLUTOutputPixelRepresentation);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction metaDataProvider(type, imageId) {\n  var parsedImageId = (0, _parseImageId2.default)(imageId);\n\n  var dataSet = _dataSetCacheManager2.default.get(parsedImageId.url);\n\n  if (!dataSet) {\n    return;\n  }\n\n  if (type === 'generalSeriesModule') {\n    return {\n      modality: dataSet.string('x00080060'),\n      seriesInstanceUID: dataSet.string('x0020000e'),\n      seriesNumber: dataSet.intString('x00200011'),\n      studyInstanceUID: dataSet.string('x0020000d'),\n      seriesDate: _externalModules.dicomParser.parseDA(dataSet.string('x00080021')),\n      seriesTime: _externalModules.dicomParser.parseTM(dataSet.string('x00080031') || '')\n    };\n  }\n\n  if (type === 'patientStudyModule') {\n    return {\n      patientAge: dataSet.intString('x00101010'),\n      patientSize: dataSet.floatString('x00101020'),\n      patientWeight: dataSet.floatString('x00101030')\n    };\n  }\n\n  if (type === 'imagePlaneModule') {\n\n    var imageOrientationPatient = (0, _getNumberValues2.default)(dataSet, 'x00200037', 6);\n    var imagePositionPatient = (0, _getNumberValues2.default)(dataSet, 'x00200032', 3);\n    var pixelSpacing = (0, _getNumberValues2.default)(dataSet, 'x00280030', 2);\n\n    var columnPixelSpacing = 1.0;\n    var rowPixelSpacing = 1.0;\n\n    if (pixelSpacing) {\n      rowPixelSpacing = pixelSpacing[0];\n      columnPixelSpacing = pixelSpacing[1];\n    }\n\n    var rowCosines = null;\n    var columnCosines = null;\n\n    if (imageOrientationPatient) {\n      rowCosines = [parseFloat(imageOrientationPatient[0]), parseFloat(imageOrientationPatient[1]), parseFloat(imageOrientationPatient[2])];\n      columnCosines = [parseFloat(imageOrientationPatient[3]), parseFloat(imageOrientationPatient[4]), parseFloat(imageOrientationPatient[5])];\n    }\n\n    return {\n      frameOfReferenceUID: dataSet.string('x00200052'),\n      rows: dataSet.uint16('x00280010'),\n      columns: dataSet.uint16('x00280011'),\n      imageOrientationPatient: imageOrientationPatient,\n      rowCosines: rowCosines,\n      columnCosines: columnCosines,\n      imagePositionPatient: imagePositionPatient,\n      sliceThickness: dataSet.floatString('x00180050'),\n      sliceLocation: dataSet.floatString('x00201041'),\n      pixelSpacing: pixelSpacing,\n      rowPixelSpacing: rowPixelSpacing,\n      columnPixelSpacing: columnPixelSpacing\n    };\n  }\n\n  if (type === 'imagePixelModule') {\n    return (0, _getImagePixelModule2.default)(dataSet);\n  }\n\n  if (type === 'modalityLutModule') {\n    return {\n      rescaleIntercept: dataSet.floatString('x00281052'),\n      rescaleSlope: dataSet.floatString('x00281053'),\n      rescaleType: dataSet.string('x00281054'),\n      modalityLUTSequence: (0, _getLUTs2.default)(dataSet.uint16('x00280103'), dataSet.elements.x00283000)\n    };\n  }\n\n  if (type === 'voiLutModule') {\n    var modalityLUTOutputPixelRepresentation = (0, _getModalityLUTOutputPixelRepresentation2.default)(dataSet);\n\n    return {\n      windowCenter: (0, _getNumberValues2.default)(dataSet, 'x00281050', 1),\n      windowWidth: (0, _getNumberValues2.default)(dataSet, 'x00281051', 1),\n      voiLUTSequence: (0, _getLUTs2.default)(modalityLUTOutputPixelRepresentation, dataSet.elements.x00283010)\n    };\n  }\n\n  if (type === 'sopCommonModule') {\n    return {\n      sopClassUID: dataSet.string('x00080016'),\n      sopInstanceUID: dataSet.string('x00080018')\n    };\n  }\n\n  if (type === 'petIsotopeModule') {\n    var radiopharmaceuticalInfo = dataSet.elements.x00540016;\n\n    if (radiopharmaceuticalInfo === undefined) {\n      return;\n    }\n\n    var firstRadiopharmaceuticalInfoDataSet = radiopharmaceuticalInfo.items[0].dataSet;\n\n    return {\n      radiopharmaceuticalInfo: {\n        radiopharmaceuticalStartTime: _externalModules.dicomParser.parseTM(firstRadiopharmaceuticalInfoDataSet.string('x00181072') || ''),\n        radionuclideTotalDose: firstRadiopharmaceuticalInfoDataSet.floatString('x00181074'),\n        radionuclideHalfLife: firstRadiopharmaceuticalInfoDataSet.floatString('x00181075')\n      }\n    };\n  }\n}\n\nexports.default = metaDataProvider;\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_52__;\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _index = __webpack_require__(25);\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _index3 = __webpack_require__(19);\n\nvar _index4 = _interopRequireDefault(_index3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Register the WADO-URI and WADO-RS image loaders and metaData providers\n * with an instance of Cornerstone Core.\n *\n * @param cornerstone The Cornerstone Core library to register the image loaders with\n */\nfunction registerLoaders(cornerstone) {\n  _index2.default.register(cornerstone);\n  _index4.default.register(cornerstone);\n}\n\nexports.default = registerLoaders;\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _getValue = __webpack_require__(3);\n\nvar _getValue2 = _interopRequireDefault(_getValue);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns the first string value as a Javascript number\n *\n * @param element - The javascript object for the specified element in the metadata\n * @param [index] - the index of the value in a multi-valued element, default is 0\n * @param [defaultValue] - The default value to return if the element does not exist\n * @returns {*}\n */\nfunction getNumberString(element, index, defaultValue) {\n  var value = (0, _getValue2.default)(element, index, defaultValue);\n\n  if (value === undefined) {\n    return;\n  }\n\n  return parseFloat(value);\n}\n\nexports.default = getNumberString;\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _externalModules = __webpack_require__(0);\n\nvar _getNumberValues = __webpack_require__(28);\n\nvar _getNumberValues2 = _interopRequireDefault(_getNumberValues);\n\nvar _getValue = __webpack_require__(3);\n\nvar _getValue2 = _interopRequireDefault(_getValue);\n\nvar _getNumberValue = __webpack_require__(27);\n\nvar _getNumberValue2 = _interopRequireDefault(_getNumberValue);\n\nvar _metaDataManager = __webpack_require__(8);\n\nvar _metaDataManager2 = _interopRequireDefault(_metaDataManager);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction metaDataProvider(type, imageId) {\n  var metaData = _metaDataManager2.default.get(imageId);\n\n  if (!metaData) {\n    return;\n  }\n\n  if (type === 'generalSeriesModule') {\n    return {\n      modality: (0, _getValue2.default)(metaData['00080060']),\n      seriesInstanceUID: (0, _getValue2.default)(metaData['0020000e']),\n      seriesNumber: (0, _getNumberValue2.default)(metaData['00200011']),\n      studyInstanceUID: (0, _getValue2.default)(metaData['0020000d']),\n      seriesDate: _externalModules.dicomParser.parseDA((0, _getValue2.default)(metaData['00080021'])),\n      seriesTime: _externalModules.dicomParser.parseTM((0, _getValue2.default)(metaData['00080031'], 0, ''))\n    };\n  }\n\n  if (type === 'patientStudyModule') {\n    return {\n      patientAge: (0, _getNumberValue2.default)(metaData['00101010']),\n      patientSize: (0, _getNumberValue2.default)(metaData['00101020']),\n      patientWeight: (0, _getNumberValue2.default)(metaData['00101030'])\n    };\n  }\n\n  if (type === 'imagePlaneModule') {\n    var imageOrientationPatient = (0, _getNumberValues2.default)(metaData['00200037'], 6);\n    var imagePositionPatient = (0, _getNumberValues2.default)(metaData['00200032'], 3);\n    var pixelSpacing = (0, _getNumberValues2.default)(metaData['00280030'], 2);\n    var columnPixelSpacing = 1.0;\n    var rowPixelSpacing = 1.0;\n\n    if (pixelSpacing) {\n      rowPixelSpacing = pixelSpacing[0];\n      columnPixelSpacing = pixelSpacing[1];\n    }\n\n    var rowCosines = null;\n    var columnCosines = null;\n\n    if (imageOrientationPatient) {\n      rowCosines = [parseFloat(imageOrientationPatient[0]), parseFloat(imageOrientationPatient[1]), parseFloat(imageOrientationPatient[2])];\n      columnCosines = [parseFloat(imageOrientationPatient[3]), parseFloat(imageOrientationPatient[4]), parseFloat(imageOrientationPatient[5])];\n    }\n\n    return {\n      frameOfReferenceUID: (0, _getValue2.default)(metaData['00200052']),\n      rows: (0, _getNumberValue2.default)(metaData['00280010']),\n      columns: (0, _getNumberValue2.default)(metaData['00280011']),\n      imageOrientationPatient: imageOrientationPatient,\n      rowCosines: rowCosines,\n      columnCosines: columnCosines,\n      imagePositionPatient: imagePositionPatient,\n      sliceThickness: (0, _getNumberValue2.default)(metaData['00180050']),\n      sliceLocation: (0, _getNumberValue2.default)(metaData['00201041']),\n      pixelSpacing: pixelSpacing,\n      rowPixelSpacing: rowPixelSpacing,\n      columnPixelSpacing: columnPixelSpacing\n    };\n  }\n\n  if (type === 'imagePixelModule') {\n    return {\n      samplesPerPixel: (0, _getNumberValue2.default)(metaData['00280002']),\n      photometricInterpretation: (0, _getValue2.default)(metaData['00280004']),\n      rows: (0, _getNumberValue2.default)(metaData['00280010']),\n      columns: (0, _getNumberValue2.default)(metaData['00280011']),\n      bitsAllocated: (0, _getNumberValue2.default)(metaData['00280100']),\n      bitsStored: (0, _getNumberValue2.default)(metaData['00280101']),\n      highBit: (0, _getValue2.default)(metaData['00280102']),\n      pixelRepresentation: (0, _getNumberValue2.default)(metaData['00280103']),\n      planarConfiguration: (0, _getNumberValue2.default)(metaData['00280006']),\n      pixelAspectRatio: (0, _getValue2.default)(metaData['00280034']),\n      smallestPixelValue: (0, _getNumberValue2.default)(metaData['00280106']),\n      largestPixelValue: (0, _getNumberValue2.default)(metaData['00280107']),\n      redPaletteColorLookupTableDescriptor: (0, _getNumberValues2.default)(metaData['00281101']),\n      greenPaletteColorLookupTableDescriptor: (0, _getNumberValues2.default)(metaData['00281102']),\n      bluePaletteColorLookupTableDescriptor: (0, _getNumberValues2.default)(metaData['00281103']),\n      redPaletteColorLookupTableData: (0, _getNumberValues2.default)(metaData['00281201']),\n      greenPaletteColorLookupTableData: (0, _getNumberValues2.default)(metaData['00281202']),\n      bluePaletteColorLookupTableData: (0, _getNumberValues2.default)(metaData['00281203'])\n    };\n  }\n\n  if (type === 'voiLutModule') {\n    return {\n      // TODO VOT LUT Sequence\n      windowCenter: (0, _getNumberValues2.default)(metaData['00281050'], 1),\n      windowWidth: (0, _getNumberValues2.default)(metaData['00281051'], 1)\n    };\n  }\n\n  if (type === 'modalityLutModule') {\n    return {\n      // TODO VOT LUT Sequence\n      rescaleIntercept: (0, _getNumberValue2.default)(metaData['00281052']),\n      rescaleSlope: (0, _getNumberValue2.default)(metaData['00281053']),\n      rescaleType: (0, _getValue2.default)(metaData['00281054'])\n    };\n  }\n\n  if (type === 'sopCommonModule') {\n    return {\n      sopClassUID: (0, _getValue2.default)(metaData['00080016']),\n      sopInstanceUID: (0, _getValue2.default)(metaData['00080018'])\n    };\n  }\n\n  if (type === 'petIsotopeModule') {\n    var radiopharmaceuticalInfo = (0, _getValue2.default)(metaData['00540016']);\n\n    if (radiopharmaceuticalInfo === undefined) {\n      return;\n    }\n\n    return {\n      radiopharmaceuticalInfo: {\n        radiopharmaceuticalStartTime: _externalModules.dicomParser.parseTM((0, _getValue2.default)(radiopharmaceuticalInfo['00181072'], 0, '')),\n        radionuclideTotalDose: (0, _getNumberValue2.default)(radiopharmaceuticalInfo['00181074']),\n        radionuclideHalfLife: (0, _getNumberValue2.default)(radiopharmaceuticalInfo['00181075'])\n      }\n    };\n  }\n}\n\nexports.default = metaDataProvider;\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _externalModules = __webpack_require__(0);\n\nvar _options = __webpack_require__(4);\n\nfunction xhrRequest(url, imageId) {\n  var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var params = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  var cornerstone = _externalModules.external.cornerstone;\n  var options = (0, _options.getOptions)();\n\n  // Make the request for the DICOM P10 SOP Instance\n  return new Promise(function (resolve, reject) {\n    var xhr = new XMLHttpRequest();\n\n    xhr.open('get', url, true);\n    xhr.responseType = 'arraybuffer';\n    options.beforeSend(xhr, imageId);\n    Object.keys(headers).forEach(function (key) {\n      xhr.setRequestHeader(key, headers[key]);\n    });\n\n    params.deferred = {\n      resolve: resolve,\n      reject: reject\n    };\n    params.url = url;\n    params.imageId = imageId;\n\n    // Event triggered when downloading an image starts\n    xhr.onloadstart = function (event) {\n      // Action\n      if (options.onloadstart) {\n        options.onloadstart(event, params);\n      }\n\n      // Event\n      var eventData = {\n        url: url,\n        imageId: imageId\n      };\n\n      cornerstone.triggerEvent(cornerstone.events, 'cornerstoneimageloadstart', eventData);\n    };\n\n    // Event triggered when downloading an image ends\n    xhr.onloadend = function (event) {\n      // Action\n      if (options.onloadend) {\n        options.onloadend(event, params);\n      }\n\n      var eventData = {\n        url: url,\n        imageId: imageId\n      };\n\n      // Event\n      cornerstone.triggerEvent(cornerstone.events, 'cornerstoneimageloadend', eventData);\n    };\n\n    // handle response data\n    xhr.onreadystatechange = function (event) {\n      // Action\n      if (options.onreadystatechange) {\n        options.onreadystatechange(event, params);\n\n        return;\n      }\n\n      // Default action\n      // TODO: consider sending out progress messages here as we receive the pixel data\n      if (xhr.readyState === 4) {\n        if (xhr.status === 200) {\n          resolve(xhr.response, xhr);\n        } else {\n          // request failed, reject the Promise\n          reject(xhr);\n        }\n      }\n    };\n\n    // Event triggered when downloading an image progresses\n    xhr.onprogress = function (oProgress) {\n      // console.log('progress:',oProgress)\n      var loaded = oProgress.loaded; // evt.loaded the bytes browser receive\n      var total = void 0;\n      var percentComplete = void 0;\n\n      if (oProgress.lengthComputable) {\n        total = oProgress.total; // evt.total the total bytes seted by the header\n        percentComplete = Math.round(loaded / total * 100);\n      }\n\n      // Action\n      if (options.onprogress) {\n        options.onprogress(oProgress, params);\n      }\n\n      // Event\n      var eventData = {\n        url: url,\n        imageId: imageId,\n        loaded: loaded,\n        total: total,\n        percentComplete: percentComplete\n      };\n\n      cornerstone.triggerEvent(cornerstone.events, 'cornerstoneimageloadprogress', eventData);\n    };\n\n    xhr.send();\n  });\n}\n\nexports.default = xhrRequest;\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (cornerstone) {\n  // register wadors scheme and metadata provider\n  cornerstone.registerImageLoader('wadors', _loadImage2.default);\n  cornerstone.metaData.addProvider(_index.metaDataProvider);\n};\n\nvar _loadImage = __webpack_require__(31);\n\nvar _loadImage2 = _interopRequireDefault(_loadImage);\n\nvar _index = __webpack_require__(26);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _getEncapsulatedImageFrame = __webpack_require__(40);\n\nvar _getEncapsulatedImageFrame2 = _interopRequireDefault(_getEncapsulatedImageFrame);\n\nvar _getUncompressedImageFrame = __webpack_require__(41);\n\nvar _getUncompressedImageFrame2 = _interopRequireDefault(_getUncompressedImageFrame);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction getPixelData(dataSet) {\n  var frameIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n  var pixelDataElement = dataSet.elements.x7fe00010 || dataSet.elements.x7fe00008;\n\n  if (pixelDataElement.encapsulatedPixelData) {\n    return (0, _getEncapsulatedImageFrame2.default)(dataSet, frameIndex);\n  }\n\n  return (0, _getUncompressedImageFrame2.default)(dataSet, frameIndex);\n}\n\nexports.default = getPixelData;\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (cornerstone) {\n  // register dicomweb and wadouri image loader prefixes\n  cornerstone.registerImageLoader('dicomweb', _loadImage.loadImage);\n  cornerstone.registerImageLoader('wadouri', _loadImage.loadImage);\n  cornerstone.registerImageLoader('dicomfile', _loadImage.loadImage);\n\n  // add wadouri metadata provider\n  cornerstone.metaData.addProvider(_index.metaDataProvider);\n};\n\nvar _loadImage = __webpack_require__(44);\n\nvar _index = __webpack_require__(20);\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _index = __webpack_require__(1);\n\nfunction configure(options) {\n  (0, _index.setOptions)(options);\n}\n\nexports.default = configure;\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// cornerstoneWADOImageLoader.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 45);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ec82da010b37f517d9b5","/* eslint import/extensions:0 */\nimport * as dicomParser from 'dicom-parser';\nimport registerLoaders from './imageLoader/registerLoaders.js';\n\nlet cornerstone;\n\nconst external = {\n  set cornerstone (cs) {\n    cornerstone = cs;\n\n    registerLoaders(cornerstone);\n  },\n  get cornerstone () {\n    return cornerstone;\n  }\n};\n\nexport { dicomParser, external };\n\n\n\n// WEBPACK FOOTER //\n// ./externalModules.js","import { default as xhrRequest } from './xhrRequest.js';\nimport { setOptions, getOptions } from './options.js';\n\nconst internal = {\n  xhrRequest,\n  setOptions,\n  getOptions\n};\n\nexport { setOptions, getOptions, xhrRequest, internal };\n\n\n\n// WEBPACK FOOTER //\n// ./imageLoader/internal/index.js","function getMinMax (storedPixelData) {\n  // we always calculate the min max values since they are not always\n  // present in DICOM and we don't want to trust them anyway as cornerstone\n  // depends on us providing reliable values for these\n  let min = storedPixelData[0];\n  let max = storedPixelData[0];\n  let storedPixel;\n  const numPixels = storedPixelData.length;\n\n  for (let index = 1; index < numPixels; index++) {\n    storedPixel = storedPixelData[index];\n    min = Math.min(min, storedPixel);\n    max = Math.max(max, storedPixel);\n  }\n\n  return {\n    min,\n    max\n  };\n}\n\nexport default getMinMax;\n\n\n\n// WEBPACK FOOTER //\n// ./shared/getMinMax.js","\n\n/**\n * Returns the raw value\n *\n * @param element - The javascript object for the specified element in the metadata\n * @param [index] - the index of the value in a multi-valued element, default is 0\n * @param [defaultValue] - The default value to return if the element does not exist\n * @returns {*}\n */\nfunction getValue (element, index, defaultValue) {\n  index = index || 0;\n  if (!element) {\n    return defaultValue;\n  }\n  // Value is not present if the attribute has a zero length value\n  if (!element.Value) {\n    return defaultValue;\n  }\n  // make sure we have the specified index\n  if (element.Value.length <= index) {\n    return defaultValue;\n  }\n\n  return element.Value[index];\n}\n\nexport default getValue;\n\n\n\n// WEBPACK FOOTER //\n// ./imageLoader/wadors/metaData/getValue.js","const options = {\n  // callback allowing customization of the xhr (e.g. adding custom auth headers, cors, etc)\n  beforeSend (/* xhr, imageId */) {\n  },\n  // callback allowing modification of newly created image objects\n  imageCreated (/* image */) {\n  },\n  strict: false,\n  decodeConfig: {}\n};\n\nexport function setOptions (newOptions) {\n  Object.keys(newOptions).forEach((key) => {\n    options[key] = newOptions[key];\n  });\n}\n\nexport function getOptions () {\n  return options;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./imageLoader/internal/options.js","let charLS;\n\nfunction jpegLSDecode (data, isSigned) {\n  // prepare input parameters\n  const dataPtr = charLS._malloc(data.length);\n\n  charLS.writeArrayToMemory(data, dataPtr);\n\n  // prepare output parameters\n  const imagePtrPtr = charLS._malloc(4);\n  const imageSizePtr = charLS._malloc(4);\n  const widthPtr = charLS._malloc(4);\n  const heightPtr = charLS._malloc(4);\n  const bitsPerSamplePtr = charLS._malloc(4);\n  const stridePtr = charLS._malloc(4);\n  const allowedLossyErrorPtr = charLS._malloc(4);\n  const componentsPtr = charLS._malloc(4);\n  const interleaveModePtr = charLS._malloc(4);\n\n  // Decode the image\n  const result = charLS.ccall(\n    'jpegls_decode',\n    'number',\n    ['number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number'],\n    [dataPtr, data.length, imagePtrPtr, imageSizePtr, widthPtr, heightPtr, bitsPerSamplePtr, stridePtr, componentsPtr, allowedLossyErrorPtr, interleaveModePtr]\n  );\n\n  // Extract result values into object\n  const image = {\n    result,\n    width: charLS.getValue(widthPtr, 'i32'),\n    height: charLS.getValue(heightPtr, 'i32'),\n    bitsPerSample: charLS.getValue(bitsPerSamplePtr, 'i32'),\n    stride: charLS.getValue(stridePtr, 'i32'),\n    components: charLS.getValue(componentsPtr, 'i32'),\n    allowedLossyError: charLS.getValue(allowedLossyErrorPtr, 'i32'),\n    interleaveMode: charLS.getValue(interleaveModePtr, 'i32'),\n    pixelData: undefined\n  };\n\n  // Copy image from emscripten heap into appropriate array buffer type\n  const imagePtr = charLS.getValue(imagePtrPtr, '*');\n\n  if (image.bitsPerSample <= 8) {\n    image.pixelData = new Uint8Array(image.width * image.height * image.components);\n    image.pixelData.set(new Uint8Array(charLS.HEAP8.buffer, imagePtr, image.pixelData.length));\n  } else if (isSigned) {\n    image.pixelData = new Int16Array(image.width * image.height * image.components);\n    image.pixelData.set(new Int16Array(charLS.HEAP16.buffer, imagePtr, image.pixelData.length));\n  } else {\n    image.pixelData = new Uint16Array(image.width * image.height * image.components);\n    image.pixelData.set(new Uint16Array(charLS.HEAP16.buffer, imagePtr, image.pixelData.length));\n  }\n\n  // free memory and return image object\n  charLS._free(dataPtr);\n  charLS._free(imagePtr);\n  charLS._free(imagePtrPtr);\n  charLS._free(imageSizePtr);\n  charLS._free(widthPtr);\n  charLS._free(heightPtr);\n  charLS._free(bitsPerSamplePtr);\n  charLS._free(stridePtr);\n  charLS._free(componentsPtr);\n  charLS._free(interleaveModePtr);\n\n  return image;\n}\n\nfunction initializeJPEGLS () {\n  // check to make sure codec is loaded\n  if (typeof CharLS === 'undefined') {\n    throw new Error('No JPEG-LS decoder loaded');\n  }\n\n  // Try to initialize CharLS\n  // CharLS https://github.com/cornerstonejs/charls\n  if (!charLS) {\n    charLS = CharLS();\n    if (!charLS || !charLS._jpegls_decode) {\n      throw new Error('JPEG-LS failed to initialize');\n    }\n  }\n\n}\n\nfunction decodeJPEGLS (imageFrame, pixelData) {\n  initializeJPEGLS();\n\n  const image = jpegLSDecode(pixelData, imageFrame.pixelRepresentation === 1);\n\n  // throw error if not success or too much data\n  if (image.result !== 0 && image.result !== 6) {\n    throw new Error(`JPEG-LS decoder failed to decode frame (error code ${image.result})`);\n  }\n\n  imageFrame.columns = image.width;\n  imageFrame.rows = image.height;\n  imageFrame.pixelData = image.pixelData;\n\n  return imageFrame;\n}\n\nexport default decodeJPEGLS;\nexport { initializeJPEGLS };\n\n\n\n// WEBPACK FOOTER //\n// ./webWorker/decodeTask/decoders/decodeJPEGLS.js","function decodeJpx (imageFrame, pixelData) {\n  const jpxImage = new JpxImage();\n\n  jpxImage.parse(pixelData);\n\n  const tileCount = jpxImage.tiles.length;\n\n  if (tileCount !== 1) {\n    throw new Error(`JPEG2000 decoder returned a tileCount of ${tileCount}, when 1 is expected`);\n  }\n\n  imageFrame.columns = jpxImage.width;\n  imageFrame.rows = jpxImage.height;\n  imageFrame.pixelData = jpxImage.tiles[0].items;\n\n  return imageFrame;\n}\n\nlet openJPEG;\n\nfunction decodeOpenJPEG (data, bytesPerPixel, signed) {\n  const dataPtr = openJPEG._malloc(data.length);\n\n  openJPEG.writeArrayToMemory(data, dataPtr);\n\n  // create param outpout\n  const imagePtrPtr = openJPEG._malloc(4);\n  const imageSizePtr = openJPEG._malloc(4);\n  const imageSizeXPtr = openJPEG._malloc(4);\n  const imageSizeYPtr = openJPEG._malloc(4);\n  const imageSizeCompPtr = openJPEG._malloc(4);\n\n  const t0 = new Date().getTime();\n  const ret = openJPEG.ccall('jp2_decode', 'number', ['number', 'number', 'number', 'number', 'number', 'number', 'number'],\n    [dataPtr, data.length, imagePtrPtr, imageSizePtr, imageSizeXPtr, imageSizeYPtr, imageSizeCompPtr]);\n  // add num vomp..etc\n\n  if (ret !== 0) {\n    console.log('[opj_decode] decoding failed!');\n    openJPEG._free(dataPtr);\n    openJPEG._free(openJPEG.getValue(imagePtrPtr, '*'));\n    openJPEG._free(imageSizeXPtr);\n    openJPEG._free(imageSizeYPtr);\n    openJPEG._free(imageSizePtr);\n    openJPEG._free(imageSizeCompPtr);\n\n    return;\n  }\n\n  const imagePtr = openJPEG.getValue(imagePtrPtr, '*');\n\n  const image = {\n    length: openJPEG.getValue(imageSizePtr, 'i32'),\n    sx: openJPEG.getValue(imageSizeXPtr, 'i32'),\n    sy: openJPEG.getValue(imageSizeYPtr, 'i32'),\n    nbChannels: openJPEG.getValue(imageSizeCompPtr, 'i32'), // hard coded for now\n    perf_timetodecode: undefined,\n    pixelData: undefined\n  };\n\n  // Copy the data from the EMSCRIPTEN heap into the correct type array\n  const length = image.sx * image.sy * image.nbChannels;\n  const src32 = new Int32Array(openJPEG.HEAP32.buffer, imagePtr, length);\n\n  if (bytesPerPixel === 1) {\n    if (Uint8Array.from) {\n      image.pixelData = Uint8Array.from(src32);\n    } else {\n      image.pixelData = new Uint8Array(length);\n      for (let i = 0; i < length; i++) {\n        image.pixelData[i] = src32[i];\n      }\n    }\n  } else if (signed) {\n    if (Int16Array.from) {\n      image.pixelData = Int16Array.from(src32);\n    } else {\n      image.pixelData = new Int16Array(length);\n      for (let i = 0; i < length; i++) {\n        image.pixelData[i] = src32[i];\n      }\n    }\n  } else if (Uint16Array.from) {\n    image.pixelData = Uint16Array.from(src32);\n  } else {\n    image.pixelData = new Uint16Array(length);\n    for (let i = 0; i < length; i++) {\n      image.pixelData[i] = src32[i];\n    }\n  }\n\n  const t1 = new Date().getTime();\n\n  image.perf_timetodecode = t1 - t0;\n\n  // free\n  openJPEG._free(dataPtr);\n  openJPEG._free(imagePtrPtr);\n  openJPEG._free(imagePtr);\n  openJPEG._free(imageSizePtr);\n  openJPEG._free(imageSizeXPtr);\n  openJPEG._free(imageSizeYPtr);\n  openJPEG._free(imageSizeCompPtr);\n\n  return image;\n}\n\nfunction decodeOpenJpeg2000 (imageFrame, pixelData) {\n  const bytesPerPixel = imageFrame.bitsAllocated <= 8 ? 1 : 2;\n  const signed = imageFrame.pixelRepresentation === 1;\n\n  const image = decodeOpenJPEG(pixelData, bytesPerPixel, signed);\n\n  imageFrame.columns = image.sx;\n  imageFrame.rows = image.sy;\n  imageFrame.pixelData = image.pixelData;\n  if (image.nbChannels > 1) {\n    imageFrame.photometricInterpretation = 'RGB';\n  }\n\n  return imageFrame;\n}\n\nfunction initializeJPEG2000 (decodeConfig) {\n  // check to make sure codec is loaded\n  if (!decodeConfig.usePDFJS) {\n    if (typeof OpenJPEG === 'undefined') {\n      throw new Error('OpenJPEG decoder not loaded');\n    }\n  }\n\n  if (!openJPEG) {\n    openJPEG = OpenJPEG();\n    if (!openJPEG || !openJPEG._jp2_decode) {\n      throw new Error('OpenJPEG failed to initialize');\n    }\n  }\n}\n\nfunction decodeJPEG2000 (imageFrame, pixelData, decodeConfig, options = {}) {\n  initializeJPEG2000(decodeConfig);\n\n  if (options.usePDFJS || decodeConfig.usePDFJS) {\n    // OHIF image-JPEG2000 https://github.com/OHIF/image-JPEG2000\n    // console.log('PDFJS')\n    return decodeJpx(imageFrame, pixelData);\n  }\n\n  // OpenJPEG2000 https://github.com/jpambrun/openjpeg\n  // console.log('OpenJPEG')\n  return decodeOpenJpeg2000(imageFrame, pixelData);\n}\n\nexport default decodeJPEG2000;\nexport { initializeJPEG2000 };\n\n\n\n// WEBPACK FOOTER //\n// ./webWorker/decodeTask/decoders/decodeJPEG2000.js","function parseImageId (imageId) {\n  // build a url by parsing out the url scheme and frame index from the imageId\n  const firstColonIndex = imageId.indexOf(':');\n  let url = imageId.substring(firstColonIndex + 1);\n  const frameIndex = url.indexOf('frame=');\n  let frame;\n\n  if (frameIndex !== -1) {\n    const frameStr = url.substr(frameIndex + 6);\n\n    frame = parseInt(frameStr, 10);\n    url = url.substr(0, frameIndex - 1);\n  }\n\n  return {\n    scheme: imageId.substr(0, firstColonIndex),\n    url,\n    frame\n  };\n}\n\nexport default parseImageId;\n\n\n\n// WEBPACK FOOTER //\n// ./imageLoader/wadouri/parseImageId.js","\n\nlet imageIds = [];\n\nfunction add (imageId, metadata) {\n  imageIds[imageId] = metadata;\n}\n\nfunction get (imageId) {\n  return imageIds[imageId];\n}\n\nfunction remove (imageId) {\n  imageIds[imageId] = undefined;\n}\n\nfunction purge () {\n  imageIds = [];\n}\n\nexport default {\n  add,\n  get,\n  remove,\n  purge\n};\n\n\n\n// WEBPACK FOOTER //\n// ./imageLoader/wadors/metaDataManager.js","import { external } from '../externalModules.js';\nimport getImageFrame from './getImageFrame.js';\nimport decodeImageFrame from './decodeImageFrame.js';\nimport isColorImageFn from './isColorImage.js';\nimport convertColorSpace from './convertColorSpace.js';\nimport getMinMax from '../shared/getMinMax.js';\nimport isJPEGBaseline8BitColor from './isJPEGBaseline8BitColor.js';\n\nlet lastImageIdDrawn = '';\n\nfunction isModalityLUTForDisplay (sopClassUid) {\n  // special case for XA and XRF\n  // https://groups.google.com/forum/#!searchin/comp.protocols.dicom/Modality$20LUT$20XA/comp.protocols.dicom/UBxhOZ2anJ0/D0R_QP8V2wIJ\n  return sopClassUid !== '1.2.840.10008.5.1.4.1.1.12.1' && // XA\n         sopClassUid !== '1.2.840.10008.5.1.4.1.1.12.2.1'; // XRF\n}\n\nfunction convertToIntPixelData (floatPixelData) {\n  const floatMinMax = getMinMax(floatPixelData);\n  const floatRange = Math.abs(floatMinMax.max - floatMinMax.min);\n  const intRange = 65535;\n  const slope = floatRange / intRange;\n  const intercept = floatMinMax.min;\n  const numPixels = floatPixelData.length;\n  const intPixelData = new Uint16Array(numPixels);\n  let min = 65535;\n  let max = 0;\n\n  for (let i = 0; i < numPixels; i++) {\n    const rescaledPixel = Math.floor((floatPixelData[i] - intercept) / slope);\n\n    intPixelData[i] = rescaledPixel;\n    min = Math.min(min, rescaledPixel);\n    max = Math.max(max, rescaledPixel);\n  }\n\n  return {\n    min,\n    max,\n    intPixelData,\n    slope,\n    intercept\n  };\n}\n\n/**\n * Helper function to set pixel data to the right typed array.  This is needed because web workers\n * can transfer array buffers but not typed arrays\n * @param imageFrame\n */\nfunction setPixelDataType (imageFrame) {\n  if (imageFrame.bitsAllocated === 32) {\n    imageFrame.pixelData = new Float32Array(imageFrame.pixelData);\n  } else if (imageFrame.bitsAllocated === 16) {\n    if (imageFrame.pixelRepresentation === 0) {\n      imageFrame.pixelData = new Uint16Array(imageFrame.pixelData);\n    } else {\n      imageFrame.pixelData = new Int16Array(imageFrame.pixelData);\n    }\n  } else {\n    imageFrame.pixelData = new Uint8Array(imageFrame.pixelData);\n  }\n}\n\nfunction createImage (imageId, pixelData, transferSyntax, options) {\n  const cornerstone = external.cornerstone;\n  const canvas = document.createElement('canvas');\n  const imageFrame = getImageFrame(imageId);\n  const decodePromise = decodeImageFrame(imageFrame, transferSyntax, pixelData, canvas, options);\n\n  return new Promise((resolve, reject) => {\n    decodePromise.then(function (imageFrame) {\n      const imagePlaneModule = cornerstone.metaData.get('imagePlaneModule', imageId) || {};\n      const voiLutModule = cornerstone.metaData.get('voiLutModule', imageId) || {};\n      const modalityLutModule = cornerstone.metaData.get('modalityLutModule', imageId) || {};\n      const sopCommonModule = cornerstone.metaData.get('sopCommonModule', imageId) || {};\n      const isColorImage = isColorImageFn(imageFrame.photometricInterpretation);\n\n      // JPEGBaseline (8 bits) is already returning the pixel data in the right format (rgba)\n      // because it's using a canvas to load and decode images.\n      if (!isJPEGBaseline8BitColor(imageFrame, transferSyntax)) {\n        setPixelDataType(imageFrame);\n\n        // convert color space\n        if (isColorImage) {\n          // setup the canvas context\n          canvas.height = imageFrame.rows;\n          canvas.width = imageFrame.columns;\n\n          const context = canvas.getContext('2d');\n          const imageData = context.createImageData(imageFrame.columns, imageFrame.rows);\n\n          convertColorSpace(imageFrame, imageData);\n          imageFrame.imageData = imageData;\n          imageFrame.pixelData = imageData.data;\n\n          // calculate smallest and largest PixelValue of the converted pixelData\n          const minMax = getMinMax(imageFrame.pixelData);\n\n          imageFrame.smallestPixelValue = minMax.min;\n          imageFrame.largestPixelValue = minMax.max;\n        }\n      }\n\n      const image = {\n        imageId,\n        color: isColorImage,\n        columnPixelSpacing: imagePlaneModule.pixelSpacing ? imagePlaneModule.pixelSpacing[1] : undefined,\n        columns: imageFrame.columns,\n        height: imageFrame.rows,\n        intercept: modalityLutModule.rescaleIntercept ? modalityLutModule.rescaleIntercept : 0,\n        invert: imageFrame.photometricInterpretation === 'MONOCHROME1',\n        minPixelValue: imageFrame.smallestPixelValue,\n        maxPixelValue: imageFrame.largestPixelValue,\n        render: undefined, // set below\n        rowPixelSpacing: imagePlaneModule.pixelSpacing ? imagePlaneModule.pixelSpacing[0] : undefined,\n        rows: imageFrame.rows,\n        sizeInBytes: imageFrame.pixelData.length,\n        slope: modalityLutModule.rescaleSlope ? modalityLutModule.rescaleSlope : 1,\n        width: imageFrame.columns,\n        windowCenter: voiLutModule.windowCenter ? voiLutModule.windowCenter[0] : undefined,\n        windowWidth: voiLutModule.windowWidth ? voiLutModule.windowWidth[0] : undefined,\n        decodeTimeInMS: imageFrame.decodeTimeInMS,\n        floatPixelData: undefined\n      };\n\n      // add function to return pixel data\n      if (imageFrame.pixelData instanceof Float32Array) {\n        const floatPixelData = imageFrame.pixelData;\n        const results = convertToIntPixelData(floatPixelData);\n\n        image.minPixelValue = results.min;\n        image.maxPixelValue = results.max;\n        image.slope = results.slope;\n        image.intercept = results.intercept;\n        image.floatPixelData = floatPixelData;\n        image.getPixelData = () => results.intPixelData;\n      } else {\n        image.getPixelData = () => imageFrame.pixelData;\n      }\n\n      // Setup the renderer\n      if (image.color) {\n        image.render = cornerstone.renderColorImage;\n        image.getCanvas = function () {\n          if (lastImageIdDrawn === imageId) {\n            return canvas;\n          }\n\n          canvas.height = image.rows;\n          canvas.width = image.columns;\n          const context = canvas.getContext('2d');\n\n          context.putImageData(imageFrame.imageData, 0, 0);\n          lastImageIdDrawn = imageId;\n\n          return canvas;\n        };\n\n      } else {\n        image.render = cornerstone.renderGrayscaleImage;\n      }\n\n      // Modality LUT\n      if (modalityLutModule.modalityLUTSequence &&\n        modalityLutModule.modalityLUTSequence.length > 0 &&\n        isModalityLUTForDisplay(sopCommonModule.sopClassUID)) {\n        image.modalityLUT = modalityLutModule.modalityLUTSequence[0];\n      }\n\n      // VOI LUT\n      if (voiLutModule.voiLUTSequence &&\n        voiLutModule.voiLUTSequence.length > 0) {\n        image.voiLUT = voiLutModule.voiLUTSequence[0];\n      }\n\n      if (image.color) {\n        image.windowWidth = 255;\n        image.windowCenter = 127;\n      }\n\n      // set the ww/wc to cover the dynamic range of the image if no values are supplied\n      if (image.windowCenter === undefined || image.windowWidth === undefined) {\n        const maxVoi = image.maxPixelValue * image.slope + image.intercept;\n        const minVoi = image.minPixelValue * image.slope + image.intercept;\n\n        image.windowWidth = maxVoi - minVoi;\n        image.windowCenter = (maxVoi + minVoi) / 2;\n      }\n      resolve(image);\n    }, reject);\n  });\n}\n\nexport default createImage;\n\n\n\n// WEBPACK FOOTER //\n// ./imageLoader/createImage.js","import decodeLittleEndian from './decoders/decodeLittleEndian.js';\nimport decodeBigEndian from './decoders/decodeBigEndian.js';\nimport decodeRLE from './decoders/decodeRLE.js';\nimport decodeJPEGBaseline from './decoders/decodeJPEGBaseline.js';\nimport decodeJPEGLossless from './decoders/decodeJPEGLossless.js';\nimport decodeJPEGLS from './decoders/decodeJPEGLS.js';\nimport decodeJPEG2000 from './decoders/decodeJPEG2000.js';\n\nfunction decodeImageFrame (imageFrame, transferSyntax, pixelData, decodeConfig, options) {\n  const start = new Date().getTime();\n\n  if (transferSyntax === '1.2.840.10008.1.2') {\n    // Implicit VR Little Endian\n    imageFrame = decodeLittleEndian(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.1') {\n    // Explicit VR Little Endian\n    imageFrame = decodeLittleEndian(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.2') {\n    // Explicit VR Big Endian (retired)\n    imageFrame = decodeBigEndian(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.1.99') {\n    // Deflate transfer syntax (deflated by dicomParser)\n    imageFrame = decodeLittleEndian(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.5') {\n    // RLE Lossless\n    imageFrame = decodeRLE(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.50') {\n    // JPEG Baseline lossy process 1 (8 bit)\n    imageFrame = decodeJPEGBaseline(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.51') {\n    // JPEG Baseline lossy process 2 & 4 (12 bit)\n    imageFrame = decodeJPEGBaseline(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.57') {\n    // JPEG Lossless, Nonhierarchical (Processes 14)\n    imageFrame = decodeJPEGLossless(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.70') {\n    // JPEG Lossless, Nonhierarchical (Processes 14 [Selection 1])\n    imageFrame = decodeJPEGLossless(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.80') {\n    // JPEG-LS Lossless Image Compression\n    imageFrame = decodeJPEGLS(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.81') {\n    // JPEG-LS Lossy (Near-Lossless) Image Compression\n    imageFrame = decodeJPEGLS(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.90') {\n    // JPEG 2000 Lossless\n    imageFrame = decodeJPEG2000(imageFrame, pixelData, decodeConfig, options);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.91') {\n    // JPEG 2000 Lossy\n    imageFrame = decodeJPEG2000(imageFrame, pixelData, decodeConfig, options);\n  } else {\n    throw new Error(`no decoder for transfer syntax ${transferSyntax}`);\n  }\n\n  /* Don't know if these work...\n   // JPEG 2000 Part 2 Multicomponent Image Compression (Lossless Only)\n   else if(transferSyntax === \"1.2.840.10008.1.2.4.92\")\n   {\n   return decodeJPEG2000(dataSet, frame);\n   }\n   // JPEG 2000 Part 2 Multicomponent Image Compression\n   else if(transferSyntax === \"1.2.840.10008.1.2.4.93\")\n   {\n   return decodeJPEG2000(dataSet, frame);\n   }\n   */\n\n  const end = new Date().getTime();\n\n  imageFrame.decodeTimeInMS = end - start;\n\n  return imageFrame;\n}\n\nexport default decodeImageFrame;\n\n\n\n// WEBPACK FOOTER //\n// ./webWorker/decodeTask/decodeImageFrame.js","function decodeLittleEndian (imageFrame, pixelData) {\n  let arrayBuffer = pixelData.buffer;\n  let offset = pixelData.byteOffset;\n  const length = pixelData.length;\n\n  if (imageFrame.bitsAllocated === 16) {\n    // if pixel data is not aligned on even boundary, shift it so we can create the 16 bit array\n    // buffers on it\n    if (offset % 2) {\n      arrayBuffer = arrayBuffer.slice(offset);\n      offset = 0;\n    }\n\n    if (imageFrame.pixelRepresentation === 0) {\n      imageFrame.pixelData = new Uint16Array(arrayBuffer, offset, length / 2);\n    } else {\n      imageFrame.pixelData = new Int16Array(arrayBuffer, offset, length / 2);\n    }\n  } else if (imageFrame.bitsAllocated === 8 || imageFrame.bitsAllocated === 1) {\n    imageFrame.pixelData = pixelData;\n  } else if (imageFrame.bitsAllocated === 32) {\n    // if pixel data is not aligned on even boundary, shift it\n    if (offset % 2) {\n      arrayBuffer = arrayBuffer.slice(offset);\n      offset = 0;\n    }\n\n    imageFrame.pixelData = new Float32Array(arrayBuffer, offset, length / 4);\n  }\n\n  return imageFrame;\n}\n\nexport default decodeLittleEndian;\n\n\n\n// WEBPACK FOOTER //\n// ./webWorker/decodeTask/decoders/decodeLittleEndian.js","/* eslint no-bitwise: 0 */\nfunction swap16 (val) {\n  return ((val & 0xFF) << 8) |\n    ((val >> 8) & 0xFF);\n}\n\n\nfunction decodeBigEndian (imageFrame, pixelData) {\n  if (imageFrame.bitsAllocated === 16) {\n    let arrayBuffer = pixelData.buffer;\n    let offset = pixelData.byteOffset;\n    const length = pixelData.length;\n    // if pixel data is not aligned on even boundary, shift it so we can create the 16 bit array\n    // buffers on it\n\n    if (offset % 2) {\n      arrayBuffer = arrayBuffer.slice(offset);\n      offset = 0;\n    }\n\n    if (imageFrame.pixelRepresentation === 0) {\n      imageFrame.pixelData = new Uint16Array(arrayBuffer, offset, length / 2);\n    } else {\n      imageFrame.pixelData = new Int16Array(arrayBuffer, offset, length / 2);\n    }\n    // Do the byte swap\n    for (let i = 0; i < imageFrame.pixelData.length; i++) {\n      imageFrame.pixelData[i] = swap16(imageFrame.pixelData[i]);\n    }\n\n  } else if (imageFrame.bitsAllocated === 8) {\n    imageFrame.pixelData = pixelData;\n  }\n\n  return imageFrame;\n}\n\nexport default decodeBigEndian;\n\n\n\n// WEBPACK FOOTER //\n// ./webWorker/decodeTask/decoders/decodeBigEndian.js","function decodeRLE (imageFrame, pixelData) {\n  if (imageFrame.bitsAllocated === 8) {\n    if (imageFrame.planarConfiguration) {\n      return decode8Planar(imageFrame, pixelData);\n    }\n\n    return decode8(imageFrame, pixelData);\n  } else if (imageFrame.bitsAllocated === 16) {\n    return decode16(imageFrame, pixelData);\n  }\n\n  throw new Error('unsupported pixel format for RLE');\n}\n\nfunction decode8 (imageFrame, pixelData) {\n  const frameData = pixelData;\n  const frameSize = imageFrame.rows * imageFrame.columns;\n  const outFrame = new ArrayBuffer(frameSize * imageFrame.samplesPerPixel);\n  const header = new DataView(frameData.buffer, frameData.byteOffset);\n  const data = new Int8Array(frameData.buffer, frameData.byteOffset);\n  const out = new Int8Array(outFrame);\n\n  let outIndex = 0;\n  const numSegments = header.getInt32(0, true);\n\n  for (let s = 0; s < numSegments; ++s) {\n    outIndex = s;\n\n    let inIndex = header.getInt32((s + 1) * 4, true);\n    let maxIndex = header.getInt32((s + 2) * 4, true);\n\n    if (maxIndex === 0) {\n      maxIndex = frameData.length;\n    }\n\n    const endOfSegment = frameSize * numSegments;\n\n    while (inIndex < maxIndex) {\n      const n = data[inIndex++];\n\n      if (n >= 0 && n <= 127) {\n        // copy n bytes\n        for (let i = 0; i < n + 1 && outIndex < endOfSegment; ++i) {\n          out[outIndex] = data[inIndex++];\n          outIndex += imageFrame.samplesPerPixel;\n        }\n      } else if (n <= -1 && n >= -127) {\n        const value = data[inIndex++];\n        // run of n bytes\n\n        for (let j = 0; j < -n + 1 && outIndex < endOfSegment; ++j) {\n          out[outIndex] = value;\n          outIndex += imageFrame.samplesPerPixel;\n        }\n      }/* else if (n === -128) {\n\n      } // do nothing */\n    }\n  }\n  imageFrame.pixelData = new Uint8Array(outFrame);\n\n  return imageFrame;\n}\n\nfunction decode8Planar (imageFrame, pixelData) {\n  const frameData = pixelData;\n  const frameSize = imageFrame.rows * imageFrame.columns;\n  const outFrame = new ArrayBuffer(frameSize * imageFrame.samplesPerPixel);\n  const header = new DataView(frameData.buffer, frameData.byteOffset);\n  const data = new Int8Array(frameData.buffer, frameData.byteOffset);\n  const out = new Int8Array(outFrame);\n\n  let outIndex = 0;\n  const numSegments = header.getInt32(0, true);\n\n  for (let s = 0; s < numSegments; ++s) {\n    outIndex = s * frameSize;\n\n    let inIndex = header.getInt32((s + 1) * 4, true);\n    let maxIndex = header.getInt32((s + 2) * 4, true);\n\n    if (maxIndex === 0) {\n      maxIndex = frameData.length;\n    }\n\n    const endOfSegment = frameSize * numSegments;\n\n    while (inIndex < maxIndex) {\n      const n = data[inIndex++];\n\n      if (n >= 0 && n <= 127) {\n        // copy n bytes\n        for (let i = 0; i < n + 1 && outIndex < endOfSegment; ++i) {\n          out[outIndex] = data[inIndex++];\n          outIndex++;\n        }\n      } else if (n <= -1 && n >= -127) {\n        const value = data[inIndex++];\n        // run of n bytes\n\n        for (let j = 0; j < -n + 1 && outIndex < endOfSegment; ++j) {\n          out[outIndex] = value;\n          outIndex++;\n        }\n      }/* else if (n === -128) {\n\n      } // do nothing */\n    }\n  }\n  imageFrame.pixelData = new Uint8Array(outFrame);\n\n  return imageFrame;\n}\n\nfunction decode16 (imageFrame, pixelData) {\n  const frameData = pixelData;\n  const frameSize = imageFrame.rows * imageFrame.columns;\n  const outFrame = new ArrayBuffer(frameSize * imageFrame.samplesPerPixel * 2);\n\n  const header = new DataView(frameData.buffer, frameData.byteOffset);\n  const data = new Int8Array(frameData.buffer, frameData.byteOffset);\n  const out = new Int8Array(outFrame);\n\n  const numSegments = header.getInt32(0, true);\n\n  for (let s = 0; s < numSegments; ++s) {\n    let outIndex = 0;\n    const highByte = (s === 0 ? 1 : 0);\n\n    let inIndex = header.getInt32((s + 1) * 4, true);\n    let maxIndex = header.getInt32((s + 2) * 4, true);\n\n    if (maxIndex === 0) {\n      maxIndex = frameData.length;\n    }\n\n    while (inIndex < maxIndex) {\n      const n = data[inIndex++];\n\n      if (n >= 0 && n <= 127) {\n        for (let i = 0; i < n + 1 && outIndex < frameSize; ++i) {\n          out[(outIndex * 2) + highByte] = data[inIndex++];\n          outIndex++;\n        }\n      } else if (n <= -1 && n >= -127) {\n        const value = data[inIndex++];\n\n        for (let j = 0; j < -n + 1 && outIndex < frameSize; ++j) {\n          out[(outIndex * 2) + highByte] = value;\n          outIndex++;\n        }\n      }/* else if (n === -128) {\n\n      } // do nothing */\n    }\n  }\n  if (imageFrame.pixelRepresentation === 0) {\n    imageFrame.pixelData = new Uint16Array(outFrame);\n  } else {\n    imageFrame.pixelData = new Int16Array(outFrame);\n  }\n\n  return imageFrame;\n}\n\nexport default decodeRLE;\n\n\n\n// WEBPACK FOOTER //\n// ./webWorker/decodeTask/decoders/decodeRLE.js","\n\nfunction decodeJPEGBaseline (imageFrame, pixelData) {\n  // check to make sure codec is loaded\n  if (typeof JpegImage === 'undefined') {\n    throw new Error('No JPEG Baseline decoder loaded');\n  }\n  const jpeg = new JpegImage();\n\n  jpeg.parse(pixelData);\n\n  // Do not use the internal jpeg.js color transformation,\n  // since we will handle this afterwards\n  jpeg.colorTransform = false;\n\n  if (imageFrame.bitsAllocated === 8) {\n    imageFrame.pixelData = jpeg.getData(imageFrame.columns, imageFrame.rows);\n\n    return imageFrame;\n  } else if (imageFrame.bitsAllocated === 16) {\n    imageFrame.pixelData = jpeg.getData16(imageFrame.columns, imageFrame.rows);\n\n    return imageFrame;\n  }\n}\n\nexport default decodeJPEGBaseline;\n\n\n\n// WEBPACK FOOTER //\n// ./webWorker/decodeTask/decoders/decodeJPEGBaseline.js","\n\nfunction decodeJPEGLossless (imageFrame, pixelData) {\n  // check to make sure codec is loaded\n  if (typeof jpeg === 'undefined' ||\n    typeof jpeg.lossless === 'undefined' ||\n    typeof jpeg.lossless.Decoder === 'undefined') {\n    throw new Error('No JPEG Lossless decoder loaded');\n  }\n\n  const byteOutput = imageFrame.bitsAllocated <= 8 ? 1 : 2;\n  // console.time('jpeglossless');\n  const buffer = pixelData.buffer;\n  const decoder = new jpeg.lossless.Decoder();\n  const decompressedData = decoder.decode(buffer, pixelData.byteOffset, pixelData.length, byteOutput);\n  // console.timeEnd('jpeglossless');\n\n  if (imageFrame.pixelRepresentation === 0) {\n    if (imageFrame.bitsAllocated === 16) {\n      imageFrame.pixelData = new Uint16Array(decompressedData.buffer);\n\n      return imageFrame;\n    }\n    // untested!\n    imageFrame.pixelData = new Uint8Array(decompressedData.buffer);\n\n    return imageFrame;\n\n  }\n  imageFrame.pixelData = new Int16Array(decompressedData.buffer);\n\n  return imageFrame;\n\n}\n\nexport default decodeJPEGLossless;\n\n\n\n// WEBPACK FOOTER //\n// ./webWorker/decodeTask/decoders/decodeJPEGLossless.js","import { dicomParser } from '../../externalModules.js';\nimport { xhrRequest } from '../internal/index.js';\n\n/**\n * This object supports loading of DICOM P10 dataset from a uri and caching it so it can be accessed\n * by the caller.  This allows a caller to access the datasets without having to go through cornerstone's\n * image loader mechanism.  One reason a caller may need to do this is to determine the number of frames\n * in a multiframe sop instance so it can create the imageId's correctly.\n */\nlet loadedDataSets = {};\nlet promises = {};\n\n// returns true if the wadouri for the specified index has been loaded\nfunction isLoaded (uri) {\n  return loadedDataSets[uri] !== undefined;\n}\n\nfunction get (uri) {\n  if (!loadedDataSets[uri]) {\n    return;\n  }\n\n  return loadedDataSets[uri].dataSet;\n}\n\n\n// loads the dicom dataset from the wadouri sp\nfunction load (uri, loadRequest = xhrRequest, imageId) {\n  // if already loaded return it right away\n  if (loadedDataSets[uri]) {\n    // console.log('using loaded dataset ' + uri);\n    return new Promise((resolve) => {\n      loadedDataSets[uri].cacheCount++;\n      resolve(loadedDataSets[uri].dataSet);\n    });\n  }\n\n  // if we are currently loading this uri, return its promise\n  if (promises[uri]) {\n    // console.log('returning existing load promise for ' + uri);\n    return promises[uri];\n  }\n\n  // This uri is not loaded or being loaded, load it via an xhrRequest\n  const loadDICOMPromise = loadRequest(uri, imageId);\n\n  // handle success and failure of the XHR request load\n  const promise = new Promise((resolve, reject) => {\n    loadDICOMPromise.then(function (dicomPart10AsArrayBuffer/* , xhr*/) {\n      const byteArray = new Uint8Array(dicomPart10AsArrayBuffer);\n\n      // Reject the promise if parsing the dicom file fails\n      let dataSet;\n\n      try {\n        dataSet = dicomParser.parseDicom(byteArray);\n      } catch (error) {\n        return reject(error);\n      }\n\n      loadedDataSets[uri] = {\n        dataSet,\n        cacheCount: 1\n      };\n\n      resolve(dataSet);\n    }, reject).then(() => {\n      // Remove the promise regardless of success or failure\n      delete promises[uri];\n    });\n  });\n\n  promises[uri] = promise;\n\n  return promise;\n}\n\n// remove the cached/loaded dicom dataset for the specified wadouri to free up memory\nfunction unload (uri) {\n  // console.log('unload for ' + uri);\n  if (loadedDataSets[uri]) {\n    loadedDataSets[uri].cacheCount--;\n    if (loadedDataSets[uri].cacheCount === 0) {\n      // console.log('removing loaded dataset for ' + uri);\n      delete loadedDataSets[uri];\n    }\n  }\n}\n\n// removes all cached datasets from memory\nfunction purge () {\n  loadedDataSets = {};\n  promises = {};\n}\n\nexport default {\n  isLoaded,\n  load,\n  unload,\n  purge,\n  get\n};\n\n\n\n// WEBPACK FOOTER //\n// ./imageLoader/wadouri/dataSetCacheManager.js","export default '2.0.0';\n\n\n\n// WEBPACK FOOTER //\n// ./version.js","export { default as convertRGBColorByPixel } from './convertRGBColorByPixel.js';\nexport { default as convertRGBColorByPlane } from './convertRGBColorByPlane.js';\nexport { default as convertYBRFullByPixel } from './convertYBRFullByPixel.js';\nexport { default as convertYBRFullByPlane } from './convertYBRFullByPlane.js';\nexport { default as convertPALETTECOLOR } from './convertPALETTECOLOR.js';\n\n\n\n// WEBPACK FOOTER //\n// ./imageLoader/colorSpaceConverters/index.js","import { getImagePixelModule,\n  getLUTs,\n  getModalityLUTOutputPixelRepresentation,\n  getNumberValues,\n  metaDataProvider } from './metaData/index.js';\n\nimport dataSetCacheManager from './dataSetCacheManager.js';\nimport fileManager from './fileManager.js';\nimport getEncapsulatedImageFrame from './getEncapsulatedImageFrame.js';\nimport getUncompressedImageFrame from './getUncompressedImageFrame.js';\nimport loadFileRequest from './loadFileRequest.js';\nimport { loadImageFromPromise,\n  getLoaderForScheme,\n  loadImage } from './loadImage.js';\nimport parseImageId from './parseImageId.js';\nimport unpackBinaryFrame from './unpackBinaryFrame.js';\nimport register from './register.js';\n\nconst metaData = {\n  getImagePixelModule,\n  getLUTs,\n  getModalityLUTOutputPixelRepresentation,\n  getNumberValues,\n  metaDataProvider\n};\n\nexport default {\n  metaData,\n  dataSetCacheManager,\n  fileManager,\n  getEncapsulatedImageFrame,\n  getUncompressedImageFrame,\n  loadFileRequest,\n  loadImageFromPromise,\n  getLoaderForScheme,\n  loadImage,\n  parseImageId,\n  unpackBinaryFrame,\n  register\n};\n\n\n\n// WEBPACK FOOTER //\n// ./imageLoader/wadouri/index.js","export { default as getImagePixelModule } from './getImagePixelModule.js';\nexport { default as getLUTs } from './getLUTs.js';\nexport { default as getModalityLUTOutputPixelRepresentation } from './getModalityLUTOutputPixelRepresentation.js';\nexport { default as getNumberValues } from './getNumberValues.js';\nexport { default as metaDataProvider } from './metaDataProvider.js';\n\n\n\n// WEBPACK FOOTER //\n// ./imageLoader/wadouri/metaData/index.js","function getLutDescriptor (dataSet, tag) {\n  if (!dataSet.elements[tag] || dataSet.elements[tag].length !== 6) {\n    return;\n  }\n\n  return [dataSet.uint16(tag, 0), dataSet.uint16(tag, 1), dataSet.uint16(tag, 2)];\n}\n\nfunction getLutData (lutDataSet, tag, lutDescriptor) {\n  const lut = [];\n  const lutData = lutDataSet.elements[tag];\n\n  for (let i = 0; i < lutDescriptor[0]; i++) {\n    // Output range is always unsigned\n    if (lutDescriptor[2] === 16) {\n      lut[i] = lutDataSet.uint16(tag, i);\n    } else {\n      lut[i] = lutDataSet.byteArray[i + lutData.dataOffset];\n    }\n  }\n\n  return lut;\n}\n\nfunction populatePaletteColorLut (dataSet, imagePixelModule) {\n  imagePixelModule.redPaletteColorLookupTableDescriptor = getLutDescriptor(dataSet, 'x00281101');\n  imagePixelModule.greenPaletteColorLookupTableDescriptor = getLutDescriptor(dataSet, 'x00281102');\n  imagePixelModule.bluePaletteColorLookupTableDescriptor = getLutDescriptor(dataSet, 'x00281103');\n\n  // The first Palette Color Lookup Table Descriptor value is the number of entries in the lookup table.\n  // When the number of table entries is equal to 2ˆ16 then this value shall be 0.\n  // See http://dicom.nema.org/MEDICAL/DICOM/current/output/chtml/part03/sect_C.7.6.3.html#sect_C.7.6.3.1.5\n  if (imagePixelModule.redPaletteColorLookupTableDescriptor[0] === 0) {\n    imagePixelModule.redPaletteColorLookupTableDescriptor[0] = 65536;\n    imagePixelModule.greenPaletteColorLookupTableDescriptor[0] = 65536;\n    imagePixelModule.bluePaletteColorLookupTableDescriptor[0] = 65536;\n  }\n\n  // The third Palette Color Lookup Table Descriptor value specifies the number of bits for each entry in the Lookup Table Data.\n  // It shall take the value of 8 or 16.\n  // The LUT Data shall be stored in a format equivalent to 8 bits allocated when the number of bits for each entry is 8, and 16 bits allocated when the number of bits for each entry is 16, where in both cases the high bit is equal to bits allocated-1.\n  // The third value shall be identical for each of the Red, Green and Blue Palette Color Lookup Table Descriptors.\n  //\n  // Note: Some implementations have encoded 8 bit entries with 16 bits allocated, padding the high bits;\n  // this can be detected by comparing the number of entries specified in the LUT Descriptor with the actual value length of the LUT Data entry.\n  // The value length in bytes should equal the number of entries if bits allocated is 8, and be twice as long if bits allocated is 16.\n  const numLutEntries = imagePixelModule.redPaletteColorLookupTableDescriptor[0];\n  const lutData = dataSet.elements.x00281201;\n  const lutBitsAllocated = lutData.length === numLutEntries ? 8 : 16;\n\n  // If the descriptors do not appear to have the correct values, correct them\n  if (imagePixelModule.redPaletteColorLookupTableDescriptor[2] !== lutBitsAllocated) {\n    imagePixelModule.redPaletteColorLookupTableDescriptor[2] = lutBitsAllocated;\n    imagePixelModule.greenPaletteColorLookupTableDescriptor[2] = lutBitsAllocated;\n    imagePixelModule.bluePaletteColorLookupTableDescriptor[2] = lutBitsAllocated;\n  }\n\n  imagePixelModule.redPaletteColorLookupTableData = getLutData(dataSet, 'x00281201', imagePixelModule.redPaletteColorLookupTableDescriptor);\n  imagePixelModule.greenPaletteColorLookupTableData = getLutData(dataSet, 'x00281202', imagePixelModule.greenPaletteColorLookupTableDescriptor);\n  imagePixelModule.bluePaletteColorLookupTableData = getLutData(dataSet, 'x00281203', imagePixelModule.bluePaletteColorLookupTableDescriptor);\n}\n\nfunction populateSmallestLargestPixelValues (dataSet, imagePixelModule) {\n  const pixelRepresentation = dataSet.uint16('x00280103');\n\n  if (pixelRepresentation === 0) {\n    imagePixelModule.smallestPixelValue = dataSet.uint16('x00280106');\n    imagePixelModule.largestPixelValue = dataSet.uint16('x00280107');\n  } else {\n    imagePixelModule.smallestPixelValue = dataSet.int16('x00280106');\n    imagePixelModule.largestPixelValue = dataSet.int16('x00280107');\n  }\n}\n\nfunction getImagePixelModule (dataSet) {\n  const imagePixelModule = {\n    samplesPerPixel: dataSet.uint16('x00280002'),\n    photometricInterpretation: dataSet.string('x00280004'),\n    rows: dataSet.uint16('x00280010'),\n    columns: dataSet.uint16('x00280011'),\n    bitsAllocated: dataSet.uint16('x00280100'),\n    bitsStored: dataSet.uint16('x00280101'),\n    highBit: dataSet.uint16('x00280102'),\n    pixelRepresentation: dataSet.uint16('x00280103'),\n    planarConfiguration: dataSet.uint16('x00280006'),\n    pixelAspectRatio: dataSet.string('x00280034')\n  };\n\n  populateSmallestLargestPixelValues(dataSet, imagePixelModule);\n\n  if (imagePixelModule.photometricInterpretation === 'PALETTE COLOR' && dataSet.elements.x00281101) {\n    populatePaletteColorLut(dataSet, imagePixelModule);\n  }\n\n  return imagePixelModule;\n}\n\nexport default getImagePixelModule;\n\n\n\n// WEBPACK FOOTER //\n// ./imageLoader/wadouri/metaData/getImagePixelModule.js","function getLUT (pixelRepresentation, lutDataSet) {\n  let numLUTEntries = lutDataSet.uint16('x00283002', 0);\n\n  if (numLUTEntries === 0) {\n    numLUTEntries = 65535;\n  }\n  let firstValueMapped = 0;\n\n  if (pixelRepresentation === 0) {\n    firstValueMapped = lutDataSet.uint16('x00283002', 1);\n  } else {\n    firstValueMapped = lutDataSet.int16('x00283002', 1);\n  }\n  const numBitsPerEntry = lutDataSet.uint16('x00283002', 2);\n  // console.log('LUT(', numLUTEntries, ',', firstValueMapped, ',', numBitsPerEntry, ')');\n  const lut = {\n    id: '1',\n    firstValueMapped,\n    numBitsPerEntry,\n    lut: []\n  };\n\n  // console.log(\"minValue=\", minValue, \"; maxValue=\", maxValue);\n  for (let i = 0; i < numLUTEntries; i++) {\n    if (pixelRepresentation === 0) {\n      lut.lut[i] = lutDataSet.uint16('x00283006', i);\n    } else {\n      lut.lut[i] = lutDataSet.int16('x00283006', i);\n    }\n  }\n\n  return lut;\n}\n\n\nfunction getLUTs (pixelRepresentation, lutSequence) {\n  if (!lutSequence || !lutSequence.items.length) {\n    return;\n  }\n  const luts = [];\n\n  for (let i = 0; i < lutSequence.items.length; i++) {\n    const lutDataSet = lutSequence.items[i].dataSet;\n    const lut = getLUT(pixelRepresentation, lutDataSet);\n\n    if (lut) {\n      luts.push(lut);\n    }\n  }\n\n  return luts;\n}\n\nexport default getLUTs;\n\n\n\n// WEBPACK FOOTER //\n// ./imageLoader/wadouri/metaData/getLUTs.js","/* eslint no-bitwise: 0 */\n\nfunction getMinStoredPixelValue (dataSet) {\n  const pixelRepresentation = dataSet.uint16('x00280103');\n  const bitsStored = dataSet.uint16('x00280101');\n\n  if (pixelRepresentation === 0) {\n    return 0;\n  }\n\n  return -1 << (bitsStored - 1);\n}\n\n// 0 = unsigned / US, 1 = signed / SS\nfunction getModalityLUTOutputPixelRepresentation (dataSet) {\n\n  // CT SOP Classes are always signed\n  const sopClassUID = dataSet.string('x00080016');\n\n  if (sopClassUID === '1.2.840.10008.5.1.4.1.1.2' ||\n    sopClassUID === '1.2.840.10008.5.1.4.1.1.2.1') {\n    return 1;\n  }\n\n  // if rescale intercept and rescale slope are present, pass the minimum stored\n  // pixel value through them to see if we get a signed output range\n  const rescaleIntercept = dataSet.floatString('x00281052');\n  const rescaleSlope = dataSet.floatString('x00281053');\n\n  if (rescaleIntercept !== undefined && rescaleSlope !== undefined) {\n    const minStoredPixelValue = getMinStoredPixelValue(dataSet); //\n    const minModalityLutValue = minStoredPixelValue * rescaleSlope + rescaleIntercept;\n\n    if (minModalityLutValue < 0) {\n      return 1;\n    }\n\n    return 0;\n\n  }\n\n  // Output of non linear modality lut is always unsigned\n  if (dataSet.elements.x00283000 && dataSet.elements.x00283000.length > 0) {\n    return 0;\n  }\n\n  // If no modality lut transform, output is same as pixel representation\n  return dataSet.uint16('x00280103');\n}\n\nexport default getModalityLUTOutputPixelRepresentation;\n\n\n\n// WEBPACK FOOTER //\n// ./imageLoader/wadouri/metaData/getModalityLUTOutputPixelRepresentation.js","function getNumberValues (dataSet, tag, minimumLength) {\n  const values = [];\n  const valueAsString = dataSet.string(tag);\n\n  if (!valueAsString) {\n    return;\n  }\n  const split = valueAsString.split('\\\\');\n\n  if (minimumLength && split.length < minimumLength) {\n    return;\n  }\n  for (let i = 0; i < split.length; i++) {\n    values.push(parseFloat(split[i]));\n  }\n\n  return values;\n}\n\nexport default getNumberValues;\n\n\n\n// WEBPACK FOOTER //\n// ./imageLoader/wadouri/metaData/getNumberValues.js","import { getNumberString,\n  getNumberValue,\n  getNumberValues,\n  getValue,\n  metaDataProvider } from './metaData/index.js';\n\nimport findIndexOfString from './findIndexOfString.js';\nimport getPixelData from './getPixelData.js';\nimport metaDataManager from './metaDataManager.js';\nimport loadImage from './loadImage.js';\nimport register from './register.js';\n\nconst metaData = {\n  getNumberString,\n  getNumberValue,\n  getNumberValues,\n  getValue,\n  metaDataProvider\n};\n\nexport default {\n  metaData,\n  findIndexOfString,\n  getPixelData,\n  loadImage,\n  metaDataManager,\n  register\n};\n\n\n\n// WEBPACK FOOTER //\n// ./imageLoader/wadors/index.js","export { default as getNumberString } from './getNumberString.js';\nexport { default as getNumberValue } from './getNumberValue.js';\nexport { default as getNumberValues } from './getNumberValues.js';\nexport { default as getValue } from './getValue.js';\nexport { default as metaDataProvider } from './metaDataProvider.js';\n\n\n\n// WEBPACK FOOTER //\n// ./imageLoader/wadors/metaData/index.js","import getValue from './getValue.js';\n\nfunction getNumberValue (element, index) {\n  const value = getValue(element, index);\n\n  if (value === undefined) {\n    return;\n  }\n\n  return parseFloat(value);\n}\n\nexport default getNumberValue;\n\n\n\n// WEBPACK FOOTER //\n// ./imageLoader/wadors/metaData/getNumberValue.js","\n\n/**\n * Returns the values as an array of javascript numbers\n *\n * @param element - The javascript object for the specified element in the metadata\n * @param [minimumLength] - the minimum number of values\n * @returns {*}\n */\nfunction getNumberValues (element, minimumLength) {\n  if (!element) {\n    return;\n  }\n  // Value is not present if the attribute has a zero length value\n  if (!element.Value) {\n    return;\n  }\n  // make sure we have the expected length\n  if (minimumLength && element.Value.length < minimumLength) {\n    return;\n  }\n\n  const values = [];\n\n  for (let i = 0; i < element.Value.length; i++) {\n    values.push(parseFloat(element.Value[i]));\n  }\n\n  return values;\n}\n\nexport default getNumberValues;\n\n\n\n// WEBPACK FOOTER //\n// ./imageLoader/wadors/metaData/getNumberValues.js","function checkToken (token, data, dataOffset) {\n\n  if (dataOffset + token.length > data.length) {\n    return false;\n  }\n\n  let endIndex = dataOffset;\n\n  for (let i = 0; i < token.length; i++) {\n    if (token[i] !== data[endIndex++]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction stringToUint8Array (str) {\n  const uint = new Uint8Array(str.length);\n\n  for (let i = 0, j = str.length; i < j; i++) {\n    uint[i] = str.charCodeAt(i);\n  }\n\n  return uint;\n}\n\nfunction findIndexOfString (data, str, offset) {\n\n  offset = offset || 0;\n\n  const token = stringToUint8Array(str);\n\n  for (let i = offset; i < data.length; i++) {\n    if (token[0] === data[i]) {\n      // console.log('match @', i);\n      if (checkToken(token, data, i)) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\nexport default findIndexOfString;\n\n\n\n// WEBPACK FOOTER //\n// ./imageLoader/wadors/findIndexOfString.js","import { xhrRequest } from '../internal/index.js';\nimport findIndexOfString from './findIndexOfString.js';\n\nfunction findBoundary (header) {\n  for (let i = 0; i < header.length; i++) {\n    if (header[i].substr(0, 2) === '--') {\n      return header[i];\n    }\n  }\n}\n\nfunction findContentType (header) {\n  for (let i = 0; i < header.length; i++) {\n    if (header[i].substr(0, 13) === 'Content-Type:') {\n      return header[i].substr(13).trim();\n    }\n  }\n}\n\nfunction uint8ArrayToString (data, offset, length) {\n  offset = offset || 0;\n  length = length || data.length - offset;\n  let str = '';\n\n  for (let i = offset; i < offset + length; i++) {\n    str += String.fromCharCode(data[i]);\n  }\n\n  return str;\n}\n\nfunction getPixelData (uri, imageId, mediaType = 'application/octet-stream') {\n  const headers = {\n    accept: mediaType\n  };\n\n  return new Promise((resolve, reject) => {\n    const loadPromise = xhrRequest(uri, imageId, headers);\n\n    loadPromise.then(function (imageFrameAsArrayBuffer/* , xhr*/) {\n\n      // request succeeded, Parse the multi-part mime response\n      const response = new Uint8Array(imageFrameAsArrayBuffer);\n\n      // First look for the multipart mime header\n      const tokenIndex = findIndexOfString(response, '\\r\\n\\r\\n');\n\n      if (tokenIndex === -1) {\n        reject(new Error('invalid response - no multipart mime header'));\n      }\n      const header = uint8ArrayToString(response, 0, tokenIndex);\n      // Now find the boundary  marker\n      const split = header.split('\\r\\n');\n      const boundary = findBoundary(split);\n\n      if (!boundary) {\n        reject(new Error('invalid response - no boundary marker'));\n      }\n      const offset = tokenIndex + 4; // skip over the \\r\\n\\r\\n\n\n      // find the terminal boundary marker\n      const endIndex = findIndexOfString(response, boundary, offset);\n\n      if (endIndex === -1) {\n        reject(new Error('invalid response - terminating boundary not found'));\n      }\n\n      // Remove \\r\\n from the length\n      const length = endIndex - offset - 2;\n\n      // return the info for this pixel data\n      resolve({\n        contentType: findContentType(split),\n        imageFrame: {\n          pixelData: new Uint8Array(imageFrameAsArrayBuffer, offset, length)\n        }\n      });\n    });\n  });\n}\n\nexport default getPixelData;\n\n\n\n// WEBPACK FOOTER //\n// ./imageLoader/wadors/getPixelData.js","import metaDataManager from './metaDataManager.js';\nimport getPixelData from './getPixelData.js';\nimport createImage from '../createImage.js';\n\nfunction getTransferSyntaxForContentType (/* contentType */) {\n  return '1.2.840.10008.1.2'; // hard code to ILE for now\n}\n\nfunction loadImage (imageId, options) {\n  const start = new Date().getTime();\n  const uri = imageId.substring(7);\n\n  const promise = new Promise((resolve, reject) => {\n    // check to make sure we have metadata for this imageId\n    const metaData = metaDataManager.get(imageId);\n\n    if (metaData === undefined) {\n      const error = new Error(`no metadata for imageId ${imageId}`);\n\n      return reject(error);\n    }\n\n    // TODO: load bulk data items that we might need\n    const mediaType = 'multipart/related; type=\"application/octet-stream\"'; // 'image/dicom+jp2';\n\n    // get the pixel data from the server\n    getPixelData(uri, imageId, mediaType).then((result) => {\n      const transferSyntax = getTransferSyntaxForContentType(result.contentType);\n      const pixelData = result.imageFrame.pixelData;\n      const imagePromise = createImage(imageId, pixelData, transferSyntax, options);\n\n      imagePromise.then((image) => {\n        // add the loadTimeInMS property\n        const end = new Date().getTime();\n\n        image.loadTimeInMS = end - start;\n        resolve(image);\n      }, reject);\n    }, reject);\n  });\n\n  return {\n    promise,\n    cancelFn: undefined\n  };\n}\n\nexport default loadImage;\n\n\n\n// WEBPACK FOOTER //\n// ./imageLoader/wadors/loadImage.js","import { external } from '../externalModules.js';\n\nfunction getImageFrame (imageId) {\n  const imagePixelModule = external.cornerstone.metaData.get('imagePixelModule', imageId);\n\n  return {\n    samplesPerPixel: imagePixelModule.samplesPerPixel,\n    photometricInterpretation: imagePixelModule.photometricInterpretation,\n    planarConfiguration: imagePixelModule.planarConfiguration,\n    rows: imagePixelModule.rows,\n    columns: imagePixelModule.columns,\n    bitsAllocated: imagePixelModule.bitsAllocated,\n    pixelRepresentation: imagePixelModule.pixelRepresentation, // 0 = unsigned,\n    smallestPixelValue: imagePixelModule.smallestPixelValue,\n    largestPixelValue: imagePixelModule.largestPixelValue,\n    redPaletteColorLookupTableDescriptor: imagePixelModule.redPaletteColorLookupTableDescriptor,\n    greenPaletteColorLookupTableDescriptor: imagePixelModule.greenPaletteColorLookupTableDescriptor,\n    bluePaletteColorLookupTableDescriptor: imagePixelModule.bluePaletteColorLookupTableDescriptor,\n    redPaletteColorLookupTableData: imagePixelModule.redPaletteColorLookupTableData,\n    greenPaletteColorLookupTableData: imagePixelModule.greenPaletteColorLookupTableData,\n    bluePaletteColorLookupTableData: imagePixelModule.bluePaletteColorLookupTableData,\n    pixelData: undefined // populated later after decoding\n  };\n}\n\nexport default getImageFrame;\n\n\n\n// WEBPACK FOOTER //\n// ./imageLoader/getImageFrame.js","import { getOptions } from './internal/options.js';\nimport webWorkerManager from './webWorkerManager.js';\nimport decodeJPEGBaseline8BitColor from './decodeJPEGBaseline8BitColor.js';\nimport { default as decodeImageFrameHandler } from '../webWorker/decodeTask/decodeImageFrame.js';\n\nfunction processDecodeTask (imageFrame, transferSyntax, pixelData, options) {\n  const priority = options.priority || undefined;\n  const transferList = options.transferPixelData ? [pixelData.buffer] : undefined;\n  const loaderOptions = getOptions();\n  const decodeConfig = loaderOptions.decodeConfig;\n\n  if (decodeConfig.useWebWorkers === false) {\n    return new Promise((resolve, reject) => {\n      try {\n        const decodeArguments = [imageFrame, transferSyntax, pixelData, decodeConfig, options];\n        const decodedImageFrame = decodeImageFrameHandler(...decodeArguments);\n\n        resolve(decodedImageFrame);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  return webWorkerManager.addTask(\n    'decodeTask',\n    {\n      imageFrame,\n      transferSyntax,\n      pixelData,\n      options\n    },\n    priority,\n    transferList\n  ).promise;\n}\n\nfunction decodeImageFrame (imageFrame, transferSyntax, pixelData, canvas, options = {}) {\n  // TODO: Turn this into a switch statement instead\n  if (transferSyntax === '1.2.840.10008.1.2') {\n    // Implicit VR Little Endian\n    return processDecodeTask(imageFrame, transferSyntax, pixelData, options);\n  } else if (transferSyntax === '1.2.840.10008.1.2.1') {\n    // Explicit VR Little Endian\n    return processDecodeTask(imageFrame, transferSyntax, pixelData, options);\n  } else if (transferSyntax === '1.2.840.10008.1.2.2') {\n    // Explicit VR Big Endian (retired)\n    return processDecodeTask(imageFrame, transferSyntax, pixelData, options);\n  } else if (transferSyntax === '1.2.840.10008.1.2.1.99') {\n    // Deflate transfer syntax (deflated by dicomParser)\n    return processDecodeTask(imageFrame, transferSyntax, pixelData, options);\n  } else if (transferSyntax === '1.2.840.10008.1.2.5') {\n    // RLE Lossless\n    return processDecodeTask(imageFrame, transferSyntax, pixelData, options);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.50') {\n    // JPEG Baseline lossy process 1 (8 bit)\n\n    // Handle 8-bit JPEG Baseline color images using the browser's built-in\n    // JPEG decoding\n    if (imageFrame.bitsAllocated === 8 &&\n       (imageFrame.samplesPerPixel === 3 || imageFrame.samplesPerPixel === 4)) {\n      return decodeJPEGBaseline8BitColor(imageFrame, pixelData, canvas);\n    }\n\n    return processDecodeTask(imageFrame, transferSyntax, pixelData, options);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.51') {\n    // JPEG Baseline lossy process 2 & 4 (12 bit)\n    return processDecodeTask(imageFrame, transferSyntax, pixelData, options);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.57') {\n    // JPEG Lossless, Nonhierarchical (Processes 14)\n    return processDecodeTask(imageFrame, transferSyntax, pixelData, options);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.70') {\n    // JPEG Lossless, Nonhierarchical (Processes 14 [Selection 1])\n    return processDecodeTask(imageFrame, transferSyntax, pixelData, options);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.80') {\n    // JPEG-LS Lossless Image Compression\n    return processDecodeTask(imageFrame, transferSyntax, pixelData, options);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.81') {\n    // JPEG-LS Lossy (Near-Lossless) Image Compression\n    return processDecodeTask(imageFrame, transferSyntax, pixelData, options);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.90') {\n    // JPEG 2000 Lossless\n    return processDecodeTask(imageFrame, transferSyntax, pixelData, options);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.91') {\n    // JPEG 2000 Lossy\n    return processDecodeTask(imageFrame, transferSyntax, pixelData, options);\n  }\n\n  /* Don't know if these work...\n   // JPEG 2000 Part 2 Multicomponent Image Compression (Lossless Only)\n   else if(transferSyntax === \"1.2.840.10008.1.2.4.92\")\n   {\n   return cornerstoneWADOImageLoader.decodeJPEG2000(dataSet, frame);\n   }\n   // JPEG 2000 Part 2 Multicomponent Image Compression\n   else if(transferSyntax === \"1.2.840.10008.1.2.4.93\")\n   {\n   return cornerstoneWADOImageLoader.decodeJPEG2000(dataSet, frame);\n   }\n   */\n\n  throw new Error(`No decoder for transfer syntax ${transferSyntax}`);\n}\n\nexport default decodeImageFrame;\n\n\n\n// WEBPACK FOOTER //\n// ./imageLoader/decodeImageFrame.js","import { getOptions } from './internal/options.js';\n\n// the taskId to assign to the next task added via addTask()\nlet nextTaskId = 0;\n\n// array of queued tasks sorted with highest priority task first\nconst tasks = [];\n\n// array of web workers to dispatch decode tasks to\nconst webWorkers = [];\n\n// The options for CornerstoneWADOImageLoader\nconst options = getOptions();\n\nconst defaultConfig = {\n  maxWebWorkers: navigator.hardwareConcurrency || 1,\n  startWebWorkersOnDemand: true,\n  webWorkerPath: '../../dist/cornerstoneWADOImageLoaderWebWorker.js',\n  webWorkerTaskPaths: [],\n  taskConfiguration: {\n    decodeTask: {\n      useWebWorkers: true,\n      loadCodecsOnStartup: true,\n      initializeCodecsOnStartup: false,\n      codecsPath: '../dist/cornerstoneWADOImageLoaderCodecs.js',\n      usePDFJS: false,\n      strict: options.strict\n    }\n  }\n};\n\nlet config;\n\nconst statistics = {\n  maxWebWorkers: 0,\n  numWebWorkers: 0,\n  numTasksQueued: 0,\n  numTasksExecuting: 0,\n  numTasksCompleted: 0,\n  totalTaskTimeInMS: 0,\n  totalTimeDelayedInMS: 0\n};\n\n/**\n * Function to start a task on a web worker\n */\nfunction startTaskOnWebWorker () {\n  // return immediately if no decode tasks to do\n  if (!tasks.length) {\n    return;\n  }\n\n  // look for a web worker that is ready\n  for (let i = 0; i < webWorkers.length; i++) {\n    if (webWorkers[i].status === 'ready') {\n      // mark it as busy so tasks are not assigned to it\n      webWorkers[i].status = 'busy';\n\n      // get the highest priority task\n      const task = tasks.shift();\n\n      task.start = new Date().getTime();\n\n      // update stats with how long this task was delayed (waiting in queue)\n      const end = new Date().getTime();\n\n      statistics.totalTimeDelayedInMS += end - task.added;\n\n      // assign this task to this web worker and send the web worker\n      // a message to execute it\n      webWorkers[i].task = task;\n      webWorkers[i].worker.postMessage({\n        taskType: task.taskType,\n        workerIndex: i,\n        data: task.data\n      }, task.transferList);\n      statistics.numTasksExecuting++;\n\n      return;\n    }\n  }\n\n  // if no available web workers and we haven't started max web workers, start a new one\n  if (webWorkers.length < config.maxWebWorkers) {\n    spawnWebWorker();\n  }\n}\n\n/**\n * Function to handle a message from a web worker\n * @param msg\n */\nfunction handleMessageFromWorker (msg) {\n  // console.log('handleMessageFromWorker', msg.data);\n  if (msg.data.taskType === 'initialize') {\n    webWorkers[msg.data.workerIndex].status = 'ready';\n    startTaskOnWebWorker();\n  } else {\n    const start = webWorkers[msg.data.workerIndex].task.start;\n\n    webWorkers[msg.data.workerIndex].task.deferred.resolve(msg.data.result);\n    webWorkers[msg.data.workerIndex].task = undefined;\n\n    statistics.numTasksExecuting--;\n    webWorkers[msg.data.workerIndex].status = 'ready';\n    statistics.numTasksCompleted++;\n\n    const end = new Date().getTime();\n\n    statistics.totalTaskTimeInMS += end - start;\n\n    startTaskOnWebWorker();\n  }\n}\n\n/**\n * Spawns a new web worker\n */\nfunction spawnWebWorker () {\n  // prevent exceeding maxWebWorkers\n  if (webWorkers.length >= config.maxWebWorkers) {\n    return;\n  }\n\n  // spawn the webworker\n  const worker = new Worker(config.webWorkerPath);\n\n  webWorkers.push({\n    worker,\n    status: 'initializing'\n  });\n  worker.addEventListener('message', handleMessageFromWorker);\n  worker.postMessage({\n    taskType: 'initialize',\n    workerIndex: webWorkers.length - 1,\n    config\n  });\n}\n\n/**\n * Initialization function for the web worker manager - spawns web workers\n * @param configObject\n */\nfunction initialize (configObject) {\n  configObject = configObject || defaultConfig;\n\n  // prevent being initialized more than once\n  if (config) {\n    throw new Error('WebWorkerManager already initialized');\n  }\n\n  config = configObject;\n  options.decodeConfig = (config.taskConfiguration || defaultConfig.taskConfiguration).decodeTask;\n\n  // Prevent web worker from being spawned if it's disabled by configuration\n  if (options.decodeConfig.useWebWorkers !== false) {\n\n    config.maxWebWorkers = config.maxWebWorkers || (navigator.hardwareConcurrency || 1);\n\n    // Spawn new web workers\n    if (!config.startWebWorkersOnDemand) {\n      for (let i = 0; i < config.maxWebWorkers; i++) {\n        spawnWebWorker();\n      }\n    }\n  }\n}\n\n/**\n * dynamically loads a web worker task\n * @param sourcePath\n * @param taskConfig\n */\nfunction loadWebWorkerTask (sourcePath, taskConfig) {\n  // add it to the list of web worker tasks paths so on demand web workers\n  // load this properly\n  config.webWorkerTaskPaths.push(sourcePath);\n\n  // if a task specific configuration is provided, merge it into the config\n  if (taskConfig) {\n    config.taskConfiguration = Object.assign(config.taskConfiguration, taskConfig);\n  }\n\n  // tell each spawned web worker to load this task\n  for (let i = 0; i < webWorkers.length; i++) {\n    webWorkers[i].worker.postMessage({\n      taskType: 'loadWebWorkerTask',\n      workerIndex: webWorkers.length - 1,\n      sourcePath,\n      config\n    });\n  }\n}\n\n/**\n * Function to add a decode task to be performed\n *\n * @param taskType - the taskType for this task\n * @param data - data specific to the task\n * @param priority - optional priority of the task (defaults to 0), > 0 is higher, < 0 is lower\n * @param transferList - optional array of data to transfer to web worker\n * @returns {*}\n */\nfunction addTask (taskType, data, priority = 0, transferList) {\n  if (!config) {\n    initialize();\n  }\n\n  let deferred = {};\n  const promise = new Promise((resolve, reject) => {\n    deferred = {\n      resolve,\n      reject\n    };\n  });\n\n  // find the right spot to insert this decode task (based on priority)\n  let i;\n\n  for (i = 0; i < tasks.length; i++) {\n    if (tasks[i].priority < priority) {\n      break;\n    }\n  }\n\n  const taskId = nextTaskId++;\n\n  // insert the decode task at position i\n  tasks.splice(i, 0, {\n    taskId,\n    taskType,\n    status: 'ready',\n    added: new Date().getTime(),\n    data,\n    deferred,\n    priority,\n    transferList\n  });\n\n  // try to start a task on the web worker since we just added a new task and a web worker may be available\n  startTaskOnWebWorker();\n\n  return {\n    taskId,\n    promise\n  };\n}\n\n/**\n * Changes the priority of a queued task\n * @param taskId - the taskId to change the priority of\n * @param priority - priority of the task (defaults to 0), > 0 is higher, < 0 is lower\n * @returns boolean - true on success, false if taskId not found\n */\nfunction setTaskPriority (taskId, priority = 0) {\n  // search for this taskId\n  for (let i = 0; i < tasks.length; i++) {\n    if (tasks[i].taskId === taskId) {\n      // taskId found, remove it\n      const task = tasks.splice(i, 1)[0];\n\n      // set its priority\n      task.priority = priority;\n\n      // find the right spot to insert this decode task (based on priority)\n      for (i = 0; i < tasks.length; i++) {\n        if (tasks[i].priority < priority) {\n          break;\n        }\n      }\n\n      // insert the decode task at position i\n      tasks.splice(i, 0, task);\n\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Cancels a queued task and rejects\n * @param taskId - the taskId to cancel\n * @param reason - optional reason the task was rejected\n * @returns boolean - true on success, false if taskId not found\n */\nfunction cancelTask (taskId, reason) {\n  // search for this taskId\n  for (let i = 0; i < tasks.length; i++) {\n    if (tasks[i].taskId === taskId) {\n      // taskId found, remove it\n      const task = tasks.splice(i, 1);\n\n      task.deferred.reject(reason);\n\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Function to return the statistics on running web workers\n * @returns object containing statistics\n */\nfunction getStatistics () {\n  statistics.maxWebWorkers = config.maxWebWorkers;\n  statistics.numWebWorkers = webWorkers.length;\n  statistics.numTasksQueued = tasks.length;\n\n  return statistics;\n}\n\nexport default {\n  initialize,\n  loadWebWorkerTask,\n  addTask,\n  getStatistics,\n  setTaskPriority,\n  cancelTask\n};\n\n\n\n// WEBPACK FOOTER //\n// ./imageLoader/webWorkerManager.js","import getMinMax from '../shared/getMinMax.js';\n\n/**\n * Special decoder for 8 bit jpeg that leverages the browser's built in JPEG decoder for increased performance\n */\n\nfunction arrayBufferToString (buffer) {\n  return binaryToString(String.fromCharCode.apply(null, Array.prototype.slice.apply(new Uint8Array(buffer))));\n}\n\nfunction binaryToString (binary) {\n  let error;\n\n  try {\n    return decodeURIComponent(escape(binary));\n  } catch (_error) {\n    error = _error;\n    if (error instanceof URIError) {\n      return binary;\n    }\n    throw error;\n\n  }\n}\n\nfunction decodeJPEGBaseline8BitColor (imageFrame, pixelData, canvas) {\n  const start = new Date().getTime();\n  const imgBlob = new Blob([pixelData], { type: 'image/jpeg' });\n\n  return new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n\n    if (fileReader.readAsBinaryString === undefined) {\n      fileReader.readAsArrayBuffer(imgBlob);\n    } else {\n      fileReader.readAsBinaryString(imgBlob); // doesn't work on IE11\n    }\n\n    fileReader.onload = function () {\n      const img = new Image();\n\n      img.onload = function () {\n        canvas.height = img.height;\n        canvas.width = img.width;\n        imageFrame.rows = img.height;\n        imageFrame.columns = img.width;\n        const context = canvas.getContext('2d');\n\n        context.drawImage(this, 0, 0);\n        const imageData = context.getImageData(0, 0, img.width, img.height);\n        const end = new Date().getTime();\n\n        imageFrame.pixelData = imageData.data;\n        imageFrame.imageData = imageData;\n        imageFrame.decodeTimeInMS = end - start;\n\n        // calculate smallest and largest PixelValue\n        const minMax = getMinMax(imageFrame.pixelData);\n\n        imageFrame.smallestPixelValue = minMax.min;\n        imageFrame.largestPixelValue = minMax.max;\n\n        resolve(imageFrame);\n      };\n\n      img.onerror = function (error) {\n        reject(error);\n      };\n\n      if (fileReader.readAsBinaryString === undefined) {\n        img.src = `data:image/jpeg;base64,${window.btoa(arrayBufferToString(fileReader.result))}`;\n      } else {\n        img.src = `data:image/jpeg;base64,${window.btoa(fileReader.result)}`; // doesn't work on IE11\n      }\n    };\n\n    fileReader.onerror = (e) => {\n      reject(e);\n    };\n  });\n}\n\nexport default decodeJPEGBaseline8BitColor;\n\n\n\n// WEBPACK FOOTER //\n// ./imageLoader/decodeJPEGBaseline8BitColor.js","export default function (photoMetricInterpretation) {\n  return (photoMetricInterpretation === 'RGB' ||\n    photoMetricInterpretation === 'PALETTE COLOR' ||\n    photoMetricInterpretation === 'YBR_FULL' ||\n    photoMetricInterpretation === 'YBR_FULL_422' ||\n    photoMetricInterpretation === 'YBR_PARTIAL_422' ||\n    photoMetricInterpretation === 'YBR_PARTIAL_420' ||\n    photoMetricInterpretation === 'YBR_RCT' ||\n    photoMetricInterpretation === 'YBR_ICT');\n}\n\n\n\n// WEBPACK FOOTER //\n// ./imageLoader/isColorImage.js","import { convertRGBColorByPixel, convertRGBColorByPlane,\n  convertYBRFullByPixel, convertYBRFullByPlane,\n  convertPALETTECOLOR } from './colorSpaceConverters/index.js';\n\nfunction convertRGB (imageFrame, rgbaBuffer) {\n  if (imageFrame.planarConfiguration === 0) {\n    convertRGBColorByPixel(imageFrame.pixelData, rgbaBuffer);\n  } else {\n    convertRGBColorByPlane(imageFrame.pixelData, rgbaBuffer);\n  }\n}\n\nfunction convertYBRFull (imageFrame, rgbaBuffer) {\n  if (imageFrame.planarConfiguration === 0) {\n    convertYBRFullByPixel(imageFrame.pixelData, rgbaBuffer);\n  } else {\n    convertYBRFullByPlane(imageFrame.pixelData, rgbaBuffer);\n  }\n}\n\nexport default function convertColorSpace (imageFrame, imageData) {\n  const rgbaBuffer = imageData.data;\n  // convert based on the photometric interpretation\n\n  if (imageFrame.photometricInterpretation === 'RGB') {\n    convertRGB(imageFrame, rgbaBuffer);\n  } else if (imageFrame.photometricInterpretation === 'YBR_RCT') {\n    convertRGB(imageFrame, rgbaBuffer);\n  } else if (imageFrame.photometricInterpretation === 'YBR_ICT') {\n    convertRGB(imageFrame, rgbaBuffer);\n  } else if (imageFrame.photometricInterpretation === 'PALETTE COLOR') {\n    convertPALETTECOLOR(imageFrame, rgbaBuffer);\n  } else if (imageFrame.photometricInterpretation === 'YBR_FULL_422') {\n    convertRGB(imageFrame, rgbaBuffer);\n  } else if (imageFrame.photometricInterpretation === 'YBR_FULL') {\n    convertYBRFull(imageFrame, rgbaBuffer);\n  } else {\n    throw new Error(`No color space conversion for photometric interpretation ${imageFrame.photometricInterpretation}`);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./imageLoader/convertColorSpace.js","function isJPEGBaseline8BitColor (imageFrame, transferSyntax) {\n  transferSyntax = transferSyntax || imageFrame.transferSyntax;\n\n  if (imageFrame.bitsAllocated === 8 &&\n     transferSyntax === '1.2.840.10008.1.2.4.50' &&\n     (imageFrame.samplesPerPixel === 3 || imageFrame.samplesPerPixel === 4)) {\n    return true;\n  }\n}\n\nexport default isJPEGBaseline8BitColor;\n\n\n\n// WEBPACK FOOTER //\n// ./imageLoader/isJPEGBaseline8BitColor.js","let files = [];\n\nfunction add (file) {\n  const fileIndex = files.push(file);\n\n  return `dicomfile:${fileIndex - 1}`;\n}\n\nfunction get (index) {\n  return files[index];\n}\n\nfunction remove (index) {\n  files[index] = undefined;\n}\n\nfunction purge () {\n  files = [];\n}\n\nexport default {\n  add,\n  get,\n  remove,\n  purge\n};\n\n\n\n// WEBPACK FOOTER //\n// ./imageLoader/wadouri/fileManager.js","import { dicomParser } from '../../externalModules.js';\n\n/**\n * Function to deal with extracting an image frame from an encapsulated data set.\n */\n\n\nfunction framesAreFragmented (dataSet) {\n  const numberOfFrames = dataSet.intString('x00280008');\n  const pixelDataElement = dataSet.elements.x7fe00010;\n\n  return (numberOfFrames !== pixelDataElement.fragments.length);\n}\n\nexport default function getEncapsulatedImageFrame (dataSet, frameIndex) {\n  if (dataSet.elements.x7fe00010 && dataSet.elements.x7fe00010.basicOffsetTable.length) {\n    // Basic Offset Table is not empty\n    return dicomParser.readEncapsulatedImageFrame(dataSet, dataSet.elements.x7fe00010, frameIndex);\n  }\n\n  // Empty basic offset table\n\n  if (framesAreFragmented(dataSet)) {\n    const basicOffsetTable = dicomParser.createJPEGBasicOffsetTable(dataSet, dataSet.elements.x7fe00010);\n\n    return dicomParser.readEncapsulatedImageFrame(dataSet, dataSet.elements.x7fe00010, frameIndex, basicOffsetTable);\n  }\n\n  return dicomParser.readEncapsulatedPixelDataFromFragments(dataSet, dataSet.elements.x7fe00010, frameIndex);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./imageLoader/wadouri/getEncapsulatedImageFrame.js","import unpackBinaryFrame from './unpackBinaryFrame.js';\n\n/**\n * Function to deal with extracting an image frame from an encapsulated data set.\n */\n\nfunction getUncompressedImageFrame (dataSet, frameIndex) {\n  const pixelDataElement = dataSet.elements.x7fe00010 || dataSet.elements.x7fe00008;\n  const bitsAllocated = dataSet.uint16('x00280100');\n  const rows = dataSet.uint16('x00280010');\n  const columns = dataSet.uint16('x00280011');\n  const samplesPerPixel = dataSet.uint16('x00280002');\n\n  const pixelDataOffset = pixelDataElement.dataOffset;\n  const pixelsPerFrame = rows * columns * samplesPerPixel;\n\n  let frameOffset;\n\n  if (bitsAllocated === 8) {\n    frameOffset = pixelDataOffset + frameIndex * pixelsPerFrame;\n    if (frameOffset >= dataSet.byteArray.length) {\n      throw new Error('frame exceeds size of pixelData');\n    }\n\n    return new Uint8Array(dataSet.byteArray.buffer, frameOffset, pixelsPerFrame);\n  } else if (bitsAllocated === 16) {\n    frameOffset = pixelDataOffset + frameIndex * pixelsPerFrame * 2;\n    if (frameOffset >= dataSet.byteArray.length) {\n      throw new Error('frame exceeds size of pixelData');\n    }\n\n    return new Uint8Array(dataSet.byteArray.buffer, frameOffset, pixelsPerFrame * 2);\n  } else if (bitsAllocated === 1) {\n    frameOffset = pixelDataOffset + frameIndex * pixelsPerFrame * 0.125;\n    if (frameOffset >= dataSet.byteArray.length) {\n      throw new Error('frame exceeds size of pixelData');\n    }\n\n    return unpackBinaryFrame(dataSet.byteArray, frameOffset, pixelsPerFrame);\n  } else if (bitsAllocated === 32) {\n    frameOffset = pixelDataOffset + frameIndex * pixelsPerFrame * 4;\n    if (frameOffset >= dataSet.byteArray.length) {\n      throw new Error('frame exceeds size of pixelData');\n    }\n\n    return new Uint8Array(dataSet.byteArray.buffer, frameOffset, pixelsPerFrame * 4);\n  }\n\n  throw new Error('unsupported pixel format');\n}\n\nexport default getUncompressedImageFrame;\n\n\n\n// WEBPACK FOOTER //\n// ./imageLoader/wadouri/getUncompressedImageFrame.js","/* eslint no-bitwise: 0 */\n\nfunction isBitSet (byte, bitPos) {\n  return byte & (1 << bitPos);\n}\n\n/**\n * Function to deal with unpacking a binary frame\n */\nfunction unpackBinaryFrame (byteArray, frameOffset, pixelsPerFrame) {\n  // Create a new pixel array given the image size\n  const pixelData = new Uint8Array(pixelsPerFrame);\n\n  for (let i = 0; i < pixelsPerFrame; i++) {\n    // Compute byte position\n    const bytePos = Math.floor(i / 8);\n\n    // Get the current byte\n    const byte = byteArray[bytePos + frameOffset];\n\n    // Bit position (0-7) within byte\n    const bitPos = (i % 8);\n\n    // Check whether bit at bitpos is set\n    pixelData[i] = isBitSet(byte, bitPos) ? 1 : 0;\n  }\n\n  return pixelData;\n}\n\nexport default unpackBinaryFrame;\n\n\n\n// WEBPACK FOOTER //\n// ./imageLoader/wadouri/unpackBinaryFrame.js","import parseImageId from './parseImageId.js';\nimport fileManager from './fileManager.js';\n\nfunction loadFileRequest (uri) {\n  const parsedImageId = parseImageId(uri);\n  const fileIndex = parseInt(parsedImageId.url, 10);\n  const file = fileManager.get(fileIndex);\n\n  return new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n\n    fileReader.onload = (e) => {\n      const dicomPart10AsArrayBuffer = e.target.result;\n\n      resolve(dicomPart10AsArrayBuffer);\n    };\n\n    fileReader.onerror = reject;\n\n    fileReader.readAsArrayBuffer(file);\n  });\n}\n\nexport default loadFileRequest;\n\n\n\n// WEBPACK FOOTER //\n// ./imageLoader/wadouri/loadFileRequest.js","import createImage from '../createImage.js';\nimport parseImageId from './parseImageId.js';\nimport dataSetCacheManager from './dataSetCacheManager.js';\nimport loadFileRequest from './loadFileRequest.js';\nimport getPixelData from './getPixelData.js';\nimport { xhrRequest } from '../internal/index.js';\n\n// add a decache callback function to clear out our dataSetCacheManager\nfunction addDecache (image) {\n  image.decache = function () {\n    // console.log('decache');\n    const parsedImageId = parseImageId(image.imageId);\n\n    dataSetCacheManager.unload(parsedImageId.url);\n  };\n}\n\nfunction loadImageFromPromise (dataSetPromise, imageId, frame = 0, sharedCacheKey, options) {\n  const start = new Date().getTime();\n\n  const promise = new Promise((resolve, reject) => {\n    dataSetPromise.then((dataSet/* , xhr*/) => {\n      const pixelData = getPixelData(dataSet, frame);\n      const transferSyntax = dataSet.string('x00020010');\n      const loadEnd = new Date().getTime();\n      const imagePromise = createImage(imageId, pixelData, transferSyntax, options);\n\n      imagePromise.then((image) => {\n        image.data = dataSet;\n        image.sharedCacheKey = sharedCacheKey;\n        const end = new Date().getTime();\n\n        image.loadTimeInMS = loadEnd - start;\n        image.totalTimeInMS = end - start;\n        addDecache(image);\n        resolve(image);\n      }, reject);\n    }, reject);\n  });\n\n  return {\n    promise,\n    cancelFn: undefined\n  };\n}\n\nfunction loadImageFromDataSet (dataSet, imageId, frame = 0, sharedCacheKey, options) {\n  const start = new Date().getTime();\n\n  const promise = new Promise((resolve, reject) => {\n    const pixelData = getPixelData(dataSet, frame);\n    const transferSyntax = dataSet.string('x00020010');\n    const loadEnd = new Date().getTime();\n    const imagePromise = createImage(imageId, pixelData, transferSyntax, options);\n\n    imagePromise.then((image) => {\n      image.data = dataSet;\n      image.sharedCacheKey = sharedCacheKey;\n      const end = new Date().getTime();\n\n      image.loadTimeInMS = loadEnd - start;\n      image.totalTimeInMS = end - start;\n      addDecache(image);\n      resolve(image);\n    }, reject);\n  });\n\n  return {\n    promise,\n    cancelFn: undefined\n  };\n}\n\nfunction getLoaderForScheme (scheme) {\n  if (scheme === 'dicomweb' || scheme === 'wadouri') {\n    return xhrRequest;\n  } else if (scheme === 'dicomfile') {\n    return loadFileRequest;\n  }\n}\n\nfunction loadImage (imageId, options) {\n  const parsedImageId = parseImageId(imageId);\n  const loader = getLoaderForScheme(parsedImageId.scheme);\n\n  // if the dataset for this url is already loaded, use it\n  if (dataSetCacheManager.isLoaded(parsedImageId.url)) {\n    const dataSet = dataSetCacheManager.get(parsedImageId.url, loader, imageId);\n\n    return loadImageFromDataSet(dataSet, imageId, parsedImageId.frame, parsedImageId.url, options);\n  }\n\n  // load the dataSet via the dataSetCacheManager\n  const dataSetPromise = dataSetCacheManager.load(parsedImageId.url, loader, imageId);\n\n  return loadImageFromPromise(dataSetPromise, imageId, parsedImageId.frame, parsedImageId.url, options);\n}\n\nexport { loadImageFromPromise, getLoaderForScheme, loadImage };\n\n\n\n// WEBPACK FOOTER //\n// ./imageLoader/wadouri/loadImage.js","export * from './colorSpaceConverters/index.js';\n\nexport { default as wadouri } from './wadouri/index.js';\nexport { default as wadors } from './wadors/index.js';\nexport { default as configure } from './configure.js';\nexport { default as convertColorSpace } from './convertColorSpace.js';\nexport { default as createImage } from './createImage.js';\nexport { default as decodeImageFrame } from './decodeImageFrame.js';\nexport { default as decodeJPEGBaseline8BitColor } from './decodeJPEGBaseline8BitColor.js';\nexport { default as getImageFrame } from './getImageFrame.js';\nexport { default as getMinMax } from '../shared/getMinMax.js';\nexport { default as isColorImage } from './isColorImage.js';\nexport { default as isJPEGBaseline8BitColor } from './isJPEGBaseline8BitColor.js';\nexport { default as webWorkerManager } from './webWorkerManager.js';\nexport { default as version } from '../version.js';\nexport { internal } from './internal/index.js';\nexport { external } from '../externalModules.js';\n\n\n\n// WEBPACK FOOTER //\n// ./imageLoader/index.js","export default function (imageFrame, rgbaBuffer) {\n  if (imageFrame === undefined) {\n    throw new Error('decodeRGB: rgbBuffer must not be undefined');\n  }\n  if (imageFrame.length % 3 !== 0) {\n    throw new Error('decodeRGB: rgbBuffer length must be divisible by 3');\n  }\n\n  const numPixels = imageFrame.length / 3;\n  let rgbIndex = 0;\n  let rgbaIndex = 0;\n\n  for (let i = 0; i < numPixels; i++) {\n    rgbaBuffer[rgbaIndex++] = imageFrame[rgbIndex++]; // red\n    rgbaBuffer[rgbaIndex++] = imageFrame[rgbIndex++]; // green\n    rgbaBuffer[rgbaIndex++] = imageFrame[rgbIndex++]; // blue\n    rgbaBuffer[rgbaIndex++] = 255; // alpha\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./imageLoader/colorSpaceConverters/convertRGBColorByPixel.js","export default function (imageFrame, rgbaBuffer) {\n  if (imageFrame === undefined) {\n    throw new Error('decodeRGB: rgbBuffer must not be undefined');\n  }\n  if (imageFrame.length % 3 !== 0) {\n    throw new Error('decodeRGB: rgbBuffer length must be divisible by 3');\n  }\n\n  const numPixels = imageFrame.length / 3;\n  let rgbaIndex = 0;\n  let rIndex = 0;\n  let gIndex = numPixels;\n  let bIndex = numPixels * 2;\n\n  for (let i = 0; i < numPixels; i++) {\n    rgbaBuffer[rgbaIndex++] = imageFrame[rIndex++]; // red\n    rgbaBuffer[rgbaIndex++] = imageFrame[gIndex++]; // green\n    rgbaBuffer[rgbaIndex++] = imageFrame[bIndex++]; // blue\n    rgbaBuffer[rgbaIndex++] = 255; // alpha\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./imageLoader/colorSpaceConverters/convertRGBColorByPlane.js","export default function (imageFrame, rgbaBuffer) {\n  if (imageFrame === undefined) {\n    throw new Error('decodeRGB: ybrBuffer must not be undefined');\n  }\n  if (imageFrame.length % 3 !== 0) {\n    throw new Error('decodeRGB: ybrBuffer length must be divisble by 3');\n  }\n\n  const numPixels = imageFrame.length / 3;\n  let ybrIndex = 0;\n  let rgbaIndex = 0;\n\n  for (let i = 0; i < numPixels; i++) {\n    const y = imageFrame[ybrIndex++];\n    const cb = imageFrame[ybrIndex++];\n    const cr = imageFrame[ybrIndex++];\n\n    rgbaBuffer[rgbaIndex++] = y + 1.40200 * (cr - 128);// red\n    rgbaBuffer[rgbaIndex++] = y - 0.34414 * (cb - 128) - 0.71414 * (cr - 128); // green\n    rgbaBuffer[rgbaIndex++] = y + 1.77200 * (cb - 128); // blue\n    rgbaBuffer[rgbaIndex++] = 255; // alpha\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./imageLoader/colorSpaceConverters/convertYBRFullByPixel.js","export default function (imageFrame, rgbaBuffer) {\n  if (imageFrame === undefined) {\n    throw new Error('decodeRGB: ybrBuffer must not be undefined');\n  }\n  if (imageFrame.length % 3 !== 0) {\n    throw new Error('decodeRGB: ybrBuffer length must be divisble by 3');\n  }\n\n  const numPixels = imageFrame.length / 3;\n  let rgbaIndex = 0;\n  let yIndex = 0;\n  let cbIndex = numPixels;\n  let crIndex = numPixels * 2;\n\n  for (let i = 0; i < numPixels; i++) {\n    const y = imageFrame[yIndex++];\n    const cb = imageFrame[cbIndex++];\n    const cr = imageFrame[crIndex++];\n\n    rgbaBuffer[rgbaIndex++] = y + 1.40200 * (cr - 128);// red\n    rgbaBuffer[rgbaIndex++] = y - 0.34414 * (cb - 128) - 0.71414 * (cr - 128); // green\n    rgbaBuffer[rgbaIndex++] = y + 1.77200 * (cb - 128); // blue\n    rgbaBuffer[rgbaIndex++] = 255; // alpha\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./imageLoader/colorSpaceConverters/convertYBRFullByPlane.js","/* eslint no-bitwise: 0 */\n\nfunction convertLUTto8Bit (lut, shift) {\n  const numEntries = lut.length;\n  const cleanedLUT = new Uint8ClampedArray(numEntries);\n\n  for (let i = 0; i < numEntries; ++i) {\n    cleanedLUT[i] = lut[i] >> shift;\n  }\n\n  return cleanedLUT;\n}\n\n/**\n * Convert pixel data with PALETTE COLOR Photometric Interpretation to RGBA\n *\n * @param {ImageFrame} imageFrame\n * @param {Uint8ClampedArray} rgbaBuffer\n * @returns {void}\n */\nexport default function (imageFrame, rgbaBuffer) {\n  const numPixels = imageFrame.columns * imageFrame.rows;\n  const pixelData = imageFrame.pixelData;\n  const rData = imageFrame.redPaletteColorLookupTableData;\n  const gData = imageFrame.greenPaletteColorLookupTableData;\n  const bData = imageFrame.bluePaletteColorLookupTableData;\n  const len = imageFrame.redPaletteColorLookupTableData.length;\n  let palIndex = 0;\n  let rgbaIndex = 0;\n\n  const start = imageFrame.redPaletteColorLookupTableDescriptor[1];\n  const shift = imageFrame.redPaletteColorLookupTableDescriptor[2] === 8 ? 0 : 8;\n\n  const rDataCleaned = convertLUTto8Bit(rData, shift);\n  const gDataCleaned = convertLUTto8Bit(gData, shift);\n  const bDataCleaned = convertLUTto8Bit(bData, shift);\n\n  for (let i = 0; i < numPixels; ++i) {\n    let value = pixelData[palIndex++];\n\n    if (value < start) {\n      value = 0;\n    } else if (value > start + len - 1) {\n      value = len - 1;\n    } else {\n      value -= start;\n    }\n\n    rgbaBuffer[rgbaIndex++] = rDataCleaned[value];\n    rgbaBuffer[rgbaIndex++] = gDataCleaned[value];\n    rgbaBuffer[rgbaIndex++] = bDataCleaned[value];\n    rgbaBuffer[rgbaIndex++] = 255;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./imageLoader/colorSpaceConverters/convertPALETTECOLOR.js","import { dicomParser } from '../../../externalModules.js';\nimport getNumberValues from './getNumberValues.js';\nimport parseImageId from '../parseImageId.js';\nimport dataSetCacheManager from '../dataSetCacheManager.js';\nimport getImagePixelModule from './getImagePixelModule.js';\nimport getLUTs from './getLUTs.js';\nimport getModalityLUTOutputPixelRepresentation from './getModalityLUTOutputPixelRepresentation.js';\n\nfunction metaDataProvider (type, imageId) {\n  const parsedImageId = parseImageId(imageId);\n\n  const dataSet = dataSetCacheManager.get(parsedImageId.url);\n\n  if (!dataSet) {\n    return;\n  }\n\n  if (type === 'generalSeriesModule') {\n    return {\n      modality: dataSet.string('x00080060'),\n      seriesInstanceUID: dataSet.string('x0020000e'),\n      seriesNumber: dataSet.intString('x00200011'),\n      studyInstanceUID: dataSet.string('x0020000d'),\n      seriesDate: dicomParser.parseDA(dataSet.string('x00080021')),\n      seriesTime: dicomParser.parseTM(dataSet.string('x00080031') || '')\n    };\n  }\n\n  if (type === 'patientStudyModule') {\n    return {\n      patientAge: dataSet.intString('x00101010'),\n      patientSize: dataSet.floatString('x00101020'),\n      patientWeight: dataSet.floatString('x00101030')\n    };\n  }\n\n  if (type === 'imagePlaneModule') {\n\n    const imageOrientationPatient = getNumberValues(dataSet, 'x00200037', 6);\n    const imagePositionPatient = getNumberValues(dataSet, 'x00200032', 3);\n    const pixelSpacing = getNumberValues(dataSet, 'x00280030', 2);\n\n    let columnPixelSpacing = 1.0;\n    let rowPixelSpacing = 1.0;\n\n    if (pixelSpacing) {\n      rowPixelSpacing = pixelSpacing[0];\n      columnPixelSpacing = pixelSpacing[1];\n    }\n\n    let rowCosines = null;\n    let columnCosines = null;\n\n    if (imageOrientationPatient) {\n      rowCosines = [parseFloat(imageOrientationPatient[0]), parseFloat(imageOrientationPatient[1]), parseFloat(imageOrientationPatient[2])];\n      columnCosines = [parseFloat(imageOrientationPatient[3]), parseFloat(imageOrientationPatient[4]), parseFloat(imageOrientationPatient[5])];\n    }\n\n    return {\n      frameOfReferenceUID: dataSet.string('x00200052'),\n      rows: dataSet.uint16('x00280010'),\n      columns: dataSet.uint16('x00280011'),\n      imageOrientationPatient,\n      rowCosines,\n      columnCosines,\n      imagePositionPatient,\n      sliceThickness: dataSet.floatString('x00180050'),\n      sliceLocation: dataSet.floatString('x00201041'),\n      pixelSpacing,\n      rowPixelSpacing,\n      columnPixelSpacing\n    };\n  }\n\n  if (type === 'imagePixelModule') {\n    return getImagePixelModule(dataSet);\n  }\n\n  if (type === 'modalityLutModule') {\n    return {\n      rescaleIntercept: dataSet.floatString('x00281052'),\n      rescaleSlope: dataSet.floatString('x00281053'),\n      rescaleType: dataSet.string('x00281054'),\n      modalityLUTSequence: getLUTs(dataSet.uint16('x00280103'), dataSet.elements.x00283000)\n    };\n  }\n\n  if (type === 'voiLutModule') {\n    const modalityLUTOutputPixelRepresentation = getModalityLUTOutputPixelRepresentation(dataSet);\n\n\n    return {\n      windowCenter: getNumberValues(dataSet, 'x00281050', 1),\n      windowWidth: getNumberValues(dataSet, 'x00281051', 1),\n      voiLUTSequence: getLUTs(modalityLUTOutputPixelRepresentation, dataSet.elements.x00283010)\n    };\n  }\n\n  if (type === 'sopCommonModule') {\n    return {\n      sopClassUID: dataSet.string('x00080016'),\n      sopInstanceUID: dataSet.string('x00080018')\n    };\n  }\n\n  if (type === 'petIsotopeModule') {\n    const radiopharmaceuticalInfo = dataSet.elements.x00540016;\n\n    if (radiopharmaceuticalInfo === undefined) {\n      return;\n    }\n\n    const firstRadiopharmaceuticalInfoDataSet = radiopharmaceuticalInfo.items[0].dataSet;\n\n\n    return {\n      radiopharmaceuticalInfo: {\n        radiopharmaceuticalStartTime: dicomParser.parseTM(firstRadiopharmaceuticalInfoDataSet.string('x00181072') || ''),\n        radionuclideTotalDose: firstRadiopharmaceuticalInfoDataSet.floatString('x00181074'),\n        radionuclideHalfLife: firstRadiopharmaceuticalInfoDataSet.floatString('x00181075')\n      }\n    };\n  }\n}\n\nexport default metaDataProvider;\n\n\n\n// WEBPACK FOOTER //\n// ./imageLoader/wadouri/metaData/metaDataProvider.js","module.exports = __WEBPACK_EXTERNAL_MODULE_52__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"commonjs\":\"dicom-parser\",\"commonjs2\":\"dicom-parser\",\"amd\":\"dicom-parser\",\"root\":\"dicomParser\"}\n// module id = 52\n// module chunks = 0","import wadors from './wadors/index.js';\nimport wadouri from './wadouri/index.js';\n\n/**\n * Register the WADO-URI and WADO-RS image loaders and metaData providers\n * with an instance of Cornerstone Core.\n *\n * @param cornerstone The Cornerstone Core library to register the image loaders with\n */\nfunction registerLoaders (cornerstone) {\n  wadors.register(cornerstone);\n  wadouri.register(cornerstone);\n}\n\nexport default registerLoaders;\n\n\n\n// WEBPACK FOOTER //\n// ./imageLoader/registerLoaders.js","import getValue from './getValue.js';\n\n/**\n * Returns the first string value as a Javascript number\n *\n * @param element - The javascript object for the specified element in the metadata\n * @param [index] - the index of the value in a multi-valued element, default is 0\n * @param [defaultValue] - The default value to return if the element does not exist\n * @returns {*}\n */\nfunction getNumberString (element, index, defaultValue) {\n  const value = getValue(element, index, defaultValue);\n\n  if (value === undefined) {\n    return;\n  }\n\n  return parseFloat(value);\n}\n\nexport default getNumberString;\n\n\n\n// WEBPACK FOOTER //\n// ./imageLoader/wadors/metaData/getNumberString.js","import { dicomParser } from '../../../externalModules.js';\nimport getNumberValues from './getNumberValues.js';\nimport getValue from './getValue.js';\nimport getNumberValue from './getNumberValue.js';\nimport metaDataManager from '../metaDataManager.js';\n\nfunction metaDataProvider (type, imageId) {\n  const metaData = metaDataManager.get(imageId);\n\n  if (!metaData) {\n    return;\n  }\n\n  if (type === 'generalSeriesModule') {\n    return {\n      modality: getValue(metaData['00080060']),\n      seriesInstanceUID: getValue(metaData['0020000e']),\n      seriesNumber: getNumberValue(metaData['00200011']),\n      studyInstanceUID: getValue(metaData['0020000d']),\n      seriesDate: dicomParser.parseDA(getValue(metaData['00080021'])),\n      seriesTime: dicomParser.parseTM(getValue(metaData['00080031'], 0, ''))\n    };\n  }\n\n  if (type === 'patientStudyModule') {\n    return {\n      patientAge: getNumberValue(metaData['00101010']),\n      patientSize: getNumberValue(metaData['00101020']),\n      patientWeight: getNumberValue(metaData['00101030'])\n    };\n  }\n\n  if (type === 'imagePlaneModule') {\n    const imageOrientationPatient = getNumberValues(metaData['00200037'], 6);\n    const imagePositionPatient = getNumberValues(metaData['00200032'], 3);\n    const pixelSpacing = getNumberValues(metaData['00280030'], 2);\n    let columnPixelSpacing = 1.0;\n    let rowPixelSpacing = 1.0;\n\n    if (pixelSpacing) {\n      rowPixelSpacing = pixelSpacing[0];\n      columnPixelSpacing = pixelSpacing[1];\n    }\n\n    let rowCosines = null;\n    let columnCosines = null;\n\n    if (imageOrientationPatient) {\n      rowCosines = [parseFloat(imageOrientationPatient[0]), parseFloat(imageOrientationPatient[1]), parseFloat(imageOrientationPatient[2])];\n      columnCosines = [parseFloat(imageOrientationPatient[3]), parseFloat(imageOrientationPatient[4]), parseFloat(imageOrientationPatient[5])];\n    }\n\n    return {\n      frameOfReferenceUID: getValue(metaData['00200052']),\n      rows: getNumberValue(metaData['00280010']),\n      columns: getNumberValue(metaData['00280011']),\n      imageOrientationPatient,\n      rowCosines,\n      columnCosines,\n      imagePositionPatient,\n      sliceThickness: getNumberValue(metaData['00180050']),\n      sliceLocation: getNumberValue(metaData['00201041']),\n      pixelSpacing,\n      rowPixelSpacing,\n      columnPixelSpacing\n    };\n  }\n\n  if (type === 'imagePixelModule') {\n    return {\n      samplesPerPixel: getNumberValue(metaData['00280002']),\n      photometricInterpretation: getValue(metaData['00280004']),\n      rows: getNumberValue(metaData['00280010']),\n      columns: getNumberValue(metaData['00280011']),\n      bitsAllocated: getNumberValue(metaData['00280100']),\n      bitsStored: getNumberValue(metaData['00280101']),\n      highBit: getValue(metaData['00280102']),\n      pixelRepresentation: getNumberValue(metaData['00280103']),\n      planarConfiguration: getNumberValue(metaData['00280006']),\n      pixelAspectRatio: getValue(metaData['00280034']),\n      smallestPixelValue: getNumberValue(metaData['00280106']),\n      largestPixelValue: getNumberValue(metaData['00280107']),\n      redPaletteColorLookupTableDescriptor: getNumberValues(metaData['00281101']),\n      greenPaletteColorLookupTableDescriptor: getNumberValues(metaData['00281102']),\n      bluePaletteColorLookupTableDescriptor: getNumberValues(metaData['00281103']),\n      redPaletteColorLookupTableData: getNumberValues(metaData['00281201']),\n      greenPaletteColorLookupTableData: getNumberValues(metaData['00281202']),\n      bluePaletteColorLookupTableData: getNumberValues(metaData['00281203'])\n    };\n  }\n\n  if (type === 'voiLutModule') {\n    return {\n      // TODO VOT LUT Sequence\n      windowCenter: getNumberValues(metaData['00281050'], 1),\n      windowWidth: getNumberValues(metaData['00281051'], 1)\n    };\n  }\n\n  if (type === 'modalityLutModule') {\n    return {\n      // TODO VOT LUT Sequence\n      rescaleIntercept: getNumberValue(metaData['00281052']),\n      rescaleSlope: getNumberValue(metaData['00281053']),\n      rescaleType: getValue(metaData['00281054'])\n    };\n  }\n\n  if (type === 'sopCommonModule') {\n    return {\n      sopClassUID: getValue(metaData['00080016']),\n      sopInstanceUID: getValue(metaData['00080018'])\n    };\n  }\n\n  if (type === 'petIsotopeModule') {\n    const radiopharmaceuticalInfo = getValue(metaData['00540016']);\n\n    if (radiopharmaceuticalInfo === undefined) {\n      return;\n    }\n\n    return {\n      radiopharmaceuticalInfo: {\n        radiopharmaceuticalStartTime: dicomParser.parseTM(getValue(radiopharmaceuticalInfo['00181072'], 0, '')),\n        radionuclideTotalDose: getNumberValue(radiopharmaceuticalInfo['00181074']),\n        radionuclideHalfLife: getNumberValue(radiopharmaceuticalInfo['00181075'])\n      }\n    };\n  }\n\n}\n\nexport default metaDataProvider;\n\n\n\n// WEBPACK FOOTER //\n// ./imageLoader/wadors/metaData/metaDataProvider.js","import { external } from '../../externalModules.js';\nimport { getOptions } from './options.js';\n\nfunction xhrRequest (url, imageId, headers = {}, params = {}) {\n  const cornerstone = external.cornerstone;\n  const options = getOptions();\n\n  // Make the request for the DICOM P10 SOP Instance\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n\n    xhr.open('get', url, true);\n    xhr.responseType = 'arraybuffer';\n    options.beforeSend(xhr, imageId);\n    Object.keys(headers).forEach(function (key) {\n      xhr.setRequestHeader(key, headers[key]);\n    });\n\n    params.deferred = {\n      resolve,\n      reject\n    };\n    params.url = url;\n    params.imageId = imageId;\n\n    // Event triggered when downloading an image starts\n    xhr.onloadstart = function (event) {\n      // Action\n      if (options.onloadstart) {\n        options.onloadstart(event, params);\n      }\n\n      // Event\n      const eventData = {\n        url,\n        imageId\n      };\n\n      cornerstone.triggerEvent(cornerstone.events, 'cornerstoneimageloadstart', eventData);\n    };\n\n    // Event triggered when downloading an image ends\n    xhr.onloadend = function (event) {\n      // Action\n      if (options.onloadend) {\n        options.onloadend(event, params);\n      }\n\n      const eventData = {\n        url,\n        imageId\n      };\n\n      // Event\n      cornerstone.triggerEvent(cornerstone.events, 'cornerstoneimageloadend', eventData);\n    };\n\n    // handle response data\n    xhr.onreadystatechange = function (event) {\n      // Action\n      if (options.onreadystatechange) {\n        options.onreadystatechange(event, params);\n\n        return;\n      }\n\n      // Default action\n      // TODO: consider sending out progress messages here as we receive the pixel data\n      if (xhr.readyState === 4) {\n        if (xhr.status === 200) {\n          resolve(xhr.response, xhr);\n        } else {\n          // request failed, reject the Promise\n          reject(xhr);\n        }\n      }\n    };\n\n    // Event triggered when downloading an image progresses\n    xhr.onprogress = function (oProgress) {\n      // console.log('progress:',oProgress)\n      const loaded = oProgress.loaded; // evt.loaded the bytes browser receive\n      let total;\n      let percentComplete;\n\n      if (oProgress.lengthComputable) {\n        total = oProgress.total; // evt.total the total bytes seted by the header\n        percentComplete = Math.round((loaded / total) * 100);\n      }\n\n      // Action\n      if (options.onprogress) {\n        options.onprogress(oProgress, params);\n      }\n\n      // Event\n      const eventData = {\n        url,\n        imageId,\n        loaded,\n        total,\n        percentComplete\n      };\n\n      cornerstone.triggerEvent(cornerstone.events, 'cornerstoneimageloadprogress', eventData);\n    };\n\n    xhr.send();\n  });\n}\n\nexport default xhrRequest;\n\n\n\n// WEBPACK FOOTER //\n// ./imageLoader/internal/xhrRequest.js","import loadImage from './loadImage.js';\nimport { metaDataProvider } from './metaData/index.js';\n\nexport default function (cornerstone) {\n  // register wadors scheme and metadata provider\n  cornerstone.registerImageLoader('wadors', loadImage);\n  cornerstone.metaData.addProvider(metaDataProvider);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./imageLoader/wadors/register.js","import getEncapsulatedImageFrame from './getEncapsulatedImageFrame.js';\nimport getUncompressedImageFrame from './getUncompressedImageFrame.js';\n\nfunction getPixelData (dataSet, frameIndex = 0) {\n  const pixelDataElement = dataSet.elements.x7fe00010 || dataSet.elements.x7fe00008;\n\n  if (pixelDataElement.encapsulatedPixelData) {\n    return getEncapsulatedImageFrame(dataSet, frameIndex);\n  }\n\n  return getUncompressedImageFrame(dataSet, frameIndex);\n}\n\nexport default getPixelData;\n\n\n\n// WEBPACK FOOTER //\n// ./imageLoader/wadouri/getPixelData.js","import { loadImage } from './loadImage.js';\nimport { metaDataProvider } from './metaData/index.js';\n\nexport default function (cornerstone) {\n  // register dicomweb and wadouri image loader prefixes\n  cornerstone.registerImageLoader('dicomweb', loadImage);\n  cornerstone.registerImageLoader('wadouri', loadImage);\n  cornerstone.registerImageLoader('dicomfile', loadImage);\n\n  // add wadouri metadata provider\n  cornerstone.metaData.addProvider(metaDataProvider);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./imageLoader/wadouri/register.js","import { setOptions } from './internal/index.js';\n\nfunction configure (options) {\n  setOptions(options);\n}\n\nexport default configure;\n\n\n\n// WEBPACK FOOTER //\n// ./imageLoader/configure.js"],"sourceRoot":""}